{
	"id": "6e9f4e3e53d4e37f9b5eb701a901cc95",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"CasaDeCambio.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./CasaDeCambioAbstract.sol\";\r\n\r\n/**\r\n    Crie um contrato que herde desse, receba o endereço de um ERC20 via construtor e venda por ether\r\n    Uma oferta já comprada não pode ser vendida novamente\r\n**/\r\n\r\ninterface TokenInterface {\r\n    function minter(address account, uint256 amount) external;\r\n}\r\ncontract CasaDeCambio is CasaDeCambioAbstract{\r\n\r\n    ERC20 public immutable token;\r\n    struct Oferta {\r\n        uint256 id;\r\n        uint256 quantidadeTokens;\r\n        uint256 precoLote;\r\n        address dono;\r\n        bool ehAtivo;\r\n    }\r\n    uint256 qtddOfertas = 0;\r\n    uint256 qtddOfertasAtivas = 0;\r\n    Oferta pOfertaAtiva;\r\n\r\n    mapping(uint256 => Oferta) public ofertas;\r\n    mapping(uint256 => Oferta) public ofertasAtivas;\r\n\r\n\r\n    constructor(address tokenAdress){\r\n        token = ERC20(tokenAdress);\r\n    }\r\n    \r\n    /**\r\n        1.Apenas o dono pode chamar\r\n        2.Validar a quantidadeTokens e precoLote\r\n        3.Transferir tokens do dono para o contrato\r\n        4.Salvar a oferta\r\n        5.Emitir o evento ofertaRealizada\r\n\r\n        *Importante precoLote é em Wei, para conversão: https://eth-converter.com/\r\n    **/\r\n    function realizaOferta(uint256 quantidadeTokens, uint256 precoLote) external apenasDono override {\r\n        require(quantidadeTokens !=0, unicode\"Não pode ser zero\");\r\n        require(token.balanceOf(address(msg.sender)) > 100000, \"sdasd \");\r\n        require(precoLote !=0, \"Nao pode ser zero\");\r\n\r\n        token.transferFrom(msg.sender, address(this), quantidadeTokens);\r\n        \r\n        Oferta memory novaOferta;\r\n        novaOferta.quantidadeTokens = quantidadeTokens;\r\n        novaOferta.precoLote = precoLote;\r\n        novaOferta.dono = address(msg.sender);\r\n        novaOferta.ehAtivo = true;\r\n        qtddOfertas = qtddOfertas+1;\r\n        novaOferta.id = qtddOfertas;\r\n        ofertas[novaOferta.id] = novaOferta;\r\n        ofertasAtivas[novaOferta.id] = novaOferta;\r\n\r\n        qtddOfertasAtivas = qtddOfertasAtivas +1;\r\n        if(qtddOfertasAtivas == 1){\r\n            pOfertaAtiva = novaOferta;\r\n        }\r\n        emit ofertaRealizada(novaOferta.id, quantidadeTokens, precoLote);\r\n    }\r\n\r\n    /**\r\n        1.Checar se o id é valido\r\n        2.Checar se a oferta está ativa\r\n        3.Checar se o valor repassado bate com o precoLote\r\n        4.Recuperar a oferta\r\n        5.Transferir a quantidade de tokens para a carteira de quem chama\r\n    **/\r\n    function compra(uint256 id) external payable override{\r\n        require(id <= qtddOfertas, \"id invalido\");\r\n        Oferta memory oferta = ofertas[id];\r\n        require(oferta.ehAtivo == true, \"deve ser ativo\");\r\n\r\n        token.transferFrom(address(this), address(msg.sender), oferta.quantidadeTokens);\r\n        oferta.ehAtivo = false;\r\n        ofertas[id] = oferta;\r\n\r\n        qtddOfertasAtivas = qtddOfertasAtivas -1;\r\n\r\n        for (uint i; i< qtddOfertas; i++) {\r\n            Oferta memory ofertaTest = ofertas[i];\r\n            if(ofertaTest.ehAtivo){\r\n                qtddOfertasAtivas = qtddOfertasAtivas +1;\r\n                if(qtddOfertasAtivas == 1){\r\n                    pOfertaAtiva = ofertaTest;\r\n                }\r\n            }\r\n             \r\n        }\r\n    }\r\n\r\n    /**\r\n        Retornar a quantidade de ofertas ativas e o id da primeira oferta disponível\r\n    **/\r\n    function consultaOfertas() external view override returns (uint, uint){\r\n        return (qtddOfertasAtivas, pOfertaAtiva.id);\r\n    }\r\n    \r\n    // Desafio opcional: Retornar uma lista das ofertas ativas\r\n\r\n    //Lambuja\r\n    function sacarFundos() public apenasDono override{\r\n        address payable recebedor = payable(msg.sender);\r\n        recebedor.transfer(address(this).balance);\r\n    }\r\n\r\n    /* Dicas para armazenar ofertas:\r\n        Mapping:\r\n            mapping(xtype => ytype) public zMap;\r\n            zMap[i] = valor;\r\n            valor = zMap[i];\r\n            //Importante: Mapping nunca remove um elemento, controle de inativar via código\r\n        Array Dinamico:\r\n            int[] teste;\r\n            teste.push(int); //Inclui no fim da lista\r\n            teste.length; // tamanho do array\r\n            teste.pop(); // Remove o ultimo elemento\r\n            teste[i];\r\n    */\r\n}"
			},
			"CasaDeCambioAbstract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./ControleAcessoDono.sol\";\r\n\r\n/**\r\n    Crie um contrato que herde desse, receba o endereço de um ERC20 via construtor e venda por ether\r\n    Uma oferta já comprada não pode ser vendida novamente\r\n**/\r\nabstract contract CasaDeCambioAbstract is ControleAcessoDono {\r\n\r\n    //Event a ser emitido\r\n    event ofertaRealizada(uint256 ultimaOfertaAdicionada, uint256 quantidade, uint256 preco);\r\n\r\n    /**\r\n        1.Apenas o dono pode chamar\r\n        2.Validar a quantidadeTokens e precoLote\r\n        3.Transferir tokens do dono para o contrato\r\n        4.Salvar a oferta\r\n        5.Emitir o evento ofertaRealizada\r\n\r\n        *Importante precoLote é em Wei, para conversão: https://eth-converter.com/\r\n    **/\r\n    function realizaOferta(uint256 quantidadeTokens, uint256 precoLote) external virtual;\r\n\r\n    /**\r\n        1.Checar se o id é valido\r\n        2.Checar se a oferta está ativa\r\n        3.Checar se o valor repassado bate com o precoLote\r\n        4.Recuperar a oferta\r\n        5.Transferir a quantidade de tokens para a carteira de quem chama\r\n    **/\r\n    function compra(uint256 id) external payable virtual;\r\n\r\n    /**\r\n        Retornar a quantidade de ofertas ativas e o id da primeira oferta disponível\r\n    **/\r\n    function consultaOfertas() external view virtual returns (uint, uint);\r\n    \r\n    // Desafio opcional: Retornar uma lista das ofertas ativas\r\n\r\n    //Lambuja\r\n    function sacarFundos() public apenasDono virtual{\r\n        address payable recebedor = payable(msg.sender);\r\n        recebedor.transfer(address(this).balance);\r\n    }\r\n\r\n    /* Dicas para armazenar ofertas:\r\n        Mapping:\r\n            mapping(xtype => ytype) public zMap;\r\n            zMap[i] = valor;\r\n            valor = zMap[i];\r\n            //Importante: Mapping nunca remove um elemento, controle de inativar via código\r\n        Array Dinamico:\r\n            int[] teste;\r\n            teste.push(int); //Inclui no fim da lista\r\n            teste.length; // tamanho do array\r\n            teste.pop(); // Remove o ultimo elemento\r\n            teste[i];\r\n    */\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"ControleAcessoDono.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract ControleAcessoDono {\r\n    address public owner;\r\n\r\n    modifier apenasDono() {\r\n        require(msg.sender == owner, unicode\"Deve ser dono para chamar essa função\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CasaDeCambio.sol": {
				"CasaDeCambio": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAdress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ultimaOfertaAdicionada",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantidade",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "preco",
									"type": "uint256"
								}
							],
							"name": "ofertaRealizada",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "compra",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consultaOfertas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ofertas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantidadeTokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "precoLote",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "dono",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "ehAtivo",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ofertasAtivas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantidadeTokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "precoLote",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "dono",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "ehAtivo",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantidadeTokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "precoLote",
									"type": "uint256"
								}
							],
							"name": "realizaOferta",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sacarFundos",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CasaDeCambio.sol\":438:4340  contract CasaDeCambio is CasaDeCambioAbstract{... */\n  mstore(0x40, 0xa0)\n    /* \"CasaDeCambio.sol\":707:708  0 */\n  0x00\n    /* \"CasaDeCambio.sol\":685:708  uint256 qtddOfertas = 0 */\n  0x01\n  sstore\n    /* \"CasaDeCambio.sol\":743:744  0 */\n  0x00\n    /* \"CasaDeCambio.sol\":715:744  uint256 qtddOfertasAtivas = 0 */\n  0x02\n  sstore\n    /* \"CasaDeCambio.sol\":885:962  constructor(address tokenAdress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ControleAcessoDono.sol\":368:378  msg.sender */\n  caller\n    /* \"ControleAcessoDono.sol\":360:365  owner */\n  0x00\n  dup1\n    /* \"ControleAcessoDono.sol\":360:378  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"CasaDeCambio.sol\":942:953  tokenAdress */\n  dup1\n    /* \"CasaDeCambio.sol\":928:954  token = ERC20(tokenAdress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"CasaDeCambio.sol\":885:962  constructor(address tokenAdress){... */\n  pop\n    /* \"CasaDeCambio.sol\":438:4340  contract CasaDeCambio is CasaDeCambioAbstract{... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":932:1051   */\ntag_29:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_31\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"CasaDeCambio.sol\":438:4340  contract CasaDeCambio is CasaDeCambioAbstract{... */\ntag_8:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"CasaDeCambio.sol\":438:4340  contract CasaDeCambio is CasaDeCambioAbstract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7cb02950\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7cb02950\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x90041a40\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x2c562a44\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x506e1d52\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x56afff7c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5f6df038\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"CasaDeCambio.sol\":1290:2288  function realizaOferta(uint256 quantidadeTokens, uint256 precoLote) external apenasDono override {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"CasaDeCambio.sol\":3445:3577  function consultaOfertas() external view override returns (uint, uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CasaDeCambio.sol\":779:820  mapping(uint256 => Oferta) public ofertas */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CasaDeCambio.sol\":3670:3837  function sacarFundos() public apenasDono override{... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"CasaDeCambio.sol\":2557:3332  function compra(uint256 id) external payable override{... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"ControleAcessoDono.sol\":167:187  address public owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CasaDeCambio.sol\":827:874  mapping(uint256 => Oferta) public ofertasAtivas */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CasaDeCambio.sol\":492:520  ERC20 public immutable token */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CasaDeCambio.sol\":1290:2288  function realizaOferta(uint256 quantidadeTokens, uint256 precoLote) external apenasDono override {... */\n    tag_15:\n        /* \"ControleAcessoDono.sol\":251:256  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ControleAcessoDono.sol\":237:256  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ControleAcessoDono.sol\":237:247  msg.sender */\n      caller\n        /* \"ControleAcessoDono.sol\":237:256  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ControleAcessoDono.sol\":229:307  require(msg.sender == owner, unicode\"Deve ser dono para chamar essa função\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"CasaDeCambio.sol\":1425:1426  0 */\n      0x00\n        /* \"CasaDeCambio.sol\":1406:1422  quantidadeTokens */\n      dup3\n        /* \"CasaDeCambio.sol\":1406:1426  quantidadeTokens !=0 */\n      sub\n        /* \"CasaDeCambio.sol\":1398:1456  require(quantidadeTokens !=0, unicode\"Não pode ser zero\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"CasaDeCambio.sol\":1514:1520  100000 */\n      0x0186a0\n        /* \"CasaDeCambio.sol\":1475:1480  token */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"CasaDeCambio.sol\":1475:1490  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"CasaDeCambio.sol\":1499:1509  msg.sender */\n      caller\n        /* \"CasaDeCambio.sol\":1475:1511  token.balanceOf(address(msg.sender)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"CasaDeCambio.sol\":1475:1520  token.balanceOf(address(msg.sender)) > 100000 */\n      gt\n        /* \"CasaDeCambio.sol\":1467:1531  require(token.balanceOf(address(msg.sender)) > 100000, \"sdasd \") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"CasaDeCambio.sol\":1562:1563  0 */\n      0x00\n        /* \"CasaDeCambio.sol\":1550:1559  precoLote */\n      dup2\n        /* \"CasaDeCambio.sol\":1550:1563  precoLote !=0 */\n      sub\n        /* \"CasaDeCambio.sol\":1542:1585  require(precoLote !=0, \"Nao pode ser zero\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"CasaDeCambio.sol\":1598:1603  token */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"CasaDeCambio.sol\":1598:1616  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CasaDeCambio.sol\":1617:1627  msg.sender */\n      caller\n        /* \"CasaDeCambio.sol\":1637:1641  this */\n      address\n        /* \"CasaDeCambio.sol\":1644:1660  quantidadeTokens */\n      dup6\n        /* \"CasaDeCambio.sol\":1598:1661  token.transferFrom(msg.sender, address(this), quantidadeTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"CasaDeCambio.sol\":1682:1706  Oferta memory novaOferta */\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"CasaDeCambio.sol\":1747:1763  quantidadeTokens */\n      dup3\n        /* \"CasaDeCambio.sol\":1717:1727  novaOferta */\n      dup2\n        /* \"CasaDeCambio.sol\":1717:1744  novaOferta.quantidadeTokens */\n      0x20\n      add\n        /* \"CasaDeCambio.sol\":1717:1763  novaOferta.quantidadeTokens = quantidadeTokens */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":1797:1806  precoLote */\n      dup2\n        /* \"CasaDeCambio.sol\":1774:1784  novaOferta */\n      dup2\n        /* \"CasaDeCambio.sol\":1774:1794  novaOferta.precoLote */\n      0x40\n      add\n        /* \"CasaDeCambio.sol\":1774:1806  novaOferta.precoLote = precoLote */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":1843:1853  msg.sender */\n      caller\n        /* \"CasaDeCambio.sol\":1817:1827  novaOferta */\n      dup2\n        /* \"CasaDeCambio.sol\":1817:1832  novaOferta.dono */\n      0x60\n      add\n        /* \"CasaDeCambio.sol\":1817:1854  novaOferta.dono = address(msg.sender) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":1886:1890  true */\n      0x01\n        /* \"CasaDeCambio.sol\":1865:1875  novaOferta */\n      dup2\n        /* \"CasaDeCambio.sol\":1865:1883  novaOferta.ehAtivo */\n      0x80\n      add\n        /* \"CasaDeCambio.sol\":1865:1890  novaOferta.ehAtivo = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":1927:1928  1 */\n      0x01\n        /* \"CasaDeCambio.sol\":1915:1926  qtddOfertas */\n      dup1\n      sload\n        /* \"CasaDeCambio.sol\":1915:1928  qtddOfertas+1 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"CasaDeCambio.sol\":1901:1912  qtddOfertas */\n      0x01\n        /* \"CasaDeCambio.sol\":1901:1928  qtddOfertas = qtddOfertas+1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CasaDeCambio.sol\":1955:1966  qtddOfertas */\n      sload(0x01)\n        /* \"CasaDeCambio.sol\":1939:1949  novaOferta */\n      dup2\n        /* \"CasaDeCambio.sol\":1939:1952  novaOferta.id */\n      0x00\n      add\n        /* \"CasaDeCambio.sol\":1939:1966  novaOferta.id = qtddOfertas */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2002:2012  novaOferta */\n      dup1\n        /* \"CasaDeCambio.sol\":1977:1984  ofertas */\n      0x07\n        /* \"CasaDeCambio.sol\":1977:1999  ofertas[novaOferta.id] */\n      0x00\n        /* \"CasaDeCambio.sol\":1985:1995  novaOferta */\n      dup4\n        /* \"CasaDeCambio.sol\":1985:1998  novaOferta.id */\n      0x00\n      add\n      mload\n        /* \"CasaDeCambio.sol\":1977:1999  ofertas[novaOferta.id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CasaDeCambio.sol\":1977:2012  ofertas[novaOferta.id] = novaOferta */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2054:2064  novaOferta */\n      dup1\n        /* \"CasaDeCambio.sol\":2023:2036  ofertasAtivas */\n      0x08\n        /* \"CasaDeCambio.sol\":2023:2051  ofertasAtivas[novaOferta.id] */\n      0x00\n        /* \"CasaDeCambio.sol\":2037:2047  novaOferta */\n      dup4\n        /* \"CasaDeCambio.sol\":2037:2050  novaOferta.id */\n      0x00\n      add\n      mload\n        /* \"CasaDeCambio.sol\":2023:2051  ofertasAtivas[novaOferta.id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CasaDeCambio.sol\":2023:2064  ofertasAtivas[novaOferta.id] = novaOferta */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2116:2117  1 */\n      0x01\n        /* \"CasaDeCambio.sol\":2097:2114  qtddOfertasAtivas */\n      sload(0x02)\n        /* \"CasaDeCambio.sol\":2097:2117  qtddOfertasAtivas +1 */\n      tag_78\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_78:\n        /* \"CasaDeCambio.sol\":2077:2094  qtddOfertasAtivas */\n      0x02\n        /* \"CasaDeCambio.sol\":2077:2117  qtddOfertasAtivas = qtddOfertasAtivas +1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CasaDeCambio.sol\":2152:2153  1 */\n      0x01\n        /* \"CasaDeCambio.sol\":2131:2148  qtddOfertasAtivas */\n      sload(0x02)\n        /* \"CasaDeCambio.sol\":2131:2153  qtddOfertasAtivas == 1 */\n      sub\n        /* \"CasaDeCambio.sol\":2128:2206  if(qtddOfertasAtivas == 1){... */\n      tag_79\n      jumpi\n        /* \"CasaDeCambio.sol\":2184:2194  novaOferta */\n      dup1\n        /* \"CasaDeCambio.sol\":2169:2181  pOfertaAtiva */\n      0x03\n        /* \"CasaDeCambio.sol\":2169:2194  pOfertaAtiva = novaOferta */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2128:2206  if(qtddOfertasAtivas == 1){... */\n    tag_79:\n        /* \"CasaDeCambio.sol\":2221:2280  ofertaRealizada(novaOferta.id, quantidadeTokens, precoLote) */\n      0x65fed65ff7cd6b2d79d64e55d0439fba77cb42a9adabf9fa002ea4c20a1f81e1\n        /* \"CasaDeCambio.sol\":2237:2247  novaOferta */\n      dup2\n        /* \"CasaDeCambio.sol\":2237:2250  novaOferta.id */\n      0x00\n      add\n      mload\n        /* \"CasaDeCambio.sol\":2252:2268  quantidadeTokens */\n      dup5\n        /* \"CasaDeCambio.sol\":2270:2279  precoLote */\n      dup5\n        /* \"CasaDeCambio.sol\":2221:2280  ofertaRealizada(novaOferta.id, quantidadeTokens, precoLote) */\n      mload(0x40)\n      tag_80\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"CasaDeCambio.sol\":1387:2288  {... */\n      pop\n        /* \"CasaDeCambio.sol\":1290:2288  function realizaOferta(uint256 quantidadeTokens, uint256 precoLote) external apenasDono override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CasaDeCambio.sol\":3445:3577  function consultaOfertas() external view override returns (uint, uint){... */\n    tag_18:\n        /* \"CasaDeCambio.sol\":3504:3508  uint */\n      0x00\n        /* \"CasaDeCambio.sol\":3510:3514  uint */\n      dup1\n        /* \"CasaDeCambio.sol\":3534:3551  qtddOfertasAtivas */\n      sload(0x02)\n        /* \"CasaDeCambio.sol\":3553:3565  pOfertaAtiva */\n      0x03\n        /* \"CasaDeCambio.sol\":3553:3568  pOfertaAtiva.id */\n      0x00\n      add\n      sload\n        /* \"CasaDeCambio.sol\":3526:3569  return (qtddOfertasAtivas, pOfertaAtiva.id) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"CasaDeCambio.sol\":3445:3577  function consultaOfertas() external view override returns (uint, uint){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CasaDeCambio.sol\":779:820  mapping(uint256 => Oferta) public ofertas */\n    tag_25:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"CasaDeCambio.sol\":3670:3837  function sacarFundos() public apenasDono override{... */\n    tag_30:\n        /* \"ControleAcessoDono.sol\":251:256  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ControleAcessoDono.sol\":237:256  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ControleAcessoDono.sol\":237:247  msg.sender */\n      caller\n        /* \"ControleAcessoDono.sol\":237:256  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ControleAcessoDono.sol\":229:307  require(msg.sender == owner, unicode\"Deve ser dono para chamar essa função\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_52\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"CasaDeCambio.sol\":3730:3755  address payable recebedor */\n      0x00\n        /* \"CasaDeCambio.sol\":3766:3776  msg.sender */\n      caller\n        /* \"CasaDeCambio.sol\":3730:3777  address payable recebedor = payable(msg.sender) */\n      swap1\n      pop\n        /* \"CasaDeCambio.sol\":3788:3797  recebedor */\n      dup1\n        /* \"CasaDeCambio.sol\":3788:3806  recebedor.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CasaDeCambio.sol\":3788:3829  recebedor.transfer(address(this).balance) */\n      0x08fc\n        /* \"CasaDeCambio.sol\":3807:3828  address(this).balance */\n      selfbalance\n        /* \"CasaDeCambio.sol\":3788:3829  recebedor.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n        /* \"CasaDeCambio.sol\":3719:3837  {... */\n      pop\n        /* \"CasaDeCambio.sol\":3670:3837  function sacarFundos() public apenasDono override{... */\n      jump\t// out\n        /* \"CasaDeCambio.sol\":2557:3332  function compra(uint256 id) external payable override{... */\n    tag_33:\n        /* \"CasaDeCambio.sol\":2635:2646  qtddOfertas */\n      sload(0x01)\n        /* \"CasaDeCambio.sol\":2629:2631  id */\n      dup2\n        /* \"CasaDeCambio.sol\":2629:2646  id <= qtddOfertas */\n      gt\n      iszero\n        /* \"CasaDeCambio.sol\":2621:2662  require(id <= qtddOfertas, \"id invalido\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"CasaDeCambio.sol\":2673:2693  Oferta memory oferta */\n      0x00\n        /* \"CasaDeCambio.sol\":2696:2703  ofertas */\n      0x07\n        /* \"CasaDeCambio.sol\":2696:2707  ofertas[id] */\n      0x00\n        /* \"CasaDeCambio.sol\":2704:2706  id */\n      dup4\n        /* \"CasaDeCambio.sol\":2696:2707  ofertas[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CasaDeCambio.sol\":2673:2707  Oferta memory oferta = ofertas[id] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"CasaDeCambio.sol\":2744:2748  true */\n      0x01\n        /* \"CasaDeCambio.sol\":2726:2748  oferta.ehAtivo == true */\n      iszero\n      iszero\n        /* \"CasaDeCambio.sol\":2726:2732  oferta */\n      dup2\n        /* \"CasaDeCambio.sol\":2726:2740  oferta.ehAtivo */\n      0x80\n      add\n      mload\n        /* \"CasaDeCambio.sol\":2726:2748  oferta.ehAtivo == true */\n      iszero\n      iszero\n      eq\n        /* \"CasaDeCambio.sol\":2718:2767  require(oferta.ehAtivo == true, \"deve ser ativo\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"CasaDeCambio.sol\":2780:2785  token */\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n        /* \"CasaDeCambio.sol\":2780:2798  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"CasaDeCambio.sol\":2807:2811  this */\n      address\n        /* \"CasaDeCambio.sol\":2822:2832  msg.sender */\n      caller\n        /* \"CasaDeCambio.sol\":2835:2841  oferta */\n      dup5\n        /* \"CasaDeCambio.sol\":2835:2858  oferta.quantidadeTokens */\n      0x20\n      add\n      mload\n        /* \"CasaDeCambio.sol\":2780:2859  token.transferFrom(address(this), address(msg.sender), oferta.quantidadeTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_99:\n      pop\n        /* \"CasaDeCambio.sol\":2887:2892  false */\n      0x00\n        /* \"CasaDeCambio.sol\":2870:2876  oferta */\n      dup2\n        /* \"CasaDeCambio.sol\":2870:2884  oferta.ehAtivo */\n      0x80\n      add\n        /* \"CasaDeCambio.sol\":2870:2892  oferta.ehAtivo = false */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2917:2923  oferta */\n      dup1\n        /* \"CasaDeCambio.sol\":2903:2910  ofertas */\n      0x07\n        /* \"CasaDeCambio.sol\":2903:2914  ofertas[id] */\n      0x00\n        /* \"CasaDeCambio.sol\":2911:2913  id */\n      dup5\n        /* \"CasaDeCambio.sol\":2903:2914  ofertas[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CasaDeCambio.sol\":2903:2923  ofertas[id] = oferta */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2975:2976  1 */\n      0x01\n        /* \"CasaDeCambio.sol\":2956:2973  qtddOfertasAtivas */\n      sload(0x02)\n        /* \"CasaDeCambio.sol\":2956:2976  qtddOfertasAtivas -1 */\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"CasaDeCambio.sol\":2936:2953  qtddOfertasAtivas */\n      0x02\n        /* \"CasaDeCambio.sol\":2936:2976  qtddOfertasAtivas = qtddOfertasAtivas -1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CasaDeCambio.sol\":2994:3000  uint i */\n      0x00\n        /* \"CasaDeCambio.sol\":2989:3325  for (uint i; i< qtddOfertas; i++) {... */\n    tag_102:\n        /* \"CasaDeCambio.sol\":3005:3016  qtddOfertas */\n      sload(0x01)\n        /* \"CasaDeCambio.sol\":3002:3003  i */\n      dup2\n        /* \"CasaDeCambio.sol\":3002:3016  i< qtddOfertas */\n      lt\n        /* \"CasaDeCambio.sol\":2989:3325  for (uint i; i< qtddOfertas; i++) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"CasaDeCambio.sol\":3038:3062  Oferta memory ofertaTest */\n      0x00\n        /* \"CasaDeCambio.sol\":3065:3072  ofertas */\n      0x07\n        /* \"CasaDeCambio.sol\":3065:3075  ofertas[i] */\n      0x00\n        /* \"CasaDeCambio.sol\":3073:3074  i */\n      dup4\n        /* \"CasaDeCambio.sol\":3065:3075  ofertas[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CasaDeCambio.sol\":3038:3075  Oferta memory ofertaTest = ofertas[i] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"CasaDeCambio.sol\":3093:3103  ofertaTest */\n      dup1\n        /* \"CasaDeCambio.sol\":3093:3111  ofertaTest.ehAtivo */\n      0x80\n      add\n      mload\n        /* \"CasaDeCambio.sol\":3090:3299  if(ofertaTest.ehAtivo){... */\n      iszero\n      tag_105\n      jumpi\n        /* \"CasaDeCambio.sol\":3170:3171  1 */\n      0x01\n        /* \"CasaDeCambio.sol\":3151:3168  qtddOfertasAtivas */\n      sload(0x02)\n        /* \"CasaDeCambio.sol\":3151:3171  qtddOfertasAtivas +1 */\n      tag_106\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_106:\n        /* \"CasaDeCambio.sol\":3131:3148  qtddOfertasAtivas */\n      0x02\n        /* \"CasaDeCambio.sol\":3131:3171  qtddOfertasAtivas = qtddOfertasAtivas +1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CasaDeCambio.sol\":3214:3215  1 */\n      0x01\n        /* \"CasaDeCambio.sol\":3193:3210  qtddOfertasAtivas */\n      sload(0x02)\n        /* \"CasaDeCambio.sol\":3193:3215  qtddOfertasAtivas == 1 */\n      sub\n        /* \"CasaDeCambio.sol\":3190:3284  if(qtddOfertasAtivas == 1){... */\n      tag_107\n      jumpi\n        /* \"CasaDeCambio.sol\":3254:3264  ofertaTest */\n      dup1\n        /* \"CasaDeCambio.sol\":3239:3251  pOfertaAtiva */\n      0x03\n        /* \"CasaDeCambio.sol\":3239:3264  pOfertaAtiva = ofertaTest */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":3190:3284  if(qtddOfertasAtivas == 1){... */\n    tag_107:\n        /* \"CasaDeCambio.sol\":3090:3299  if(ofertaTest.ehAtivo){... */\n    tag_105:\n        /* \"CasaDeCambio.sol\":3023:3325  {... */\n      pop\n        /* \"CasaDeCambio.sol\":3018:3021  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"CasaDeCambio.sol\":2989:3325  for (uint i; i< qtddOfertas; i++) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"CasaDeCambio.sol\":2610:3332  {... */\n      pop\n        /* \"CasaDeCambio.sol\":2557:3332  function compra(uint256 id) external payable override{... */\n      pop\n      jump\t// out\n        /* \"ControleAcessoDono.sol\":167:187  address public owner */\n    tag_36:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"CasaDeCambio.sol\":827:874  mapping(uint256 => Oferta) public ofertasAtivas */\n    tag_42:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"CasaDeCambio.sol\":492:520  ERC20 public immutable token */\n    tag_46:\n      immutable(\"0x3fd68d21223d6fc23edec694e1b0dd90d283ae600f00f762095afcbb0d71f155\")\n      dup2\n      jump\t// out\n    tag_75:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_109:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_111:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_112:\n        /* \"#utility.yul\":490:514   */\n      tag_148\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_111\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_149:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_113:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_151\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_112\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_14:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_154\n      tag_109\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":783:902   */\n    tag_153:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_155\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_113\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_156\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_113\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1288   */\n    tag_114:\n        /* \"#utility.yul\":1257:1281   */\n      tag_158\n        /* \"#utility.yul\":1275:1280   */\n      dup2\n        /* \"#utility.yul\":1257:1281   */\n      tag_111\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1252:1255   */\n      dup3\n        /* \"#utility.yul\":1245:1282   */\n      mstore\n        /* \"#utility.yul\":1170:1288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1294:1626   */\n    tag_20:\n        /* \"#utility.yul\":1415:1419   */\n      0x00\n        /* \"#utility.yul\":1453:1455   */\n      0x40\n        /* \"#utility.yul\":1442:1451   */\n      dup3\n        /* \"#utility.yul\":1438:1456   */\n      add\n        /* \"#utility.yul\":1430:1456   */\n      swap1\n      pop\n        /* \"#utility.yul\":1466:1537   */\n      tag_160\n        /* \"#utility.yul\":1534:1535   */\n      0x00\n        /* \"#utility.yul\":1523:1532   */\n      dup4\n        /* \"#utility.yul\":1519:1536   */\n      add\n        /* \"#utility.yul\":1510:1516   */\n      dup6\n        /* \"#utility.yul\":1466:1537   */\n      tag_114\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1547:1619   */\n      tag_161\n        /* \"#utility.yul\":1615:1617   */\n      0x20\n        /* \"#utility.yul\":1604:1613   */\n      dup4\n        /* \"#utility.yul\":1600:1618   */\n      add\n        /* \"#utility.yul\":1591:1597   */\n      dup5\n        /* \"#utility.yul\":1547:1619   */\n      tag_114\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1294:1626   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1961   */\n    tag_24:\n        /* \"#utility.yul\":1691:1697   */\n      0x00\n        /* \"#utility.yul\":1740:1742   */\n      0x20\n        /* \"#utility.yul\":1728:1737   */\n      dup3\n        /* \"#utility.yul\":1719:1726   */\n      dup5\n        /* \"#utility.yul\":1715:1738   */\n      sub\n        /* \"#utility.yul\":1711:1743   */\n      slt\n        /* \"#utility.yul\":1708:1827   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1746:1825   */\n      tag_164\n      tag_109\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1708:1827   */\n    tag_163:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1891:1944   */\n      tag_165\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1891:1944   */\n      tag_113\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1881:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1837:1954   */\n      pop\n        /* \"#utility.yul\":1632:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2093   */\n    tag_115:\n        /* \"#utility.yul\":2004:2011   */\n      0x00\n        /* \"#utility.yul\":2044:2086   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2037:2042   */\n      dup3\n        /* \"#utility.yul\":2033:2087   */\n      and\n        /* \"#utility.yul\":2022:2087   */\n      swap1\n      pop\n        /* \"#utility.yul\":1967:2093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2099:2195   */\n    tag_116:\n        /* \"#utility.yul\":2136:2143   */\n      0x00\n        /* \"#utility.yul\":2165:2189   */\n      tag_168\n        /* \"#utility.yul\":2183:2188   */\n      dup3\n        /* \"#utility.yul\":2165:2189   */\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2154:2189   */\n      swap1\n      pop\n        /* \"#utility.yul\":2099:2195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2201:2319   */\n    tag_117:\n        /* \"#utility.yul\":2288:2312   */\n      tag_170\n        /* \"#utility.yul\":2306:2311   */\n      dup2\n        /* \"#utility.yul\":2288:2312   */\n      tag_116\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2283:2286   */\n      dup3\n        /* \"#utility.yul\":2276:2313   */\n      mstore\n        /* \"#utility.yul\":2201:2319   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2325:2415   */\n    tag_118:\n        /* \"#utility.yul\":2359:2366   */\n      0x00\n        /* \"#utility.yul\":2402:2407   */\n      dup2\n        /* \"#utility.yul\":2395:2408   */\n      iszero\n        /* \"#utility.yul\":2388:2409   */\n      iszero\n        /* \"#utility.yul\":2377:2409   */\n      swap1\n      pop\n        /* \"#utility.yul\":2325:2415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2530   */\n    tag_119:\n        /* \"#utility.yul\":2502:2523   */\n      tag_173\n        /* \"#utility.yul\":2517:2522   */\n      dup2\n        /* \"#utility.yul\":2502:2523   */\n      tag_118\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2497:2500   */\n      dup3\n        /* \"#utility.yul\":2490:2524   */\n      mstore\n        /* \"#utility.yul\":2421:2530   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2536:3188   */\n    tag_27:\n        /* \"#utility.yul\":2735:2739   */\n      0x00\n        /* \"#utility.yul\":2773:2776   */\n      0xa0\n        /* \"#utility.yul\":2762:2771   */\n      dup3\n        /* \"#utility.yul\":2758:2777   */\n      add\n        /* \"#utility.yul\":2750:2777   */\n      swap1\n      pop\n        /* \"#utility.yul\":2787:2858   */\n      tag_175\n        /* \"#utility.yul\":2855:2856   */\n      0x00\n        /* \"#utility.yul\":2844:2853   */\n      dup4\n        /* \"#utility.yul\":2840:2857   */\n      add\n        /* \"#utility.yul\":2831:2837   */\n      dup9\n        /* \"#utility.yul\":2787:2858   */\n      tag_114\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2868:2940   */\n      tag_176\n        /* \"#utility.yul\":2936:2938   */\n      0x20\n        /* \"#utility.yul\":2925:2934   */\n      dup4\n        /* \"#utility.yul\":2921:2939   */\n      add\n        /* \"#utility.yul\":2912:2918   */\n      dup8\n        /* \"#utility.yul\":2868:2940   */\n      tag_114\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2950:3022   */\n      tag_177\n        /* \"#utility.yul\":3018:3020   */\n      0x40\n        /* \"#utility.yul\":3007:3016   */\n      dup4\n        /* \"#utility.yul\":3003:3021   */\n      add\n        /* \"#utility.yul\":2994:3000   */\n      dup7\n        /* \"#utility.yul\":2950:3022   */\n      tag_114\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3032:3104   */\n      tag_178\n        /* \"#utility.yul\":3100:3102   */\n      0x60\n        /* \"#utility.yul\":3089:3098   */\n      dup4\n        /* \"#utility.yul\":3085:3103   */\n      add\n        /* \"#utility.yul\":3076:3082   */\n      dup6\n        /* \"#utility.yul\":3032:3104   */\n      tag_117\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3114:3181   */\n      tag_179\n        /* \"#utility.yul\":3176:3179   */\n      0x80\n        /* \"#utility.yul\":3165:3174   */\n      dup4\n        /* \"#utility.yul\":3161:3180   */\n      add\n        /* \"#utility.yul\":3152:3158   */\n      dup5\n        /* \"#utility.yul\":3114:3181   */\n      tag_119\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2536:3188   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3194:3416   */\n    tag_38:\n        /* \"#utility.yul\":3287:3291   */\n      0x00\n        /* \"#utility.yul\":3325:3327   */\n      0x20\n        /* \"#utility.yul\":3314:3323   */\n      dup3\n        /* \"#utility.yul\":3310:3328   */\n      add\n        /* \"#utility.yul\":3302:3328   */\n      swap1\n      pop\n        /* \"#utility.yul\":3338:3409   */\n      tag_181\n        /* \"#utility.yul\":3406:3407   */\n      0x00\n        /* \"#utility.yul\":3395:3404   */\n      dup4\n        /* \"#utility.yul\":3391:3408   */\n      add\n        /* \"#utility.yul\":3382:3388   */\n      dup5\n        /* \"#utility.yul\":3338:3409   */\n      tag_117\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3194:3416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3422:3482   */\n    tag_120:\n        /* \"#utility.yul\":3450:3453   */\n      0x00\n        /* \"#utility.yul\":3471:3476   */\n      dup2\n        /* \"#utility.yul\":3464:3476   */\n      swap1\n      pop\n        /* \"#utility.yul\":3422:3482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3488:3630   */\n    tag_121:\n        /* \"#utility.yul\":3538:3547   */\n      0x00\n        /* \"#utility.yul\":3571:3624   */\n      tag_184\n        /* \"#utility.yul\":3589:3623   */\n      tag_185\n        /* \"#utility.yul\":3598:3622   */\n      tag_186\n        /* \"#utility.yul\":3616:3621   */\n      dup5\n        /* \"#utility.yul\":3598:3622   */\n      tag_115\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3589:3623   */\n      tag_120\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3571:3624   */\n      tag_115\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3558:3624   */\n      swap1\n      pop\n        /* \"#utility.yul\":3488:3630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3636:3762   */\n    tag_122:\n        /* \"#utility.yul\":3686:3695   */\n      0x00\n        /* \"#utility.yul\":3719:3756   */\n      tag_188\n        /* \"#utility.yul\":3750:3755   */\n      dup3\n        /* \"#utility.yul\":3719:3756   */\n      tag_121\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3706:3756   */\n      swap1\n      pop\n        /* \"#utility.yul\":3636:3762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:3908   */\n    tag_123:\n        /* \"#utility.yul\":3832:3841   */\n      0x00\n        /* \"#utility.yul\":3865:3902   */\n      tag_190\n        /* \"#utility.yul\":3896:3901   */\n      dup3\n        /* \"#utility.yul\":3865:3902   */\n      tag_122\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3852:3902   */\n      swap1\n      pop\n        /* \"#utility.yul\":3768:3908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3914:4073   */\n    tag_124:\n        /* \"#utility.yul\":4015:4066   */\n      tag_192\n        /* \"#utility.yul\":4060:4065   */\n      dup2\n        /* \"#utility.yul\":4015:4066   */\n      tag_123\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4010:4013   */\n      dup3\n        /* \"#utility.yul\":4003:4067   */\n      mstore\n        /* \"#utility.yul\":3914:4073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4079:4329   */\n    tag_48:\n        /* \"#utility.yul\":4186:4190   */\n      0x00\n        /* \"#utility.yul\":4224:4226   */\n      0x20\n        /* \"#utility.yul\":4213:4222   */\n      dup3\n        /* \"#utility.yul\":4209:4227   */\n      add\n        /* \"#utility.yul\":4201:4227   */\n      swap1\n      pop\n        /* \"#utility.yul\":4237:4322   */\n      tag_194\n        /* \"#utility.yul\":4319:4320   */\n      0x00\n        /* \"#utility.yul\":4308:4317   */\n      dup4\n        /* \"#utility.yul\":4304:4321   */\n      add\n        /* \"#utility.yul\":4295:4301   */\n      dup5\n        /* \"#utility.yul\":4237:4322   */\n      tag_124\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4079:4329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4504   */\n    tag_125:\n        /* \"#utility.yul\":4419:4430   */\n      0x00\n        /* \"#utility.yul\":4453:4459   */\n      dup3\n        /* \"#utility.yul\":4448:4451   */\n      dup3\n        /* \"#utility.yul\":4441:4460   */\n      mstore\n        /* \"#utility.yul\":4493:4497   */\n      0x20\n        /* \"#utility.yul\":4488:4491   */\n      dup3\n        /* \"#utility.yul\":4484:4498   */\n      add\n        /* \"#utility.yul\":4469:4498   */\n      swap1\n      pop\n        /* \"#utility.yul\":4335:4504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4510:4793   */\n    tag_126:\n        /* \"#utility.yul\":4650:4684   */\n      0x446576652073657220646f6e6f2070617261206368616d617220657373612066\n        /* \"#utility.yul\":4646:4647   */\n      0x00\n        /* \"#utility.yul\":4638:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4648   */\n      add\n        /* \"#utility.yul\":4627:4685   */\n      mstore\n        /* \"#utility.yul\":4719:4785   */\n      0x756ec3a7c3a36f00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4714:4716   */\n      0x20\n        /* \"#utility.yul\":4706:4712   */\n      dup3\n        /* \"#utility.yul\":4702:4717   */\n      add\n        /* \"#utility.yul\":4695:4786   */\n      mstore\n        /* \"#utility.yul\":4510:4793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4799:5165   */\n    tag_127:\n        /* \"#utility.yul\":4941:4944   */\n      0x00\n        /* \"#utility.yul\":4962:5029   */\n      tag_198\n        /* \"#utility.yul\":5026:5028   */\n      0x27\n        /* \"#utility.yul\":5021:5024   */\n      dup4\n        /* \"#utility.yul\":4962:5029   */\n      tag_125\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4955:5029   */\n      swap2\n      pop\n        /* \"#utility.yul\":5038:5131   */\n      tag_199\n        /* \"#utility.yul\":5127:5130   */\n      dup3\n        /* \"#utility.yul\":5038:5131   */\n      tag_126\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5156:5158   */\n      0x40\n        /* \"#utility.yul\":5151:5154   */\n      dup3\n        /* \"#utility.yul\":5147:5159   */\n      add\n        /* \"#utility.yul\":5140:5159   */\n      swap1\n      pop\n        /* \"#utility.yul\":4799:5165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5171:5590   */\n    tag_52:\n        /* \"#utility.yul\":5337:5341   */\n      0x00\n        /* \"#utility.yul\":5375:5377   */\n      0x20\n        /* \"#utility.yul\":5364:5373   */\n      dup3\n        /* \"#utility.yul\":5360:5378   */\n      add\n        /* \"#utility.yul\":5352:5378   */\n      swap1\n      pop\n        /* \"#utility.yul\":5424:5433   */\n      dup2\n        /* \"#utility.yul\":5418:5422   */\n      dup2\n        /* \"#utility.yul\":5414:5434   */\n      sub\n        /* \"#utility.yul\":5410:5411   */\n      0x00\n        /* \"#utility.yul\":5399:5408   */\n      dup4\n        /* \"#utility.yul\":5395:5412   */\n      add\n        /* \"#utility.yul\":5388:5435   */\n      mstore\n        /* \"#utility.yul\":5452:5583   */\n      tag_201\n        /* \"#utility.yul\":5578:5582   */\n      dup2\n        /* \"#utility.yul\":5452:5583   */\n      tag_127\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5444:5583   */\n      swap1\n      pop\n        /* \"#utility.yul\":5171:5590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5596:5810   */\n    tag_128:\n        /* \"#utility.yul\":5736:5802   */\n      0x4ec3a36f20706f646520736572207a65726f0000000000000000000000000000\n        /* \"#utility.yul\":5732:5733   */\n      0x00\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5720:5734   */\n      add\n        /* \"#utility.yul\":5713:5803   */\n      mstore\n        /* \"#utility.yul\":5596:5810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5816:6182   */\n    tag_129:\n        /* \"#utility.yul\":5958:5961   */\n      0x00\n        /* \"#utility.yul\":5979:6046   */\n      tag_204\n        /* \"#utility.yul\":6043:6045   */\n      0x12\n        /* \"#utility.yul\":6038:6041   */\n      dup4\n        /* \"#utility.yul\":5979:6046   */\n      tag_125\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5972:6046   */\n      swap2\n      pop\n        /* \"#utility.yul\":6055:6148   */\n      tag_205\n        /* \"#utility.yul\":6144:6147   */\n      dup3\n        /* \"#utility.yul\":6055:6148   */\n      tag_128\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"#utility.yul\":6168:6171   */\n      dup3\n        /* \"#utility.yul\":6164:6176   */\n      add\n        /* \"#utility.yul\":6157:6176   */\n      swap1\n      pop\n        /* \"#utility.yul\":5816:6182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6188:6607   */\n    tag_56:\n        /* \"#utility.yul\":6354:6358   */\n      0x00\n        /* \"#utility.yul\":6392:6394   */\n      0x20\n        /* \"#utility.yul\":6381:6390   */\n      dup3\n        /* \"#utility.yul\":6377:6395   */\n      add\n        /* \"#utility.yul\":6369:6395   */\n      swap1\n      pop\n        /* \"#utility.yul\":6441:6450   */\n      dup2\n        /* \"#utility.yul\":6435:6439   */\n      dup2\n        /* \"#utility.yul\":6431:6451   */\n      sub\n        /* \"#utility.yul\":6427:6428   */\n      0x00\n        /* \"#utility.yul\":6416:6425   */\n      dup4\n        /* \"#utility.yul\":6412:6429   */\n      add\n        /* \"#utility.yul\":6405:6452   */\n      mstore\n        /* \"#utility.yul\":6469:6600   */\n      tag_207\n        /* \"#utility.yul\":6595:6599   */\n      dup2\n        /* \"#utility.yul\":6469:6600   */\n      tag_129\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6461:6600   */\n      swap1\n      pop\n        /* \"#utility.yul\":6188:6607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6613:6756   */\n    tag_130:\n        /* \"#utility.yul\":6670:6675   */\n      0x00\n        /* \"#utility.yul\":6701:6707   */\n      dup2\n        /* \"#utility.yul\":6695:6708   */\n      mload\n        /* \"#utility.yul\":6686:6708   */\n      swap1\n      pop\n        /* \"#utility.yul\":6717:6750   */\n      tag_209\n        /* \"#utility.yul\":6744:6749   */\n      dup2\n        /* \"#utility.yul\":6717:6750   */\n      tag_112\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6613:6756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6762:7113   */\n    tag_61:\n        /* \"#utility.yul\":6832:6838   */\n      0x00\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6869:6878   */\n      dup3\n        /* \"#utility.yul\":6860:6867   */\n      dup5\n        /* \"#utility.yul\":6856:6879   */\n      sub\n        /* \"#utility.yul\":6852:6884   */\n      slt\n        /* \"#utility.yul\":6849:6968   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":6887:6966   */\n      tag_212\n      tag_109\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6849:6968   */\n    tag_211:\n        /* \"#utility.yul\":7007:7008   */\n      0x00\n        /* \"#utility.yul\":7032:7096   */\n      tag_213\n        /* \"#utility.yul\":7088:7095   */\n      dup5\n        /* \"#utility.yul\":7079:7085   */\n      dup3\n        /* \"#utility.yul\":7068:7077   */\n      dup6\n        /* \"#utility.yul\":7064:7086   */\n      add\n        /* \"#utility.yul\":7032:7096   */\n      tag_130\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7022:7096   */\n      swap2\n      pop\n        /* \"#utility.yul\":6978:7106   */\n      pop\n        /* \"#utility.yul\":6762:7113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7119:7275   */\n    tag_131:\n        /* \"#utility.yul\":7259:7267   */\n      0x7364617364200000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7255:7256   */\n      0x00\n        /* \"#utility.yul\":7247:7253   */\n      dup3\n        /* \"#utility.yul\":7243:7257   */\n      add\n        /* \"#utility.yul\":7236:7268   */\n      mstore\n        /* \"#utility.yul\":7119:7275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7281:7646   */\n    tag_132:\n        /* \"#utility.yul\":7423:7426   */\n      0x00\n        /* \"#utility.yul\":7444:7510   */\n      tag_216\n        /* \"#utility.yul\":7508:7509   */\n      0x06\n        /* \"#utility.yul\":7503:7506   */\n      dup4\n        /* \"#utility.yul\":7444:7510   */\n      tag_125\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7437:7510   */\n      swap2\n      pop\n        /* \"#utility.yul\":7519:7612   */\n      tag_217\n        /* \"#utility.yul\":7608:7611   */\n      dup3\n        /* \"#utility.yul\":7519:7612   */\n      tag_131\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7637:7639   */\n      0x20\n        /* \"#utility.yul\":7632:7635   */\n      dup3\n        /* \"#utility.yul\":7628:7640   */\n      add\n        /* \"#utility.yul\":7621:7640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:8071   */\n    tag_64:\n        /* \"#utility.yul\":7818:7822   */\n      0x00\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"#utility.yul\":7845:7854   */\n      dup3\n        /* \"#utility.yul\":7841:7859   */\n      add\n        /* \"#utility.yul\":7833:7859   */\n      swap1\n      pop\n        /* \"#utility.yul\":7905:7914   */\n      dup2\n        /* \"#utility.yul\":7899:7903   */\n      dup2\n        /* \"#utility.yul\":7895:7915   */\n      sub\n        /* \"#utility.yul\":7891:7892   */\n      0x00\n        /* \"#utility.yul\":7880:7889   */\n      dup4\n        /* \"#utility.yul\":7876:7893   */\n      add\n        /* \"#utility.yul\":7869:7916   */\n      mstore\n        /* \"#utility.yul\":7933:8064   */\n      tag_219\n        /* \"#utility.yul\":8059:8063   */\n      dup2\n        /* \"#utility.yul\":7933:8064   */\n      tag_132\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7925:8064   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:8071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8077:8244   */\n    tag_133:\n        /* \"#utility.yul\":8217:8236   */\n      0x4e616f20706f646520736572207a65726f000000000000000000000000000000\n        /* \"#utility.yul\":8213:8214   */\n      0x00\n        /* \"#utility.yul\":8205:8211   */\n      dup3\n        /* \"#utility.yul\":8201:8215   */\n      add\n        /* \"#utility.yul\":8194:8237   */\n      mstore\n        /* \"#utility.yul\":8077:8244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8250:8616   */\n    tag_134:\n        /* \"#utility.yul\":8392:8395   */\n      0x00\n        /* \"#utility.yul\":8413:8480   */\n      tag_222\n        /* \"#utility.yul\":8477:8479   */\n      0x11\n        /* \"#utility.yul\":8472:8475   */\n      dup4\n        /* \"#utility.yul\":8413:8480   */\n      tag_125\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8406:8480   */\n      swap2\n      pop\n        /* \"#utility.yul\":8489:8582   */\n      tag_223\n        /* \"#utility.yul\":8578:8581   */\n      dup3\n        /* \"#utility.yul\":8489:8582   */\n      tag_133\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8607:8609   */\n      0x20\n        /* \"#utility.yul\":8602:8605   */\n      dup3\n        /* \"#utility.yul\":8598:8610   */\n      add\n        /* \"#utility.yul\":8591:8610   */\n      swap1\n      pop\n        /* \"#utility.yul\":8250:8616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8622:9041   */\n    tag_67:\n        /* \"#utility.yul\":8788:8792   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8815:8824   */\n      dup3\n        /* \"#utility.yul\":8811:8829   */\n      add\n        /* \"#utility.yul\":8803:8829   */\n      swap1\n      pop\n        /* \"#utility.yul\":8875:8884   */\n      dup2\n        /* \"#utility.yul\":8869:8873   */\n      dup2\n        /* \"#utility.yul\":8865:8885   */\n      sub\n        /* \"#utility.yul\":8861:8862   */\n      0x00\n        /* \"#utility.yul\":8850:8859   */\n      dup4\n        /* \"#utility.yul\":8846:8863   */\n      add\n        /* \"#utility.yul\":8839:8886   */\n      mstore\n        /* \"#utility.yul\":8903:9034   */\n      tag_225\n        /* \"#utility.yul\":9029:9033   */\n      dup2\n        /* \"#utility.yul\":8903:9034   */\n      tag_134\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8895:9034   */\n      swap1\n      pop\n        /* \"#utility.yul\":8622:9041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9047:9489   */\n    tag_69:\n        /* \"#utility.yul\":9196:9200   */\n      0x00\n        /* \"#utility.yul\":9234:9236   */\n      0x60\n        /* \"#utility.yul\":9223:9232   */\n      dup3\n        /* \"#utility.yul\":9219:9237   */\n      add\n        /* \"#utility.yul\":9211:9237   */\n      swap1\n      pop\n        /* \"#utility.yul\":9247:9318   */\n      tag_227\n        /* \"#utility.yul\":9315:9316   */\n      0x00\n        /* \"#utility.yul\":9304:9313   */\n      dup4\n        /* \"#utility.yul\":9300:9317   */\n      add\n        /* \"#utility.yul\":9291:9297   */\n      dup7\n        /* \"#utility.yul\":9247:9318   */\n      tag_117\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9328:9400   */\n      tag_228\n        /* \"#utility.yul\":9396:9398   */\n      0x20\n        /* \"#utility.yul\":9385:9394   */\n      dup4\n        /* \"#utility.yul\":9381:9399   */\n      add\n        /* \"#utility.yul\":9372:9378   */\n      dup6\n        /* \"#utility.yul\":9328:9400   */\n      tag_117\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9410:9482   */\n      tag_229\n        /* \"#utility.yul\":9478:9480   */\n      0x40\n        /* \"#utility.yul\":9467:9476   */\n      dup4\n        /* \"#utility.yul\":9463:9481   */\n      add\n        /* \"#utility.yul\":9454:9460   */\n      dup5\n        /* \"#utility.yul\":9410:9482   */\n      tag_114\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9047:9489   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9495:9611   */\n    tag_135:\n        /* \"#utility.yul\":9565:9586   */\n      tag_231\n        /* \"#utility.yul\":9580:9585   */\n      dup2\n        /* \"#utility.yul\":9565:9586   */\n      tag_118\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9558:9563   */\n      dup2\n        /* \"#utility.yul\":9555:9587   */\n      eq\n        /* \"#utility.yul\":9545:9605   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":9601:9602   */\n      0x00\n        /* \"#utility.yul\":9598:9599   */\n      dup1\n        /* \"#utility.yul\":9591:9603   */\n      revert\n        /* \"#utility.yul\":9545:9605   */\n    tag_232:\n        /* \"#utility.yul\":9495:9611   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9617:9754   */\n    tag_136:\n        /* \"#utility.yul\":9671:9676   */\n      0x00\n        /* \"#utility.yul\":9702:9708   */\n      dup2\n        /* \"#utility.yul\":9696:9709   */\n      mload\n        /* \"#utility.yul\":9687:9709   */\n      swap1\n      pop\n        /* \"#utility.yul\":9718:9748   */\n      tag_234\n        /* \"#utility.yul\":9742:9747   */\n      dup2\n        /* \"#utility.yul\":9718:9748   */\n      tag_135\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":9617:9754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9760:10105   */\n    tag_73:\n        /* \"#utility.yul\":9827:9833   */\n      0x00\n        /* \"#utility.yul\":9876:9878   */\n      0x20\n        /* \"#utility.yul\":9864:9873   */\n      dup3\n        /* \"#utility.yul\":9855:9862   */\n      dup5\n        /* \"#utility.yul\":9851:9874   */\n      sub\n        /* \"#utility.yul\":9847:9879   */\n      slt\n        /* \"#utility.yul\":9844:9963   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":9882:9961   */\n      tag_237\n      tag_109\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9844:9963   */\n    tag_236:\n        /* \"#utility.yul\":10002:10003   */\n      0x00\n        /* \"#utility.yul\":10027:10088   */\n      tag_238\n        /* \"#utility.yul\":10080:10087   */\n      dup5\n        /* \"#utility.yul\":10071:10077   */\n      dup3\n        /* \"#utility.yul\":10060:10069   */\n      dup6\n        /* \"#utility.yul\":10056:10078   */\n      add\n        /* \"#utility.yul\":10027:10088   */\n      tag_136\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":10017:10088   */\n      swap2\n      pop\n        /* \"#utility.yul\":9973:10098   */\n      pop\n        /* \"#utility.yul\":9760:10105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10111:10291   */\n    tag_137:\n        /* \"#utility.yul\":10159:10236   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10156:10157   */\n      0x00\n        /* \"#utility.yul\":10149:10237   */\n      mstore\n        /* \"#utility.yul\":10256:10260   */\n      0x11\n        /* \"#utility.yul\":10253:10254   */\n      0x04\n        /* \"#utility.yul\":10246:10261   */\n      mstore\n        /* \"#utility.yul\":10280:10284   */\n      0x24\n        /* \"#utility.yul\":10277:10278   */\n      0x00\n        /* \"#utility.yul\":10270:10285   */\n      revert\n        /* \"#utility.yul\":10297:10488   */\n    tag_77:\n        /* \"#utility.yul\":10337:10340   */\n      0x00\n        /* \"#utility.yul\":10356:10376   */\n      tag_241\n        /* \"#utility.yul\":10374:10375   */\n      dup3\n        /* \"#utility.yul\":10356:10376   */\n      tag_111\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10351:10376   */\n      swap2\n      pop\n        /* \"#utility.yul\":10390:10410   */\n      tag_242\n        /* \"#utility.yul\":10408:10409   */\n      dup4\n        /* \"#utility.yul\":10390:10410   */\n      tag_111\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":10385:10410   */\n      swap3\n      pop\n        /* \"#utility.yul\":10433:10434   */\n      dup3\n        /* \"#utility.yul\":10430:10431   */\n      dup3\n        /* \"#utility.yul\":10426:10435   */\n      add\n        /* \"#utility.yul\":10419:10435   */\n      swap1\n      pop\n        /* \"#utility.yul\":10454:10457   */\n      dup1\n        /* \"#utility.yul\":10451:10452   */\n      dup3\n        /* \"#utility.yul\":10448:10458   */\n      gt\n        /* \"#utility.yul\":10445:10481   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":10461:10479   */\n      tag_244\n      tag_137\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":10445:10481   */\n    tag_243:\n        /* \"#utility.yul\":10297:10488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10494:10936   */\n    tag_81:\n        /* \"#utility.yul\":10643:10647   */\n      0x00\n        /* \"#utility.yul\":10681:10683   */\n      0x60\n        /* \"#utility.yul\":10670:10679   */\n      dup3\n        /* \"#utility.yul\":10666:10684   */\n      add\n        /* \"#utility.yul\":10658:10684   */\n      swap1\n      pop\n        /* \"#utility.yul\":10694:10765   */\n      tag_246\n        /* \"#utility.yul\":10762:10763   */\n      0x00\n        /* \"#utility.yul\":10751:10760   */\n      dup4\n        /* \"#utility.yul\":10747:10764   */\n      add\n        /* \"#utility.yul\":10738:10744   */\n      dup7\n        /* \"#utility.yul\":10694:10765   */\n      tag_114\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":10775:10847   */\n      tag_247\n        /* \"#utility.yul\":10843:10845   */\n      0x20\n        /* \"#utility.yul\":10832:10841   */\n      dup4\n        /* \"#utility.yul\":10828:10846   */\n      add\n        /* \"#utility.yul\":10819:10825   */\n      dup6\n        /* \"#utility.yul\":10775:10847   */\n      tag_114\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":10857:10929   */\n      tag_248\n        /* \"#utility.yul\":10925:10927   */\n      0x40\n        /* \"#utility.yul\":10914:10923   */\n      dup4\n        /* \"#utility.yul\":10910:10928   */\n      add\n        /* \"#utility.yul\":10901:10907   */\n      dup5\n        /* \"#utility.yul\":10857:10929   */\n      tag_114\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":10494:10936   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10942:11103   */\n    tag_138:\n        /* \"#utility.yul\":11082:11095   */\n      0x696420696e76616c69646f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11078:11079   */\n      0x00\n        /* \"#utility.yul\":11070:11076   */\n      dup3\n        /* \"#utility.yul\":11066:11080   */\n      add\n        /* \"#utility.yul\":11059:11096   */\n      mstore\n        /* \"#utility.yul\":10942:11103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11109:11475   */\n    tag_139:\n        /* \"#utility.yul\":11251:11254   */\n      0x00\n        /* \"#utility.yul\":11272:11339   */\n      tag_251\n        /* \"#utility.yul\":11336:11338   */\n      0x0b\n        /* \"#utility.yul\":11331:11334   */\n      dup4\n        /* \"#utility.yul\":11272:11339   */\n      tag_125\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":11265:11339   */\n      swap2\n      pop\n        /* \"#utility.yul\":11348:11441   */\n      tag_252\n        /* \"#utility.yul\":11437:11440   */\n      dup3\n        /* \"#utility.yul\":11348:11441   */\n      tag_138\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":11466:11468   */\n      0x20\n        /* \"#utility.yul\":11461:11464   */\n      dup3\n        /* \"#utility.yul\":11457:11469   */\n      add\n        /* \"#utility.yul\":11450:11469   */\n      swap1\n      pop\n        /* \"#utility.yul\":11109:11475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11481:11900   */\n    tag_92:\n        /* \"#utility.yul\":11647:11651   */\n      0x00\n        /* \"#utility.yul\":11685:11687   */\n      0x20\n        /* \"#utility.yul\":11674:11683   */\n      dup3\n        /* \"#utility.yul\":11670:11688   */\n      add\n        /* \"#utility.yul\":11662:11688   */\n      swap1\n      pop\n        /* \"#utility.yul\":11734:11743   */\n      dup2\n        /* \"#utility.yul\":11728:11732   */\n      dup2\n        /* \"#utility.yul\":11724:11744   */\n      sub\n        /* \"#utility.yul\":11720:11721   */\n      0x00\n        /* \"#utility.yul\":11709:11718   */\n      dup4\n        /* \"#utility.yul\":11705:11722   */\n      add\n        /* \"#utility.yul\":11698:11745   */\n      mstore\n        /* \"#utility.yul\":11762:11893   */\n      tag_254\n        /* \"#utility.yul\":11888:11892   */\n      dup2\n        /* \"#utility.yul\":11762:11893   */\n      tag_139\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":11754:11893   */\n      swap1\n      pop\n        /* \"#utility.yul\":11481:11900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11906:12070   */\n    tag_140:\n        /* \"#utility.yul\":12046:12062   */\n      0x646576652073657220617469766f000000000000000000000000000000000000\n        /* \"#utility.yul\":12042:12043   */\n      0x00\n        /* \"#utility.yul\":12034:12040   */\n      dup3\n        /* \"#utility.yul\":12030:12044   */\n      add\n        /* \"#utility.yul\":12023:12063   */\n      mstore\n        /* \"#utility.yul\":11906:12070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12076:12442   */\n    tag_141:\n        /* \"#utility.yul\":12218:12221   */\n      0x00\n        /* \"#utility.yul\":12239:12306   */\n      tag_257\n        /* \"#utility.yul\":12303:12305   */\n      0x0e\n        /* \"#utility.yul\":12298:12301   */\n      dup4\n        /* \"#utility.yul\":12239:12306   */\n      tag_125\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":12232:12306   */\n      swap2\n      pop\n        /* \"#utility.yul\":12315:12408   */\n      tag_258\n        /* \"#utility.yul\":12404:12407   */\n      dup3\n        /* \"#utility.yul\":12315:12408   */\n      tag_140\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":12433:12435   */\n      0x20\n        /* \"#utility.yul\":12428:12431   */\n      dup3\n        /* \"#utility.yul\":12424:12436   */\n      add\n        /* \"#utility.yul\":12417:12436   */\n      swap1\n      pop\n        /* \"#utility.yul\":12076:12442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12448:12867   */\n    tag_95:\n        /* \"#utility.yul\":12614:12618   */\n      0x00\n        /* \"#utility.yul\":12652:12654   */\n      0x20\n        /* \"#utility.yul\":12641:12650   */\n      dup3\n        /* \"#utility.yul\":12637:12655   */\n      add\n        /* \"#utility.yul\":12629:12655   */\n      swap1\n      pop\n        /* \"#utility.yul\":12701:12710   */\n      dup2\n        /* \"#utility.yul\":12695:12699   */\n      dup2\n        /* \"#utility.yul\":12691:12711   */\n      sub\n        /* \"#utility.yul\":12687:12688   */\n      0x00\n        /* \"#utility.yul\":12676:12685   */\n      dup4\n        /* \"#utility.yul\":12672:12689   */\n      add\n        /* \"#utility.yul\":12665:12712   */\n      mstore\n        /* \"#utility.yul\":12729:12860   */\n      tag_260\n        /* \"#utility.yul\":12855:12859   */\n      dup2\n        /* \"#utility.yul\":12729:12860   */\n      tag_141\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":12721:12860   */\n      swap1\n      pop\n        /* \"#utility.yul\":12448:12867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12873:13067   */\n    tag_101:\n        /* \"#utility.yul\":12913:12917   */\n      0x00\n        /* \"#utility.yul\":12933:12953   */\n      tag_262\n        /* \"#utility.yul\":12951:12952   */\n      dup3\n        /* \"#utility.yul\":12933:12953   */\n      tag_111\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":12928:12953   */\n      swap2\n      pop\n        /* \"#utility.yul\":12967:12987   */\n      tag_263\n        /* \"#utility.yul\":12985:12986   */\n      dup4\n        /* \"#utility.yul\":12967:12987   */\n      tag_111\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":12962:12987   */\n      swap3\n      pop\n        /* \"#utility.yul\":13011:13012   */\n      dup3\n        /* \"#utility.yul\":13008:13009   */\n      dup3\n        /* \"#utility.yul\":13004:13013   */\n      sub\n        /* \"#utility.yul\":12996:13013   */\n      swap1\n      pop\n        /* \"#utility.yul\":13035:13036   */\n      dup2\n        /* \"#utility.yul\":13029:13033   */\n      dup2\n        /* \"#utility.yul\":13026:13037   */\n      gt\n        /* \"#utility.yul\":13023:13060   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":13040:13058   */\n      tag_265\n      tag_137\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":13023:13060   */\n    tag_264:\n        /* \"#utility.yul\":12873:13067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220546af5fd619ef36ef7a94244063e481a6a50c0c7b890f9bf78ec38d8e7d339fe64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1260": {
									"entryPoint": null,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1621": {
									"entryPoint": null,
									"id": 1621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:12",
										"nodeType": "YulBlock",
										"src": "0:1199:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "922:274:12",
													"nodeType": "YulBlock",
													"src": "922:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:12",
																"nodeType": "YulBlock",
																"src": "968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:12"
																			},
																			"nativeSrc": "970:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:12"
																		},
																		"nativeSrc": "970:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nativeSrc": "939:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nativeSrc": "935:32:12",
																"nodeType": "YulFunctionCall",
																"src": "935:32:12"
															},
															"nativeSrc": "932:119:12",
															"nodeType": "YulIf",
															"src": "932:119:12"
														},
														{
															"nativeSrc": "1061:128:12",
															"nodeType": "YulBlock",
															"src": "1061:128:12",
															"statements": [
																{
																	"nativeSrc": "1076:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:12"
																				},
																				"nativeSrc": "1147:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:12"
																		},
																		"nativeSrc": "1115:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:12",
														"nodeType": "YulTypedName",
														"src": "892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:12",
														"nodeType": "YulTypedName",
														"src": "903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:12",
														"nodeType": "YulTypedName",
														"src": "915:6:12",
														"type": ""
													}
												],
												"src": "845:351:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040525f6001555f60025534801562000018575f80fd5b50604051620015413803806200154183398181016040528101906200003e91906200011d565b335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200014d565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000e782620000bc565b9050919050565b620000f981620000db565b811462000104575f80fd5b50565b5f815190506200011781620000ee565b92915050565b5f60208284031215620001355762000134620000b8565b5b5f620001448482850162000107565b91505092915050565b6080516113c66200017b5f395f81816102ac015281816103c60152818161098b0152610ce801526113c65ff3fe60806040526004361061007a575f3560e01c80637cb029501161004d5780637cb02950146101275780638da5cb5b1461014357806390041a401461016d578063fc0c546a146101ad5761007a565b80632c562a441461007e578063506e1d52146100a657806356afff7c146100d15780635f6df03814610111575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610d83565b6101d7565b005b3480156100b1575f80fd5b506100ba610705565b6040516100c8929190610dd0565b60405180910390f35b3480156100dc575f80fd5b506100f760048036038101906100f29190610df7565b610717565b604051610108959493929190610e7b565b60405180910390f35b34801561011c575f80fd5b50610125610775565b005b610141600480360381019061013c9190610df7565b61084d565b005b34801561014e575f80fd5b50610157610c65565b6040516101649190610ecc565b60405180910390f35b348015610178575f80fd5b50610193600480360381019061018e9190610df7565b610c88565b6040516101a4959493929190610e7b565b60405180910390f35b3480156101b8575f80fd5b506101c1610ce6565b6040516101ce9190610f40565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610fd9565b60405180910390fd5b5f82036102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90611041565b60405180910390fd5b620186a07f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103039190610ecc565b602060405180830381865afa15801561031e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103429190611073565b11610382576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610379906110e8565b60405180910390fd5b5f81036103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bb90611150565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104219392919061116e565b6020604051808303815f875af115801561043d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061046191906111cd565b5061046a610d0a565b828160200181815250508181604001818152505033816060019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001816080019015159081151581525050600180546104d59190611225565b600181905550600154815f0181815250508060075f835f015181526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055509050508060085f835f015181526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff02191690831515021790555090505060016002546106299190611225565b6002819055506001600254036106c2578060035f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055509050505b7f65fed65ff7cd6b2d79d64e55d0439fba77cb42a9adabf9fa002ea4c20a1f81e1815f015184846040516106f893929190611258565b60405180910390a1505050565b5f8060025460035f0154915091509091565b6007602052805f5260405f205f91509050805f015490806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f990610fd9565b60405180910390fd5b5f3390508073ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610849573d5f803e3d5ffd5b5050565b600154811115610892576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610889906112d7565b60405180910390fd5b5f60075f8381526020019081526020015f206040518060a00160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250509050600115158160800151151514610989576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109809061133f565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd303384602001516040518463ffffffff1660e01b81526004016109ea9392919061116e565b6020604051808303815f875af1158015610a06573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2a91906111cd565b505f8160800190151590811515815250508060075f8481526020019081526020015f205f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055509050506001600254610ae1919061135d565b6002819055505f5b600154811015610c60575f60075f8381526020019081526020015f206040518060a00160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160149054906101000a900460ff1615151515815250509050806080015115610c52576001600254610bb89190611225565b600281905550600160025403610c51578060035f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055509050505b5b508080600101915050610ae9565b505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6008602052805f5260405f205f91509050805f015490806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060a001604052805f81526020015f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581525090565b5f80fd5b5f819050919050565b610d6281610d50565b8114610d6c575f80fd5b50565b5f81359050610d7d81610d59565b92915050565b5f8060408385031215610d9957610d98610d4c565b5b5f610da685828601610d6f565b9250506020610db785828601610d6f565b9150509250929050565b610dca81610d50565b82525050565b5f604082019050610de35f830185610dc1565b610df06020830184610dc1565b9392505050565b5f60208284031215610e0c57610e0b610d4c565b5b5f610e1984828501610d6f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e4b82610e22565b9050919050565b610e5b81610e41565b82525050565b5f8115159050919050565b610e7581610e61565b82525050565b5f60a082019050610e8e5f830188610dc1565b610e9b6020830187610dc1565b610ea86040830186610dc1565b610eb56060830185610e52565b610ec26080830184610e6c565b9695505050505050565b5f602082019050610edf5f830184610e52565b92915050565b5f819050919050565b5f610f08610f03610efe84610e22565b610ee5565b610e22565b9050919050565b5f610f1982610eee565b9050919050565b5f610f2a82610f0f565b9050919050565b610f3a81610f20565b82525050565b5f602082019050610f535f830184610f31565b92915050565b5f82825260208201905092915050565b7f446576652073657220646f6e6f2070617261206368616d6172206573736120665f8201527f756ec3a7c3a36f00000000000000000000000000000000000000000000000000602082015250565b5f610fc3602783610f59565b9150610fce82610f69565b604082019050919050565b5f6020820190508181035f830152610ff081610fb7565b9050919050565b7f4ec3a36f20706f646520736572207a65726f00000000000000000000000000005f82015250565b5f61102b601283610f59565b915061103682610ff7565b602082019050919050565b5f6020820190508181035f8301526110588161101f565b9050919050565b5f8151905061106d81610d59565b92915050565b5f6020828403121561108857611087610d4c565b5b5f6110958482850161105f565b91505092915050565b7f73646173642000000000000000000000000000000000000000000000000000005f82015250565b5f6110d2600683610f59565b91506110dd8261109e565b602082019050919050565b5f6020820190508181035f8301526110ff816110c6565b9050919050565b7f4e616f20706f646520736572207a65726f0000000000000000000000000000005f82015250565b5f61113a601183610f59565b915061114582611106565b602082019050919050565b5f6020820190508181035f8301526111678161112e565b9050919050565b5f6060820190506111815f830186610e52565b61118e6020830185610e52565b61119b6040830184610dc1565b949350505050565b6111ac81610e61565b81146111b6575f80fd5b50565b5f815190506111c7816111a3565b92915050565b5f602082840312156111e2576111e1610d4c565b5b5f6111ef848285016111b9565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61122f82610d50565b915061123a83610d50565b9250828201905080821115611252576112516111f8565b5b92915050565b5f60608201905061126b5f830186610dc1565b6112786020830185610dc1565b6112856040830184610dc1565b949350505050565b7f696420696e76616c69646f0000000000000000000000000000000000000000005f82015250565b5f6112c1600b83610f59565b91506112cc8261128d565b602082019050919050565b5f6020820190508181035f8301526112ee816112b5565b9050919050565b7f646576652073657220617469766f0000000000000000000000000000000000005f82015250565b5f611329600e83610f59565b9150611334826112f5565b602082019050919050565b5f6020820190508181035f8301526113568161131d565b9050919050565b5f61136782610d50565b915061137283610d50565b925082820390508181111561138a576113896111f8565b5b9291505056fea2646970667358221220546af5fd619ef36ef7a94244063e481a6a50c0c7b890f9bf78ec38d8e7d339fe64736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x1 SSTORE PUSH0 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1541 CODESIZE SUB DUP1 PUSH3 0x1541 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x14D JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xE7 DUP3 PUSH3 0xBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xF9 DUP2 PUSH3 0xDB JUMP JUMPDEST DUP2 EQ PUSH3 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x117 DUP2 PUSH3 0xEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0xB8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x144 DUP5 DUP3 DUP6 ADD PUSH3 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x13C6 PUSH3 0x17B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2AC ADD MSTORE DUP2 DUP2 PUSH2 0x3C6 ADD MSTORE DUP2 DUP2 PUSH2 0x98B ADD MSTORE PUSH2 0xCE8 ADD MSTORE PUSH2 0x13C6 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB02950 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x7CB02950 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x90041A40 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AD JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x2C562A44 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x506E1D52 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x56AFFF7C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5F6DF038 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP3 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST GT PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x379 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST POP PUSH2 0x46A PUSH2 0xD0A JUMP JUMPDEST DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP CALLER DUP2 PUSH1 0x60 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x7 PUSH0 DUP4 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x8 PUSH0 DUP4 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD SUB PUSH2 0x6C2 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST PUSH32 0x65FED65FF7CD6B2D79D64E55D0439FBA77CB42A9ADABF9FA002EA4C20A1F81E1 DUP2 PUSH0 ADD MLOAD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 SLOAD PUSH1 0x3 PUSH0 ADD SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x889 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x80 ADD MLOAD ISZERO ISZERO EQ PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA06 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xC60 JUMPI PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD ISZERO PUSH2 0xC52 JUMPI PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD SUB PUSH2 0xC51 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD62 DUP2 PUSH2 0xD50 JUMP JUMPDEST DUP2 EQ PUSH2 0xD6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD7D DUP2 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD99 JUMPI PUSH2 0xD98 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA6 DUP6 DUP3 DUP7 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDB7 DUP6 DUP3 DUP7 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCA DUP2 PUSH2 0xD50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDE3 PUSH0 DUP4 ADD DUP6 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE19 DUP5 DUP3 DUP6 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4B DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5B DUP2 PUSH2 0xE41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xE8E PUSH0 DUP4 ADD DUP9 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xE9B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xEA8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xEB5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0xEC2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDF PUSH0 DUP4 ADD DUP5 PUSH2 0xE52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF08 PUSH2 0xF03 PUSH2 0xEFE DUP5 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 DUP3 PUSH2 0xEEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF2A DUP3 PUSH2 0xF0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3A DUP2 PUSH2 0xF20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF53 PUSH0 DUP4 ADD DUP5 PUSH2 0xF31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446576652073657220646F6E6F2070617261206368616D617220657373612066 PUSH0 DUP3 ADD MSTORE PUSH32 0x756EC3A7C3A36F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC3 PUSH1 0x27 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCE DUP3 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF0 DUP2 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4EC3A36F20706F646520736572207A65726F0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x102B PUSH1 0x12 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1036 DUP3 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1058 DUP2 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x106D DUP2 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1088 JUMPI PUSH2 0x1087 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1095 DUP5 DUP3 DUP6 ADD PUSH2 0x105F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7364617364200000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10D2 PUSH1 0x6 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DD DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10FF DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E616F20706F646520736572207A65726F000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x113A PUSH1 0x11 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1167 DUP2 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1181 PUSH0 DUP4 ADD DUP7 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x118E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x119B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0x11B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C7 DUP2 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E1 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11EF DUP5 DUP3 DUP6 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x122F DUP3 PUSH2 0xD50 JUMP JUMPDEST SWAP2 POP PUSH2 0x123A DUP4 PUSH2 0xD50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x126B PUSH0 DUP4 ADD DUP7 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x1278 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x1285 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696420696E76616C69646F000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C1 PUSH1 0xB DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CC DUP3 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12EE DUP2 PUSH2 0x12B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x646576652073657220617469766F000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1329 PUSH1 0xE DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1334 DUP3 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1356 DUP2 PUSH2 0x131D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1367 DUP3 PUSH2 0xD50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1372 DUP4 PUSH2 0xD50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x138A JUMPI PUSH2 0x1389 PUSH2 0x11F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH11 0xF5FD619EF36EF7A9424406 RETURNDATACOPY BASEFEE BYTE PUSH11 0x50C0C7B890F9BF78EC38D8 0xE7 0xD3 CODECOPY INVALID PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "438:3902:9:-:0;;;707:1;685:23;;743:1;715:29;;885:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;368:10:11;360:5;;:18;;;;;;;;;;;;;;;;;;942:11:9;928:26;;;;;;;;;;885:77;438:3902;;88:117:12;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;438:3902:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@compra_1493": {
									"entryPoint": 2125,
									"id": 1493,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@consultaOfertas_1508": {
									"entryPoint": 1797,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@ofertasAtivas_1248": {
									"entryPoint": 3208,
									"id": 1248,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ofertas_1243": {
									"entryPoint": 1815,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1600": {
									"entryPoint": 3173,
									"id": 1600,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@realizaOferta_1392": {
									"entryPoint": 471,
									"id": 1392,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sacarFundos_1533": {
									"entryPoint": 1909,
									"id": 1533,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1218": {
									"entryPoint": 3302,
									"id": 1218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$1030__to_t_address__fromStack_reversed": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$1030_to_t_address": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372": {
									"entryPoint": 4254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e": {
									"entryPoint": 4087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13070:12",
										"nodeType": "YulBlock",
										"src": "0:13070:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:32:12",
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nativeSrc": "389:16:12",
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:12",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nativeSrc": "460:79:12",
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:12",
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:12",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nativeSrc": "519:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nativeSrc": "519:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nativeSrc": "490:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nativeSrc": "480:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nativeSrc": "473:43:12",
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nativeSrc": "470:63:12",
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:12",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nativeSrc": "597:87:12",
													"nodeType": "YulBlock",
													"src": "597:87:12",
													"statements": [
														{
															"nativeSrc": "607:29:12",
															"nodeType": "YulAssignment",
															"src": "607:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:12"
																},
																"nativeSrc": "616:20:12",
																"nodeType": "YulFunctionCall",
																"src": "616:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:12"
																},
																"nativeSrc": "645:33:12",
																"nodeType": "YulFunctionCall",
																"src": "645:33:12"
															},
															"nativeSrc": "645:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:12",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:12",
														"nodeType": "YulTypedName",
														"src": "583:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:12",
														"nodeType": "YulTypedName",
														"src": "591:5:12",
														"type": ""
													}
												],
												"src": "545:139:12"
											},
											{
												"body": {
													"nativeSrc": "773:391:12",
													"nodeType": "YulBlock",
													"src": "773:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "819:83:12",
																"nodeType": "YulBlock",
																"src": "819:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "821:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:12"
																			},
																			"nativeSrc": "821:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:12"
																		},
																		"nativeSrc": "821:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "794:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "803:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "790:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:12"
																		},
																		"nativeSrc": "790:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "815:2:12",
																		"nodeType": "YulLiteral",
																		"src": "815:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "786:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:12"
																},
																"nativeSrc": "786:32:12",
																"nodeType": "YulFunctionCall",
																"src": "786:32:12"
															},
															"nativeSrc": "783:119:12",
															"nodeType": "YulIf",
															"src": "783:119:12"
														},
														{
															"nativeSrc": "912:117:12",
															"nodeType": "YulBlock",
															"src": "912:117:12",
															"statements": [
																{
																	"nativeSrc": "927:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "941:1:12",
																		"nodeType": "YulLiteral",
																		"src": "941:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "931:6:12",
																			"nodeType": "YulTypedName",
																			"src": "931:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "956:63:12",
																	"nodeType": "YulAssignment",
																	"src": "956:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "991:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1002:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "987:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:12"
																				},
																				"nativeSrc": "987:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1011:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "966:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:12"
																		},
																		"nativeSrc": "966:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "956:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1039:118:12",
															"nodeType": "YulBlock",
															"src": "1039:118:12",
															"statements": [
																{
																	"nativeSrc": "1054:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1068:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1058:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1084:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1084:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1119:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1130:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1115:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:12"
																				},
																				"nativeSrc": "1115:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1139:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1094:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:12"
																		},
																		"nativeSrc": "1094:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1084:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "690:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "735:9:12",
														"nodeType": "YulTypedName",
														"src": "735:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "746:7:12",
														"nodeType": "YulTypedName",
														"src": "746:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "758:6:12",
														"nodeType": "YulTypedName",
														"src": "758:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "766:6:12",
														"nodeType": "YulTypedName",
														"src": "766:6:12",
														"type": ""
													}
												],
												"src": "690:474:12"
											},
											{
												"body": {
													"nativeSrc": "1235:53:12",
													"nodeType": "YulBlock",
													"src": "1235:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1252:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1275:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1275:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1257:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1257:17:12"
																		},
																		"nativeSrc": "1257:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1245:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:12"
																},
																"nativeSrc": "1245:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1245:37:12"
															},
															"nativeSrc": "1245:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1245:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1170:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1223:5:12",
														"nodeType": "YulTypedName",
														"src": "1223:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1230:3:12",
														"nodeType": "YulTypedName",
														"src": "1230:3:12",
														"type": ""
													}
												],
												"src": "1170:118:12"
											},
											{
												"body": {
													"nativeSrc": "1420:206:12",
													"nodeType": "YulBlock",
													"src": "1420:206:12",
													"statements": [
														{
															"nativeSrc": "1430:26:12",
															"nodeType": "YulAssignment",
															"src": "1430:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1442:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1442:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1453:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1453:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1438:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1438:3:12"
																},
																"nativeSrc": "1438:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1438:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1430:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1430:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1510:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1510:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1523:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1534:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1534:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1519:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:12"
																		},
																		"nativeSrc": "1519:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1466:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1466:43:12"
																},
																"nativeSrc": "1466:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1466:71:12"
															},
															"nativeSrc": "1466:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1466:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1591:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1591:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1604:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1604:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1615:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1615:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1600:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1600:3:12"
																		},
																		"nativeSrc": "1600:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1600:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1547:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1547:43:12"
																},
																"nativeSrc": "1547:72:12",
																"nodeType": "YulFunctionCall",
																"src": "1547:72:12"
															},
															"nativeSrc": "1547:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "1547:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1294:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:12",
														"nodeType": "YulTypedName",
														"src": "1384:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1396:6:12",
														"nodeType": "YulTypedName",
														"src": "1396:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1404:6:12",
														"nodeType": "YulTypedName",
														"src": "1404:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1415:4:12",
														"nodeType": "YulTypedName",
														"src": "1415:4:12",
														"type": ""
													}
												],
												"src": "1294:332:12"
											},
											{
												"body": {
													"nativeSrc": "1698:263:12",
													"nodeType": "YulBlock",
													"src": "1698:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1744:83:12",
																"nodeType": "YulBlock",
																"src": "1744:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1746:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1746:77:12"
																			},
																			"nativeSrc": "1746:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1746:79:12"
																		},
																		"nativeSrc": "1746:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1746:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1719:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1719:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1728:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1728:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1715:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1715:3:12"
																		},
																		"nativeSrc": "1715:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1715:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1740:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1711:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1711:3:12"
																},
																"nativeSrc": "1711:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1711:32:12"
															},
															"nativeSrc": "1708:119:12",
															"nodeType": "YulIf",
															"src": "1708:119:12"
														},
														{
															"nativeSrc": "1837:117:12",
															"nodeType": "YulBlock",
															"src": "1837:117:12",
															"statements": [
																{
																	"nativeSrc": "1852:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1852:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1866:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1866:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1856:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1856:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1881:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1881:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1916:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1927:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1912:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:12"
																				},
																				"nativeSrc": "1912:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1936:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1891:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1891:20:12"
																		},
																		"nativeSrc": "1891:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1891:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1881:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1881:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1632:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1668:9:12",
														"nodeType": "YulTypedName",
														"src": "1668:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1679:7:12",
														"nodeType": "YulTypedName",
														"src": "1679:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1691:6:12",
														"nodeType": "YulTypedName",
														"src": "1691:6:12",
														"type": ""
													}
												],
												"src": "1632:329:12"
											},
											{
												"body": {
													"nativeSrc": "2012:81:12",
													"nodeType": "YulBlock",
													"src": "2012:81:12",
													"statements": [
														{
															"nativeSrc": "2022:65:12",
															"nodeType": "YulAssignment",
															"src": "2022:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2037:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2037:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2044:42:12",
																		"nodeType": "YulLiteral",
																		"src": "2044:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2033:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2033:3:12"
																},
																"nativeSrc": "2033:54:12",
																"nodeType": "YulFunctionCall",
																"src": "2033:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2022:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2022:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1967:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1994:5:12",
														"nodeType": "YulTypedName",
														"src": "1994:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2004:7:12",
														"nodeType": "YulTypedName",
														"src": "2004:7:12",
														"type": ""
													}
												],
												"src": "1967:126:12"
											},
											{
												"body": {
													"nativeSrc": "2144:51:12",
													"nodeType": "YulBlock",
													"src": "2144:51:12",
													"statements": [
														{
															"nativeSrc": "2154:35:12",
															"nodeType": "YulAssignment",
															"src": "2154:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2183:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2183:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2165:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2165:17:12"
																},
																"nativeSrc": "2165:24:12",
																"nodeType": "YulFunctionCall",
																"src": "2165:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2154:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2154:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2099:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2126:5:12",
														"nodeType": "YulTypedName",
														"src": "2126:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2136:7:12",
														"nodeType": "YulTypedName",
														"src": "2136:7:12",
														"type": ""
													}
												],
												"src": "2099:96:12"
											},
											{
												"body": {
													"nativeSrc": "2266:53:12",
													"nodeType": "YulBlock",
													"src": "2266:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2283:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2283:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2306:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2306:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2288:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2288:17:12"
																		},
																		"nativeSrc": "2288:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2276:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:12"
																},
																"nativeSrc": "2276:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2276:37:12"
															},
															"nativeSrc": "2276:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2276:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2201:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2254:5:12",
														"nodeType": "YulTypedName",
														"src": "2254:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2261:3:12",
														"nodeType": "YulTypedName",
														"src": "2261:3:12",
														"type": ""
													}
												],
												"src": "2201:118:12"
											},
											{
												"body": {
													"nativeSrc": "2367:48:12",
													"nodeType": "YulBlock",
													"src": "2367:48:12",
													"statements": [
														{
															"nativeSrc": "2377:32:12",
															"nodeType": "YulAssignment",
															"src": "2377:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2402:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2402:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2395:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2395:6:12"
																		},
																		"nativeSrc": "2395:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2395:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2388:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:12"
																},
																"nativeSrc": "2388:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2388:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2377:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2325:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2349:5:12",
														"nodeType": "YulTypedName",
														"src": "2349:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2359:7:12",
														"nodeType": "YulTypedName",
														"src": "2359:7:12",
														"type": ""
													}
												],
												"src": "2325:90:12"
											},
											{
												"body": {
													"nativeSrc": "2480:50:12",
													"nodeType": "YulBlock",
													"src": "2480:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2497:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2497:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2517:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2517:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2502:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "2502:14:12"
																		},
																		"nativeSrc": "2502:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2490:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:12"
																},
																"nativeSrc": "2490:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2490:34:12"
															},
															"nativeSrc": "2490:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2490:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2421:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2468:5:12",
														"nodeType": "YulTypedName",
														"src": "2468:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2475:3:12",
														"nodeType": "YulTypedName",
														"src": "2475:3:12",
														"type": ""
													}
												],
												"src": "2421:109:12"
											},
											{
												"body": {
													"nativeSrc": "2740:448:12",
													"nodeType": "YulBlock",
													"src": "2740:448:12",
													"statements": [
														{
															"nativeSrc": "2750:27:12",
															"nodeType": "YulAssignment",
															"src": "2750:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2762:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2762:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2773:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2773:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2758:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2758:3:12"
																},
																"nativeSrc": "2758:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2758:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2750:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2750:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2831:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2831:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2844:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2844:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2855:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2855:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2840:3:12"
																		},
																		"nativeSrc": "2840:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2840:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2787:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2787:43:12"
																},
																"nativeSrc": "2787:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2787:71:12"
															},
															"nativeSrc": "2787:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2787:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2912:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2925:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2925:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2936:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2921:3:12"
																		},
																		"nativeSrc": "2921:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2921:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2868:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2868:43:12"
																},
																"nativeSrc": "2868:72:12",
																"nodeType": "YulFunctionCall",
																"src": "2868:72:12"
															},
															"nativeSrc": "2868:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "2868:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2994:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2994:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3007:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3007:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3018:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3018:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3003:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:12"
																		},
																		"nativeSrc": "3003:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2950:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2950:43:12"
																},
																"nativeSrc": "2950:72:12",
																"nodeType": "YulFunctionCall",
																"src": "2950:72:12"
															},
															"nativeSrc": "2950:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "2950:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3089:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3100:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3100:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:12"
																		},
																		"nativeSrc": "3085:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3032:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3032:43:12"
																},
																"nativeSrc": "3032:72:12",
																"nodeType": "YulFunctionCall",
																"src": "3032:72:12"
															},
															"nativeSrc": "3032:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "3032:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "3152:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3152:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3165:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3165:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3176:3:12",
																				"nodeType": "YulLiteral",
																				"src": "3176:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3161:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3161:3:12"
																		},
																		"nativeSrc": "3161:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3161:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3114:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3114:37:12"
																},
																"nativeSrc": "3114:67:12",
																"nodeType": "YulFunctionCall",
																"src": "3114:67:12"
															},
															"nativeSrc": "3114:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "3114:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "2536:652:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2680:9:12",
														"nodeType": "YulTypedName",
														"src": "2680:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2692:6:12",
														"nodeType": "YulTypedName",
														"src": "2692:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2700:6:12",
														"nodeType": "YulTypedName",
														"src": "2700:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2708:6:12",
														"nodeType": "YulTypedName",
														"src": "2708:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2716:6:12",
														"nodeType": "YulTypedName",
														"src": "2716:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2724:6:12",
														"nodeType": "YulTypedName",
														"src": "2724:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2735:4:12",
														"nodeType": "YulTypedName",
														"src": "2735:4:12",
														"type": ""
													}
												],
												"src": "2536:652:12"
											},
											{
												"body": {
													"nativeSrc": "3292:124:12",
													"nodeType": "YulBlock",
													"src": "3292:124:12",
													"statements": [
														{
															"nativeSrc": "3302:26:12",
															"nodeType": "YulAssignment",
															"src": "3302:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3314:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3325:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3325:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3310:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3310:3:12"
																},
																"nativeSrc": "3310:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3310:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3302:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3302:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3382:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3382:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3395:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3395:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3406:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3406:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3391:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:12"
																		},
																		"nativeSrc": "3391:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3338:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3338:43:12"
																},
																"nativeSrc": "3338:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3338:71:12"
															},
															"nativeSrc": "3338:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3338:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3194:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3264:9:12",
														"nodeType": "YulTypedName",
														"src": "3264:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3276:6:12",
														"nodeType": "YulTypedName",
														"src": "3276:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3287:4:12",
														"nodeType": "YulTypedName",
														"src": "3287:4:12",
														"type": ""
													}
												],
												"src": "3194:222:12"
											},
											{
												"body": {
													"nativeSrc": "3454:28:12",
													"nodeType": "YulBlock",
													"src": "3454:28:12",
													"statements": [
														{
															"nativeSrc": "3464:12:12",
															"nodeType": "YulAssignment",
															"src": "3464:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "3471:5:12",
																"nodeType": "YulIdentifier",
																"src": "3471:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3464:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3422:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3440:5:12",
														"nodeType": "YulTypedName",
														"src": "3440:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3450:3:12",
														"nodeType": "YulTypedName",
														"src": "3450:3:12",
														"type": ""
													}
												],
												"src": "3422:60:12"
											},
											{
												"body": {
													"nativeSrc": "3548:82:12",
													"nodeType": "YulBlock",
													"src": "3548:82:12",
													"statements": [
														{
															"nativeSrc": "3558:66:12",
															"nodeType": "YulAssignment",
															"src": "3558:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3616:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3616:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3598:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3598:17:12"
																				},
																				"nativeSrc": "3598:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3598:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3589:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "3589:8:12"
																		},
																		"nativeSrc": "3589:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3571:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:17:12"
																},
																"nativeSrc": "3571:53:12",
																"nodeType": "YulFunctionCall",
																"src": "3571:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3558:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3558:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3488:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3528:5:12",
														"nodeType": "YulTypedName",
														"src": "3528:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3538:9:12",
														"nodeType": "YulTypedName",
														"src": "3538:9:12",
														"type": ""
													}
												],
												"src": "3488:142:12"
											},
											{
												"body": {
													"nativeSrc": "3696:66:12",
													"nodeType": "YulBlock",
													"src": "3696:66:12",
													"statements": [
														{
															"nativeSrc": "3706:50:12",
															"nodeType": "YulAssignment",
															"src": "3706:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3750:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3750:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3719:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3719:30:12"
																},
																"nativeSrc": "3719:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3719:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3706:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3706:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3636:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3676:5:12",
														"nodeType": "YulTypedName",
														"src": "3676:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3686:9:12",
														"nodeType": "YulTypedName",
														"src": "3686:9:12",
														"type": ""
													}
												],
												"src": "3636:126:12"
											},
											{
												"body": {
													"nativeSrc": "3842:66:12",
													"nodeType": "YulBlock",
													"src": "3842:66:12",
													"statements": [
														{
															"nativeSrc": "3852:50:12",
															"nodeType": "YulAssignment",
															"src": "3852:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3896:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3896:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3865:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3865:30:12"
																},
																"nativeSrc": "3865:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3865:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3852:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3852:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$1030_to_t_address",
												"nativeSrc": "3768:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3822:5:12",
														"nodeType": "YulTypedName",
														"src": "3822:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3832:9:12",
														"nodeType": "YulTypedName",
														"src": "3832:9:12",
														"type": ""
													}
												],
												"src": "3768:140:12"
											},
											{
												"body": {
													"nativeSrc": "3993:80:12",
													"nodeType": "YulBlock",
													"src": "3993:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4010:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4010:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4060:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4060:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$1030_to_t_address",
																			"nativeSrc": "4015:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "4015:44:12"
																		},
																		"nativeSrc": "4015:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4015:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4003:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4003:6:12"
																},
																"nativeSrc": "4003:64:12",
																"nodeType": "YulFunctionCall",
																"src": "4003:64:12"
															},
															"nativeSrc": "4003:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "4003:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack",
												"nativeSrc": "3914:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3981:5:12",
														"nodeType": "YulTypedName",
														"src": "3981:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3988:3:12",
														"nodeType": "YulTypedName",
														"src": "3988:3:12",
														"type": ""
													}
												],
												"src": "3914:159:12"
											},
											{
												"body": {
													"nativeSrc": "4191:138:12",
													"nodeType": "YulBlock",
													"src": "4191:138:12",
													"statements": [
														{
															"nativeSrc": "4201:26:12",
															"nodeType": "YulAssignment",
															"src": "4201:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4213:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4213:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4224:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4224:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4209:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4209:3:12"
																},
																"nativeSrc": "4209:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4209:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4201:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4201:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4295:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4295:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4308:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4308:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4319:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4319:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4304:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:12"
																		},
																		"nativeSrc": "4304:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack",
																	"nativeSrc": "4237:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "4237:57:12"
																},
																"nativeSrc": "4237:85:12",
																"nodeType": "YulFunctionCall",
																"src": "4237:85:12"
															},
															"nativeSrc": "4237:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "4237:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$1030__to_t_address__fromStack_reversed",
												"nativeSrc": "4079:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4163:9:12",
														"nodeType": "YulTypedName",
														"src": "4163:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4175:6:12",
														"nodeType": "YulTypedName",
														"src": "4175:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4186:4:12",
														"nodeType": "YulTypedName",
														"src": "4186:4:12",
														"type": ""
													}
												],
												"src": "4079:250:12"
											},
											{
												"body": {
													"nativeSrc": "4431:73:12",
													"nodeType": "YulBlock",
													"src": "4431:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4448:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4448:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4453:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4453:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4441:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4441:6:12"
																},
																"nativeSrc": "4441:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4441:19:12"
															},
															"nativeSrc": "4441:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "4441:19:12"
														},
														{
															"nativeSrc": "4469:29:12",
															"nodeType": "YulAssignment",
															"src": "4469:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4488:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4488:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4493:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4493:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4484:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4484:3:12"
																},
																"nativeSrc": "4484:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4484:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4469:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "4469:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4335:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4403:3:12",
														"nodeType": "YulTypedName",
														"src": "4403:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4408:6:12",
														"nodeType": "YulTypedName",
														"src": "4408:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4419:11:12",
														"nodeType": "YulTypedName",
														"src": "4419:11:12",
														"type": ""
													}
												],
												"src": "4335:169:12"
											},
											{
												"body": {
													"nativeSrc": "4616:177:12",
													"nodeType": "YulBlock",
													"src": "4616:177:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4638:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4638:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4646:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4646:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4634:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4634:3:12"
																		},
																		"nativeSrc": "4634:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4634:14:12"
																	},
																	{
																		"hexValue": "446576652073657220646f6e6f2070617261206368616d617220657373612066",
																		"kind": "string",
																		"nativeSrc": "4650:34:12",
																		"nodeType": "YulLiteral",
																		"src": "4650:34:12",
																		"type": "",
																		"value": "Deve ser dono para chamar essa f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4627:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:12"
																},
																"nativeSrc": "4627:58:12",
																"nodeType": "YulFunctionCall",
																"src": "4627:58:12"
															},
															"nativeSrc": "4627:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "4627:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4706:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4706:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4714:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4714:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4702:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4702:3:12"
																		},
																		"nativeSrc": "4702:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4702:15:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4719:66:12",
																		"nodeType": "YulLiteral",
																		"src": "4719:66:12",
																		"type": "",
																		"value": "0x756ec3a7c3a36f00000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4695:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:12"
																},
																"nativeSrc": "4695:91:12",
																"nodeType": "YulFunctionCall",
																"src": "4695:91:12"
															},
															"nativeSrc": "4695:91:12",
															"nodeType": "YulExpressionStatement",
															"src": "4695:91:12"
														}
													]
												},
												"name": "store_literal_in_memory_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a",
												"nativeSrc": "4510:283:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4608:6:12",
														"nodeType": "YulTypedName",
														"src": "4608:6:12",
														"type": ""
													}
												],
												"src": "4510:283:12"
											},
											{
												"body": {
													"nativeSrc": "4945:220:12",
													"nodeType": "YulBlock",
													"src": "4945:220:12",
													"statements": [
														{
															"nativeSrc": "4955:74:12",
															"nodeType": "YulAssignment",
															"src": "4955:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5021:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5021:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5026:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5026:2:12",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4962:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4962:58:12"
																},
																"nativeSrc": "4962:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4962:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4955:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4955:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5127:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a",
																	"nativeSrc": "5038:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "5038:88:12"
																},
																"nativeSrc": "5038:93:12",
																"nodeType": "YulFunctionCall",
																"src": "5038:93:12"
															},
															"nativeSrc": "5038:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "5038:93:12"
														},
														{
															"nativeSrc": "5140:19:12",
															"nodeType": "YulAssignment",
															"src": "5140:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5151:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5151:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5156:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5156:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5147:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5147:3:12"
																},
																"nativeSrc": "5147:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5147:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4799:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4933:3:12",
														"nodeType": "YulTypedName",
														"src": "4933:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4941:3:12",
														"nodeType": "YulTypedName",
														"src": "4941:3:12",
														"type": ""
													}
												],
												"src": "4799:366:12"
											},
											{
												"body": {
													"nativeSrc": "5342:248:12",
													"nodeType": "YulBlock",
													"src": "5342:248:12",
													"statements": [
														{
															"nativeSrc": "5352:26:12",
															"nodeType": "YulAssignment",
															"src": "5352:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5364:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5364:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5375:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5360:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5360:3:12"
																},
																"nativeSrc": "5360:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5360:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5352:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5352:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5399:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5410:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5410:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5395:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:12"
																		},
																		"nativeSrc": "5395:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5418:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5418:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5424:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5424:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5414:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5414:3:12"
																		},
																		"nativeSrc": "5414:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5414:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5388:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:12"
																},
																"nativeSrc": "5388:47:12",
																"nodeType": "YulFunctionCall",
																"src": "5388:47:12"
															},
															"nativeSrc": "5388:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "5388:47:12"
														},
														{
															"nativeSrc": "5444:139:12",
															"nodeType": "YulAssignment",
															"src": "5444:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5578:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5578:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5452:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "5452:124:12"
																},
																"nativeSrc": "5452:131:12",
																"nodeType": "YulFunctionCall",
																"src": "5452:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5444:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5444:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5171:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5322:9:12",
														"nodeType": "YulTypedName",
														"src": "5322:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5337:4:12",
														"nodeType": "YulTypedName",
														"src": "5337:4:12",
														"type": ""
													}
												],
												"src": "5171:419:12"
											},
											{
												"body": {
													"nativeSrc": "5702:108:12",
													"nodeType": "YulBlock",
													"src": "5702:108:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5724:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5724:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5732:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5732:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5720:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5720:3:12"
																		},
																		"nativeSrc": "5720:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5720:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5736:66:12",
																		"nodeType": "YulLiteral",
																		"src": "5736:66:12",
																		"type": "",
																		"value": "0x4ec3a36f20706f646520736572207a65726f0000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5713:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5713:6:12"
																},
																"nativeSrc": "5713:90:12",
																"nodeType": "YulFunctionCall",
																"src": "5713:90:12"
															},
															"nativeSrc": "5713:90:12",
															"nodeType": "YulExpressionStatement",
															"src": "5713:90:12"
														}
													]
												},
												"name": "store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
												"nativeSrc": "5596:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5694:6:12",
														"nodeType": "YulTypedName",
														"src": "5694:6:12",
														"type": ""
													}
												],
												"src": "5596:214:12"
											},
											{
												"body": {
													"nativeSrc": "5962:220:12",
													"nodeType": "YulBlock",
													"src": "5962:220:12",
													"statements": [
														{
															"nativeSrc": "5972:74:12",
															"nodeType": "YulAssignment",
															"src": "5972:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6038:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6038:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6043:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6043:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5979:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "5979:58:12"
																},
																"nativeSrc": "5979:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5979:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6144:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6144:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
																	"nativeSrc": "6055:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "6055:88:12"
																},
																"nativeSrc": "6055:93:12",
																"nodeType": "YulFunctionCall",
																"src": "6055:93:12"
															},
															"nativeSrc": "6055:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "6055:93:12"
														},
														{
															"nativeSrc": "6157:19:12",
															"nodeType": "YulAssignment",
															"src": "6157:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6168:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6168:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6173:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6164:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6164:3:12"
																},
																"nativeSrc": "6164:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6164:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6157:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5816:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5950:3:12",
														"nodeType": "YulTypedName",
														"src": "5950:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5958:3:12",
														"nodeType": "YulTypedName",
														"src": "5958:3:12",
														"type": ""
													}
												],
												"src": "5816:366:12"
											},
											{
												"body": {
													"nativeSrc": "6359:248:12",
													"nodeType": "YulBlock",
													"src": "6359:248:12",
													"statements": [
														{
															"nativeSrc": "6369:26:12",
															"nodeType": "YulAssignment",
															"src": "6369:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6392:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:12"
																},
																"nativeSrc": "6377:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6377:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6416:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6416:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6427:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6427:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6412:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6412:3:12"
																		},
																		"nativeSrc": "6412:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6412:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6435:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6435:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6441:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6441:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6431:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:12"
																		},
																		"nativeSrc": "6431:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6431:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6405:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:12"
																},
																"nativeSrc": "6405:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6405:47:12"
															},
															"nativeSrc": "6405:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "6405:47:12"
														},
														{
															"nativeSrc": "6461:139:12",
															"nodeType": "YulAssignment",
															"src": "6461:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6595:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6595:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6469:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "6469:124:12"
																},
																"nativeSrc": "6469:131:12",
																"nodeType": "YulFunctionCall",
																"src": "6469:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6461:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6461:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6188:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6339:9:12",
														"nodeType": "YulTypedName",
														"src": "6339:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6354:4:12",
														"nodeType": "YulTypedName",
														"src": "6354:4:12",
														"type": ""
													}
												],
												"src": "6188:419:12"
											},
											{
												"body": {
													"nativeSrc": "6676:80:12",
													"nodeType": "YulBlock",
													"src": "6676:80:12",
													"statements": [
														{
															"nativeSrc": "6686:22:12",
															"nodeType": "YulAssignment",
															"src": "6686:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6701:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6701:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6695:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6695:5:12"
																},
																"nativeSrc": "6695:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6695:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6686:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6686:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6744:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6744:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6717:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "6717:26:12"
																},
																"nativeSrc": "6717:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6717:33:12"
															},
															"nativeSrc": "6717:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "6717:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6613:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6654:6:12",
														"nodeType": "YulTypedName",
														"src": "6654:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6662:3:12",
														"nodeType": "YulTypedName",
														"src": "6662:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6670:5:12",
														"nodeType": "YulTypedName",
														"src": "6670:5:12",
														"type": ""
													}
												],
												"src": "6613:143:12"
											},
											{
												"body": {
													"nativeSrc": "6839:274:12",
													"nodeType": "YulBlock",
													"src": "6839:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6885:83:12",
																"nodeType": "YulBlock",
																"src": "6885:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6887:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6887:77:12"
																			},
																			"nativeSrc": "6887:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6887:79:12"
																		},
																		"nativeSrc": "6887:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6887:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6860:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6860:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6869:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6869:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6856:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6856:3:12"
																		},
																		"nativeSrc": "6856:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6856:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6881:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6881:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6852:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6852:3:12"
																},
																"nativeSrc": "6852:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6852:32:12"
															},
															"nativeSrc": "6849:119:12",
															"nodeType": "YulIf",
															"src": "6849:119:12"
														},
														{
															"nativeSrc": "6978:128:12",
															"nodeType": "YulBlock",
															"src": "6978:128:12",
															"statements": [
																{
																	"nativeSrc": "6993:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6993:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7007:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7007:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6997:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6997:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7022:74:12",
																	"nodeType": "YulAssignment",
																	"src": "7022:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7068:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7068:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7079:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7079:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7064:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7064:3:12"
																				},
																				"nativeSrc": "7064:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7088:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7088:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7032:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "7032:31:12"
																		},
																		"nativeSrc": "7032:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7032:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7022:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7022:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6762:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6809:9:12",
														"nodeType": "YulTypedName",
														"src": "6809:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6820:7:12",
														"nodeType": "YulTypedName",
														"src": "6820:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6832:6:12",
														"nodeType": "YulTypedName",
														"src": "6832:6:12",
														"type": ""
													}
												],
												"src": "6762:351:12"
											},
											{
												"body": {
													"nativeSrc": "7225:50:12",
													"nodeType": "YulBlock",
													"src": "7225:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7247:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7247:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7255:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7255:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7243:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:12"
																		},
																		"nativeSrc": "7243:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7243:14:12"
																	},
																	{
																		"hexValue": "736461736420",
																		"kind": "string",
																		"nativeSrc": "7259:8:12",
																		"nodeType": "YulLiteral",
																		"src": "7259:8:12",
																		"type": "",
																		"value": "sdasd "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7236:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7236:6:12"
																},
																"nativeSrc": "7236:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7236:32:12"
															},
															"nativeSrc": "7236:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "7236:32:12"
														}
													]
												},
												"name": "store_literal_in_memory_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372",
												"nativeSrc": "7119:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7217:6:12",
														"nodeType": "YulTypedName",
														"src": "7217:6:12",
														"type": ""
													}
												],
												"src": "7119:156:12"
											},
											{
												"body": {
													"nativeSrc": "7427:219:12",
													"nodeType": "YulBlock",
													"src": "7427:219:12",
													"statements": [
														{
															"nativeSrc": "7437:73:12",
															"nodeType": "YulAssignment",
															"src": "7437:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7503:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7503:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7508:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7508:1:12",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7444:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "7444:58:12"
																},
																"nativeSrc": "7444:66:12",
																"nodeType": "YulFunctionCall",
																"src": "7444:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7437:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7437:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7608:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7608:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372",
																	"nativeSrc": "7519:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "7519:88:12"
																},
																"nativeSrc": "7519:93:12",
																"nodeType": "YulFunctionCall",
																"src": "7519:93:12"
															},
															"nativeSrc": "7519:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "7519:93:12"
														},
														{
															"nativeSrc": "7621:19:12",
															"nodeType": "YulAssignment",
															"src": "7621:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7632:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7632:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7637:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7637:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7628:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7628:3:12"
																},
																"nativeSrc": "7628:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7628:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7621:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7621:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7281:365:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7415:3:12",
														"nodeType": "YulTypedName",
														"src": "7415:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7423:3:12",
														"nodeType": "YulTypedName",
														"src": "7423:3:12",
														"type": ""
													}
												],
												"src": "7281:365:12"
											},
											{
												"body": {
													"nativeSrc": "7823:248:12",
													"nodeType": "YulBlock",
													"src": "7823:248:12",
													"statements": [
														{
															"nativeSrc": "7833:26:12",
															"nodeType": "YulAssignment",
															"src": "7833:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7845:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7845:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7856:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:12"
																},
																"nativeSrc": "7841:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7841:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7833:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7833:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7880:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7880:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7891:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7891:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7876:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:12"
																		},
																		"nativeSrc": "7876:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7876:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7899:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7899:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7905:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7895:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:12"
																		},
																		"nativeSrc": "7895:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7869:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7869:6:12"
																},
																"nativeSrc": "7869:47:12",
																"nodeType": "YulFunctionCall",
																"src": "7869:47:12"
															},
															"nativeSrc": "7869:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "7869:47:12"
														},
														{
															"nativeSrc": "7925:139:12",
															"nodeType": "YulAssignment",
															"src": "7925:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8059:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8059:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7933:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "7933:124:12"
																},
																"nativeSrc": "7933:131:12",
																"nodeType": "YulFunctionCall",
																"src": "7933:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7925:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7925:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7652:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7803:9:12",
														"nodeType": "YulTypedName",
														"src": "7803:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7818:4:12",
														"nodeType": "YulTypedName",
														"src": "7818:4:12",
														"type": ""
													}
												],
												"src": "7652:419:12"
											},
											{
												"body": {
													"nativeSrc": "8183:61:12",
													"nodeType": "YulBlock",
													"src": "8183:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8205:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8205:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8213:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8213:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8201:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8201:3:12"
																		},
																		"nativeSrc": "8201:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8201:14:12"
																	},
																	{
																		"hexValue": "4e616f20706f646520736572207a65726f",
																		"kind": "string",
																		"nativeSrc": "8217:19:12",
																		"nodeType": "YulLiteral",
																		"src": "8217:19:12",
																		"type": "",
																		"value": "Nao pode ser zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8194:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8194:6:12"
																},
																"nativeSrc": "8194:43:12",
																"nodeType": "YulFunctionCall",
																"src": "8194:43:12"
															},
															"nativeSrc": "8194:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "8194:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b",
												"nativeSrc": "8077:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8175:6:12",
														"nodeType": "YulTypedName",
														"src": "8175:6:12",
														"type": ""
													}
												],
												"src": "8077:167:12"
											},
											{
												"body": {
													"nativeSrc": "8396:220:12",
													"nodeType": "YulBlock",
													"src": "8396:220:12",
													"statements": [
														{
															"nativeSrc": "8406:74:12",
															"nodeType": "YulAssignment",
															"src": "8406:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8472:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8472:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8477:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8477:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8413:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8413:58:12"
																},
																"nativeSrc": "8413:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8413:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8406:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8406:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8578:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b",
																	"nativeSrc": "8489:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8489:88:12"
																},
																"nativeSrc": "8489:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8489:93:12"
															},
															"nativeSrc": "8489:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8489:93:12"
														},
														{
															"nativeSrc": "8591:19:12",
															"nodeType": "YulAssignment",
															"src": "8591:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8602:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8602:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8607:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8607:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8598:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8598:3:12"
																},
																"nativeSrc": "8598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8598:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8591:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8591:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8250:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8384:3:12",
														"nodeType": "YulTypedName",
														"src": "8384:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8392:3:12",
														"nodeType": "YulTypedName",
														"src": "8392:3:12",
														"type": ""
													}
												],
												"src": "8250:366:12"
											},
											{
												"body": {
													"nativeSrc": "8793:248:12",
													"nodeType": "YulBlock",
													"src": "8793:248:12",
													"statements": [
														{
															"nativeSrc": "8803:26:12",
															"nodeType": "YulAssignment",
															"src": "8803:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8815:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8815:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8826:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8811:3:12"
																},
																"nativeSrc": "8811:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8811:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8803:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8803:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8850:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8850:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8861:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8861:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8846:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8846:3:12"
																		},
																		"nativeSrc": "8846:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8846:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8869:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8869:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8875:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8865:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8865:3:12"
																		},
																		"nativeSrc": "8865:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8865:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8839:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:12"
																},
																"nativeSrc": "8839:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8839:47:12"
															},
															"nativeSrc": "8839:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8839:47:12"
														},
														{
															"nativeSrc": "8895:139:12",
															"nodeType": "YulAssignment",
															"src": "8895:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9029:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9029:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8903:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "8903:124:12"
																},
																"nativeSrc": "8903:131:12",
																"nodeType": "YulFunctionCall",
																"src": "8903:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8895:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8895:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8622:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8773:9:12",
														"nodeType": "YulTypedName",
														"src": "8773:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8788:4:12",
														"nodeType": "YulTypedName",
														"src": "8788:4:12",
														"type": ""
													}
												],
												"src": "8622:419:12"
											},
											{
												"body": {
													"nativeSrc": "9201:288:12",
													"nodeType": "YulBlock",
													"src": "9201:288:12",
													"statements": [
														{
															"nativeSrc": "9211:26:12",
															"nodeType": "YulAssignment",
															"src": "9211:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9223:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9223:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9234:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9219:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9219:3:12"
																},
																"nativeSrc": "9219:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9219:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9211:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9291:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9291:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9304:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9304:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9315:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9315:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9300:3:12"
																		},
																		"nativeSrc": "9300:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9300:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9247:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9247:43:12"
																},
																"nativeSrc": "9247:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9247:71:12"
															},
															"nativeSrc": "9247:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9247:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9372:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9372:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9385:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9385:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9396:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9396:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9381:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:12"
																		},
																		"nativeSrc": "9381:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9328:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9328:43:12"
																},
																"nativeSrc": "9328:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9328:72:12"
															},
															"nativeSrc": "9328:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9328:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9454:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9454:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9467:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9478:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9463:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:12"
																		},
																		"nativeSrc": "9463:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9410:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9410:43:12"
																},
																"nativeSrc": "9410:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9410:72:12"
															},
															"nativeSrc": "9410:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9410:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9047:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9157:9:12",
														"nodeType": "YulTypedName",
														"src": "9157:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9169:6:12",
														"nodeType": "YulTypedName",
														"src": "9169:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9177:6:12",
														"nodeType": "YulTypedName",
														"src": "9177:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9185:6:12",
														"nodeType": "YulTypedName",
														"src": "9185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9196:4:12",
														"nodeType": "YulTypedName",
														"src": "9196:4:12",
														"type": ""
													}
												],
												"src": "9047:442:12"
											},
											{
												"body": {
													"nativeSrc": "9535:76:12",
													"nodeType": "YulBlock",
													"src": "9535:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9589:16:12",
																"nodeType": "YulBlock",
																"src": "9589:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9598:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9598:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9601:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9601:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9591:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9591:6:12"
																			},
																			"nativeSrc": "9591:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9591:12:12"
																		},
																		"nativeSrc": "9591:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9591:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9558:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9558:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9580:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "9580:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9565:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "9565:14:12"
																				},
																				"nativeSrc": "9565:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9565:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9555:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9555:2:12"
																		},
																		"nativeSrc": "9555:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9555:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9548:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9548:6:12"
																},
																"nativeSrc": "9548:40:12",
																"nodeType": "YulFunctionCall",
																"src": "9548:40:12"
															},
															"nativeSrc": "9545:60:12",
															"nodeType": "YulIf",
															"src": "9545:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9495:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9528:5:12",
														"nodeType": "YulTypedName",
														"src": "9528:5:12",
														"type": ""
													}
												],
												"src": "9495:116:12"
											},
											{
												"body": {
													"nativeSrc": "9677:77:12",
													"nodeType": "YulBlock",
													"src": "9677:77:12",
													"statements": [
														{
															"nativeSrc": "9687:22:12",
															"nodeType": "YulAssignment",
															"src": "9687:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9702:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9702:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9696:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9696:5:12"
																},
																"nativeSrc": "9696:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9696:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9687:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9687:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9742:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9742:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9718:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "9718:23:12"
																},
																"nativeSrc": "9718:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9718:30:12"
															},
															"nativeSrc": "9718:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9718:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9617:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9655:6:12",
														"nodeType": "YulTypedName",
														"src": "9655:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9663:3:12",
														"nodeType": "YulTypedName",
														"src": "9663:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9671:5:12",
														"nodeType": "YulTypedName",
														"src": "9671:5:12",
														"type": ""
													}
												],
												"src": "9617:137:12"
											},
											{
												"body": {
													"nativeSrc": "9834:271:12",
													"nodeType": "YulBlock",
													"src": "9834:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9880:83:12",
																"nodeType": "YulBlock",
																"src": "9880:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9882:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9882:77:12"
																			},
																			"nativeSrc": "9882:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9882:79:12"
																		},
																		"nativeSrc": "9882:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9882:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9864:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9864:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9851:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:12"
																		},
																		"nativeSrc": "9851:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9851:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9876:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9876:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9847:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9847:3:12"
																},
																"nativeSrc": "9847:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9847:32:12"
															},
															"nativeSrc": "9844:119:12",
															"nodeType": "YulIf",
															"src": "9844:119:12"
														},
														{
															"nativeSrc": "9973:125:12",
															"nodeType": "YulBlock",
															"src": "9973:125:12",
															"statements": [
																{
																	"nativeSrc": "9988:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9988:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10002:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10002:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9992:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9992:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10017:71:12",
																	"nodeType": "YulAssignment",
																	"src": "10017:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10060:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10060:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10071:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10071:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10056:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10056:3:12"
																				},
																				"nativeSrc": "10056:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10056:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10080:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10080:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10027:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "10027:28:12"
																		},
																		"nativeSrc": "10027:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10027:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10017:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10017:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9760:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9804:9:12",
														"nodeType": "YulTypedName",
														"src": "9804:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9815:7:12",
														"nodeType": "YulTypedName",
														"src": "9815:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9827:6:12",
														"nodeType": "YulTypedName",
														"src": "9827:6:12",
														"type": ""
													}
												],
												"src": "9760:345:12"
											},
											{
												"body": {
													"nativeSrc": "10139:152:12",
													"nodeType": "YulBlock",
													"src": "10139:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10156:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10156:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10159:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10159:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10149:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10149:6:12"
																},
																"nativeSrc": "10149:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10149:88:12"
															},
															"nativeSrc": "10149:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10149:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10253:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10253:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10256:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10256:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10246:6:12"
																},
																"nativeSrc": "10246:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10246:15:12"
															},
															"nativeSrc": "10246:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10246:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10277:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10277:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10280:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10280:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10270:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:12"
																},
																"nativeSrc": "10270:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10270:15:12"
															},
															"nativeSrc": "10270:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10270:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10111:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10111:180:12"
											},
											{
												"body": {
													"nativeSrc": "10341:147:12",
													"nodeType": "YulBlock",
													"src": "10341:147:12",
													"statements": [
														{
															"nativeSrc": "10351:25:12",
															"nodeType": "YulAssignment",
															"src": "10351:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10374:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10374:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10356:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10356:17:12"
																},
																"nativeSrc": "10356:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10356:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10351:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10351:1:12"
																}
															]
														},
														{
															"nativeSrc": "10385:25:12",
															"nodeType": "YulAssignment",
															"src": "10385:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10408:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10408:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10390:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10390:17:12"
																},
																"nativeSrc": "10390:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10390:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10385:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10385:1:12"
																}
															]
														},
														{
															"nativeSrc": "10419:16:12",
															"nodeType": "YulAssignment",
															"src": "10419:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10430:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10430:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10433:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10433:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10426:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10426:3:12"
																},
																"nativeSrc": "10426:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10426:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10419:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10419:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10459:22:12",
																"nodeType": "YulBlock",
																"src": "10459:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10461:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10461:16:12"
																			},
																			"nativeSrc": "10461:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10461:18:12"
																		},
																		"nativeSrc": "10461:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10461:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10451:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10451:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10454:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10454:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10448:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10448:2:12"
																},
																"nativeSrc": "10448:10:12",
																"nodeType": "YulFunctionCall",
																"src": "10448:10:12"
															},
															"nativeSrc": "10445:36:12",
															"nodeType": "YulIf",
															"src": "10445:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10297:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10328:1:12",
														"nodeType": "YulTypedName",
														"src": "10328:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10331:1:12",
														"nodeType": "YulTypedName",
														"src": "10331:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10337:3:12",
														"nodeType": "YulTypedName",
														"src": "10337:3:12",
														"type": ""
													}
												],
												"src": "10297:191:12"
											},
											{
												"body": {
													"nativeSrc": "10648:288:12",
													"nodeType": "YulBlock",
													"src": "10648:288:12",
													"statements": [
														{
															"nativeSrc": "10658:26:12",
															"nodeType": "YulAssignment",
															"src": "10658:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10670:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10670:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10681:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10681:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10666:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10666:3:12"
																},
																"nativeSrc": "10666:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10666:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10658:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10658:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10738:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10738:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10751:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10751:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10762:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10762:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10747:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10747:3:12"
																		},
																		"nativeSrc": "10747:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10694:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10694:43:12"
																},
																"nativeSrc": "10694:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10694:71:12"
															},
															"nativeSrc": "10694:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10694:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10819:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10819:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10832:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10832:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10843:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10843:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10828:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10828:3:12"
																		},
																		"nativeSrc": "10828:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10828:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10775:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10775:43:12"
																},
																"nativeSrc": "10775:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10775:72:12"
															},
															"nativeSrc": "10775:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10775:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10901:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10901:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10914:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10914:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10925:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10925:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10910:3:12"
																		},
																		"nativeSrc": "10910:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10910:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10857:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10857:43:12"
																},
																"nativeSrc": "10857:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10857:72:12"
															},
															"nativeSrc": "10857:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10857:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10494:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10604:9:12",
														"nodeType": "YulTypedName",
														"src": "10604:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10616:6:12",
														"nodeType": "YulTypedName",
														"src": "10616:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10624:6:12",
														"nodeType": "YulTypedName",
														"src": "10624:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10632:6:12",
														"nodeType": "YulTypedName",
														"src": "10632:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10643:4:12",
														"nodeType": "YulTypedName",
														"src": "10643:4:12",
														"type": ""
													}
												],
												"src": "10494:442:12"
											},
											{
												"body": {
													"nativeSrc": "11048:55:12",
													"nodeType": "YulBlock",
													"src": "11048:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11070:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11070:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11078:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11078:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11066:3:12"
																		},
																		"nativeSrc": "11066:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11066:14:12"
																	},
																	{
																		"hexValue": "696420696e76616c69646f",
																		"kind": "string",
																		"nativeSrc": "11082:13:12",
																		"nodeType": "YulLiteral",
																		"src": "11082:13:12",
																		"type": "",
																		"value": "id invalido"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11059:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11059:6:12"
																},
																"nativeSrc": "11059:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11059:37:12"
															},
															"nativeSrc": "11059:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "11059:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93",
												"nativeSrc": "10942:161:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11040:6:12",
														"nodeType": "YulTypedName",
														"src": "11040:6:12",
														"type": ""
													}
												],
												"src": "10942:161:12"
											},
											{
												"body": {
													"nativeSrc": "11255:220:12",
													"nodeType": "YulBlock",
													"src": "11255:220:12",
													"statements": [
														{
															"nativeSrc": "11265:74:12",
															"nodeType": "YulAssignment",
															"src": "11265:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11331:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11331:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11336:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11336:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11272:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11272:58:12"
																},
																"nativeSrc": "11272:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11272:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11265:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11437:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11437:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93",
																	"nativeSrc": "11348:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11348:88:12"
																},
																"nativeSrc": "11348:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11348:93:12"
															},
															"nativeSrc": "11348:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11348:93:12"
														},
														{
															"nativeSrc": "11450:19:12",
															"nodeType": "YulAssignment",
															"src": "11450:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11461:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11461:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11466:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11466:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11457:3:12"
																},
																"nativeSrc": "11457:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11457:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11450:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11450:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11109:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11243:3:12",
														"nodeType": "YulTypedName",
														"src": "11243:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11251:3:12",
														"nodeType": "YulTypedName",
														"src": "11251:3:12",
														"type": ""
													}
												],
												"src": "11109:366:12"
											},
											{
												"body": {
													"nativeSrc": "11652:248:12",
													"nodeType": "YulBlock",
													"src": "11652:248:12",
													"statements": [
														{
															"nativeSrc": "11662:26:12",
															"nodeType": "YulAssignment",
															"src": "11662:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11674:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11674:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11685:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11685:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11670:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11670:3:12"
																},
																"nativeSrc": "11670:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11670:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11662:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11662:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11709:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11709:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11720:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11720:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11705:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11705:3:12"
																		},
																		"nativeSrc": "11705:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11705:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11728:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11728:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11734:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11734:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11724:3:12"
																		},
																		"nativeSrc": "11724:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11724:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11698:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11698:6:12"
																},
																"nativeSrc": "11698:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11698:47:12"
															},
															"nativeSrc": "11698:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11698:47:12"
														},
														{
															"nativeSrc": "11754:139:12",
															"nodeType": "YulAssignment",
															"src": "11754:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11888:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11888:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11762:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11762:124:12"
																},
																"nativeSrc": "11762:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11762:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11754:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11754:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11481:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11632:9:12",
														"nodeType": "YulTypedName",
														"src": "11632:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11647:4:12",
														"nodeType": "YulTypedName",
														"src": "11647:4:12",
														"type": ""
													}
												],
												"src": "11481:419:12"
											},
											{
												"body": {
													"nativeSrc": "12012:58:12",
													"nodeType": "YulBlock",
													"src": "12012:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12034:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12034:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12042:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12042:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12030:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12030:3:12"
																		},
																		"nativeSrc": "12030:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12030:14:12"
																	},
																	{
																		"hexValue": "646576652073657220617469766f",
																		"kind": "string",
																		"nativeSrc": "12046:16:12",
																		"nodeType": "YulLiteral",
																		"src": "12046:16:12",
																		"type": "",
																		"value": "deve ser ativo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12023:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12023:6:12"
																},
																"nativeSrc": "12023:40:12",
																"nodeType": "YulFunctionCall",
																"src": "12023:40:12"
															},
															"nativeSrc": "12023:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "12023:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797",
												"nativeSrc": "11906:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12004:6:12",
														"nodeType": "YulTypedName",
														"src": "12004:6:12",
														"type": ""
													}
												],
												"src": "11906:164:12"
											},
											{
												"body": {
													"nativeSrc": "12222:220:12",
													"nodeType": "YulBlock",
													"src": "12222:220:12",
													"statements": [
														{
															"nativeSrc": "12232:74:12",
															"nodeType": "YulAssignment",
															"src": "12232:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12298:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12298:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12303:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12303:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12239:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12239:58:12"
																},
																"nativeSrc": "12239:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12239:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12232:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12404:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12404:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797",
																	"nativeSrc": "12315:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12315:88:12"
																},
																"nativeSrc": "12315:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12315:93:12"
															},
															"nativeSrc": "12315:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12315:93:12"
														},
														{
															"nativeSrc": "12417:19:12",
															"nodeType": "YulAssignment",
															"src": "12417:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12428:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12428:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12433:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12424:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:12"
																},
																"nativeSrc": "12424:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12424:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12417:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12417:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12076:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12210:3:12",
														"nodeType": "YulTypedName",
														"src": "12210:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12218:3:12",
														"nodeType": "YulTypedName",
														"src": "12218:3:12",
														"type": ""
													}
												],
												"src": "12076:366:12"
											},
											{
												"body": {
													"nativeSrc": "12619:248:12",
													"nodeType": "YulBlock",
													"src": "12619:248:12",
													"statements": [
														{
															"nativeSrc": "12629:26:12",
															"nodeType": "YulAssignment",
															"src": "12629:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12641:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12641:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12652:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12652:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12637:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12637:3:12"
																},
																"nativeSrc": "12637:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12637:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12629:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12629:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12676:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12676:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12687:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12687:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12672:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12672:3:12"
																		},
																		"nativeSrc": "12672:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12672:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12695:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12695:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12701:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12701:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12691:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12691:3:12"
																		},
																		"nativeSrc": "12691:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12691:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12665:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:12"
																},
																"nativeSrc": "12665:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12665:47:12"
															},
															"nativeSrc": "12665:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12665:47:12"
														},
														{
															"nativeSrc": "12721:139:12",
															"nodeType": "YulAssignment",
															"src": "12721:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12855:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12855:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12729:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12729:124:12"
																},
																"nativeSrc": "12729:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12729:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12721:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12721:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12448:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12599:9:12",
														"nodeType": "YulTypedName",
														"src": "12599:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12614:4:12",
														"nodeType": "YulTypedName",
														"src": "12614:4:12",
														"type": ""
													}
												],
												"src": "12448:419:12"
											},
											{
												"body": {
													"nativeSrc": "12918:149:12",
													"nodeType": "YulBlock",
													"src": "12918:149:12",
													"statements": [
														{
															"nativeSrc": "12928:25:12",
															"nodeType": "YulAssignment",
															"src": "12928:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12951:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12951:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12933:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12933:17:12"
																},
																"nativeSrc": "12933:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12933:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12928:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12928:1:12"
																}
															]
														},
														{
															"nativeSrc": "12962:25:12",
															"nodeType": "YulAssignment",
															"src": "12962:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12985:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12985:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12967:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "12967:17:12"
																},
																"nativeSrc": "12967:20:12",
																"nodeType": "YulFunctionCall",
																"src": "12967:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12962:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "12962:1:12"
																}
															]
														},
														{
															"nativeSrc": "12996:17:12",
															"nodeType": "YulAssignment",
															"src": "12996:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13008:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13008:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13011:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13011:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13004:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13004:3:12"
																},
																"nativeSrc": "13004:9:12",
																"nodeType": "YulFunctionCall",
																"src": "13004:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12996:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12996:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13038:22:12",
																"nodeType": "YulBlock",
																"src": "13038:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13040:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13040:16:12"
																			},
																			"nativeSrc": "13040:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13040:18:12"
																		},
																		"nativeSrc": "13040:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13040:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13029:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13029:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13035:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "13035:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13026:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13026:2:12"
																},
																"nativeSrc": "13026:11:12",
																"nodeType": "YulFunctionCall",
																"src": "13026:11:12"
															},
															"nativeSrc": "13023:37:12",
															"nodeType": "YulIf",
															"src": "13023:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12873:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12904:1:12",
														"nodeType": "YulTypedName",
														"src": "12904:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12907:1:12",
														"nodeType": "YulTypedName",
														"src": "12907:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12913:4:12",
														"nodeType": "YulTypedName",
														"src": "12913:4:12",
														"type": ""
													}
												],
												"src": "12873:194:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_address_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$1030_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$1030_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$1030__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$1030_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deve ser dono para chamar essa f\")\n\n        mstore(add(memPtr, 32), 0x756ec3a7c3a36f00000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e(memPtr) {\n\n        mstore(add(memPtr, 0), 0x4ec3a36f20706f646520736572207a65726f0000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372(memPtr) {\n\n        mstore(add(memPtr, 0), \"sdasd \")\n\n    }\n\n    function abi_encode_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nao pode ser zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93(memPtr) {\n\n        mstore(add(memPtr, 0), \"id invalido\")\n\n    }\n\n    function abi_encode_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797(memPtr) {\n\n        mstore(add(memPtr, 0), \"deve ser ativo\")\n\n    }\n\n    function abi_encode_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1218": [
									{
										"length": 32,
										"start": 684
									},
									{
										"length": 32,
										"start": 966
									},
									{
										"length": 32,
										"start": 2443
									},
									{
										"length": 32,
										"start": 3304
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CB02950 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x7CB02950 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x90041A40 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1AD JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x2C562A44 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x506E1D52 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x56AFFF7C EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5F6DF038 EQ PUSH2 0x111 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP3 SWAP2 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0xCE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xF40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0x1041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x186A0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0xECC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1073 JUMP JUMPDEST GT PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x379 SWAP1 PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST POP PUSH2 0x46A PUSH2 0xD0A JUMP JUMPDEST DUP3 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP CALLER DUP2 PUSH1 0x60 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x7 PUSH0 DUP4 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x8 PUSH0 DUP4 PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD SUB PUSH2 0x6C2 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST PUSH32 0x65FED65FF7CD6B2D79D64E55D0439FBA77CB42A9ADABF9FA002EA4C20A1F81E1 DUP2 PUSH0 ADD MLOAD DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 SLOAD PUSH1 0x3 PUSH0 ADD SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x849 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x889 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0x80 ADD MLOAD ISZERO ISZERO EQ PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA06 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x11CD JUMP JUMPDEST POP PUSH0 DUP2 PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xAE1 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xC60 JUMPI PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD ISZERO PUSH2 0xC52 JUMPI PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 SLOAD SUB PUSH2 0xC51 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP JUMPDEST JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD62 DUP2 PUSH2 0xD50 JUMP JUMPDEST DUP2 EQ PUSH2 0xD6C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD7D DUP2 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD99 JUMPI PUSH2 0xD98 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA6 DUP6 DUP3 DUP7 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDB7 DUP6 DUP3 DUP7 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCA DUP2 PUSH2 0xD50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDE3 PUSH0 DUP4 ADD DUP6 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH2 0xE0B PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE19 DUP5 DUP3 DUP6 ADD PUSH2 0xD6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE4B DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE5B DUP2 PUSH2 0xE41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE75 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xE8E PUSH0 DUP4 ADD DUP9 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xE9B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xEA8 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0xEB5 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0xEC2 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE6C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDF PUSH0 DUP4 ADD DUP5 PUSH2 0xE52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF08 PUSH2 0xF03 PUSH2 0xEFE DUP5 PUSH2 0xE22 JUMP JUMPDEST PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 DUP3 PUSH2 0xEEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF2A DUP3 PUSH2 0xF0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3A DUP2 PUSH2 0xF20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF53 PUSH0 DUP4 ADD DUP5 PUSH2 0xF31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446576652073657220646F6E6F2070617261206368616D617220657373612066 PUSH0 DUP3 ADD MSTORE PUSH32 0x756EC3A7C3A36F00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFC3 PUSH1 0x27 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCE DUP3 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFF0 DUP2 PUSH2 0xFB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4EC3A36F20706F646520736572207A65726F0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x102B PUSH1 0x12 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1036 DUP3 PUSH2 0xFF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1058 DUP2 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x106D DUP2 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1088 JUMPI PUSH2 0x1087 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1095 DUP5 DUP3 DUP6 ADD PUSH2 0x105F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7364617364200000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10D2 PUSH1 0x6 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DD DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10FF DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E616F20706F646520736572207A65726F000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x113A PUSH1 0x11 DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1145 DUP3 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1167 DUP2 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1181 PUSH0 DUP4 ADD DUP7 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x118E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x119B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0x11B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11C7 DUP2 PUSH2 0x11A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E1 PUSH2 0xD4C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11EF DUP5 DUP3 DUP6 ADD PUSH2 0x11B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x122F DUP3 PUSH2 0xD50 JUMP JUMPDEST SWAP2 POP PUSH2 0x123A DUP4 PUSH2 0xD50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x126B PUSH0 DUP4 ADD DUP7 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x1278 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDC1 JUMP JUMPDEST PUSH2 0x1285 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDC1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696420696E76616C69646F000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12C1 PUSH1 0xB DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x12CC DUP3 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12EE DUP2 PUSH2 0x12B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x646576652073657220617469766F000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1329 PUSH1 0xE DUP4 PUSH2 0xF59 JUMP JUMPDEST SWAP2 POP PUSH2 0x1334 DUP3 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1356 DUP2 PUSH2 0x131D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1367 DUP3 PUSH2 0xD50 JUMP JUMPDEST SWAP2 POP PUSH2 0x1372 DUP4 PUSH2 0xD50 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x138A JUMPI PUSH2 0x1389 PUSH2 0x11F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH11 0xF5FD619EF36EF7A9424406 RETURNDATACOPY BASEFEE BYTE PUSH11 0x50C0C7B890F9BF78EC38D8 0xE7 0xD3 CODECOPY INVALID PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "438:3902:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1290:998;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3445:132;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;779:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3670:167;;;;;;;;;;;;;:::i;:::-;;2557:775;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;167:20:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;827:47:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;492:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1290:998;251:5:11;;;;;;;;;;237:19;;:10;:19;;;229:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1425:1:9::1;1406:16;:20:::0;1398:58:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1514:6;1475:5;:15;;;1499:10;1475:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;1467:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1562:1;1550:9;:13:::0;1542:43:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1598:5;:18;;;1617:10;1637:4;1644:16;1598:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1682:24;;:::i;:::-;1747:16;1717:10;:27;;:46;;;::::0;::::1;1797:9;1774:10;:20;;:32;;;::::0;::::1;1843:10;1817;:15;;:37;;;;;;;;;::::0;::::1;1886:4;1865:10;:18;;:25;;;;;;;;;::::0;::::1;1927:1;1915:11:::0;::::1;:13;;;;:::i;:::-;1901:11;:27;;;;1955:11;;1939:10;:13;;:27;;;::::0;::::1;2002:10;1977:7;:22;1985:10;:13;;;1977:22;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:10;2023:13;:28;2037:10;:13;;;2023:28;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2116:1;2097:17;;:20;;;;:::i;:::-;2077:17;:40;;;;2152:1;2131:17;;:22:::0;2128:78:::1;;2184:10;2169:12;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2128:78;2221:59;2237:10;:13;;;2252:16;2270:9;2221:59;;;;;;;;:::i;:::-;;;;;;;;1387:901;1290:998:::0;;:::o;3445:132::-;3504:4;3510;3534:17;;3553:12;:15;;;3526:43;;;;3445:132;;:::o;779:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3670:167::-;251:5:11;;;;;;;;;;237:19;;:10;:19;;;229:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3730:25:9::1;3766:10;3730:47;;3788:9;:18;;:41;3807:21;3788:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3719:118;3670:167::o:0;2557:775::-;2635:11;;2629:2;:17;;2621:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2673:20;2696:7;:11;2704:2;2696:11;;;;;;;;;;;2673:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:4;2726:22;;:6;:14;;;:22;;;2718:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2780:5;:18;;;2807:4;2822:10;2835:6;:23;;;2780:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2887:5;2870:6;:14;;:22;;;;;;;;;;;2917:6;2903:7;:11;2911:2;2903:11;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2975:1;2956:17;;:20;;;;:::i;:::-;2936:17;:40;;;;2994:6;2989:336;3005:11;;3002:1;:14;2989:336;;;3038:24;3065:7;:10;3073:1;3065:10;;;;;;;;;;;3038:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3093:10;:18;;;3090:209;;;3170:1;3151:17;;:20;;;;:::i;:::-;3131:17;:40;;;;3214:1;3193:17;;:22;3190:94;;3254:10;3239:12;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3190:94;3090:209;3023:302;3018:3;;;;;;;2989:336;;;;2610:722;2557:775;:::o;167:20:11:-;;;;;;;;;;;;:::o;827:47:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;492:28::-;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:118::-;1257:24;1275:5;1257:24;:::i;:::-;1252:3;1245:37;1170:118;;:::o;1294:332::-;1415:4;1453:2;1442:9;1438:18;1430:26;;1466:71;1534:1;1523:9;1519:17;1510:6;1466:71;:::i;:::-;1547:72;1615:2;1604:9;1600:18;1591:6;1547:72;:::i;:::-;1294:332;;;;;:::o;1632:329::-;1691:6;1740:2;1728:9;1719:7;1715:23;1711:32;1708:119;;;1746:79;;:::i;:::-;1708:119;1866:1;1891:53;1936:7;1927:6;1916:9;1912:22;1891:53;:::i;:::-;1881:63;;1837:117;1632:329;;;;:::o;1967:126::-;2004:7;2044:42;2037:5;2033:54;2022:65;;1967:126;;;:::o;2099:96::-;2136:7;2165:24;2183:5;2165:24;:::i;:::-;2154:35;;2099:96;;;:::o;2201:118::-;2288:24;2306:5;2288:24;:::i;:::-;2283:3;2276:37;2201:118;;:::o;2325:90::-;2359:7;2402:5;2395:13;2388:21;2377:32;;2325:90;;;:::o;2421:109::-;2502:21;2517:5;2502:21;:::i;:::-;2497:3;2490:34;2421:109;;:::o;2536:652::-;2735:4;2773:3;2762:9;2758:19;2750:27;;2787:71;2855:1;2844:9;2840:17;2831:6;2787:71;:::i;:::-;2868:72;2936:2;2925:9;2921:18;2912:6;2868:72;:::i;:::-;2950;3018:2;3007:9;3003:18;2994:6;2950:72;:::i;:::-;3032;3100:2;3089:9;3085:18;3076:6;3032:72;:::i;:::-;3114:67;3176:3;3165:9;3161:19;3152:6;3114:67;:::i;:::-;2536:652;;;;;;;;:::o;3194:222::-;3287:4;3325:2;3314:9;3310:18;3302:26;;3338:71;3406:1;3395:9;3391:17;3382:6;3338:71;:::i;:::-;3194:222;;;;:::o;3422:60::-;3450:3;3471:5;3464:12;;3422:60;;;:::o;3488:142::-;3538:9;3571:53;3589:34;3598:24;3616:5;3598:24;:::i;:::-;3589:34;:::i;:::-;3571:53;:::i;:::-;3558:66;;3488:142;;;:::o;3636:126::-;3686:9;3719:37;3750:5;3719:37;:::i;:::-;3706:50;;3636:126;;;:::o;3768:140::-;3832:9;3865:37;3896:5;3865:37;:::i;:::-;3852:50;;3768:140;;;:::o;3914:159::-;4015:51;4060:5;4015:51;:::i;:::-;4010:3;4003:64;3914:159;;:::o;4079:250::-;4186:4;4224:2;4213:9;4209:18;4201:26;;4237:85;4319:1;4308:9;4304:17;4295:6;4237:85;:::i;:::-;4079:250;;;;:::o;4335:169::-;4419:11;4453:6;4448:3;4441:19;4493:4;4488:3;4484:14;4469:29;;4335:169;;;;:::o;4510:283::-;4650:34;4646:1;4638:6;4634:14;4627:58;4719:66;4714:2;4706:6;4702:15;4695:91;4510:283;:::o;4799:366::-;4941:3;4962:67;5026:2;5021:3;4962:67;:::i;:::-;4955:74;;5038:93;5127:3;5038:93;:::i;:::-;5156:2;5151:3;5147:12;5140:19;;4799:366;;;:::o;5171:419::-;5337:4;5375:2;5364:9;5360:18;5352:26;;5424:9;5418:4;5414:20;5410:1;5399:9;5395:17;5388:47;5452:131;5578:4;5452:131;:::i;:::-;5444:139;;5171:419;;;:::o;5596:214::-;5736:66;5732:1;5724:6;5720:14;5713:90;5596:214;:::o;5816:366::-;5958:3;5979:67;6043:2;6038:3;5979:67;:::i;:::-;5972:74;;6055:93;6144:3;6055:93;:::i;:::-;6173:2;6168:3;6164:12;6157:19;;5816:366;;;:::o;6188:419::-;6354:4;6392:2;6381:9;6377:18;6369:26;;6441:9;6435:4;6431:20;6427:1;6416:9;6412:17;6405:47;6469:131;6595:4;6469:131;:::i;:::-;6461:139;;6188:419;;;:::o;6613:143::-;6670:5;6701:6;6695:13;6686:22;;6717:33;6744:5;6717:33;:::i;:::-;6613:143;;;;:::o;6762:351::-;6832:6;6881:2;6869:9;6860:7;6856:23;6852:32;6849:119;;;6887:79;;:::i;:::-;6849:119;7007:1;7032:64;7088:7;7079:6;7068:9;7064:22;7032:64;:::i;:::-;7022:74;;6978:128;6762:351;;;;:::o;7119:156::-;7259:8;7255:1;7247:6;7243:14;7236:32;7119:156;:::o;7281:365::-;7423:3;7444:66;7508:1;7503:3;7444:66;:::i;:::-;7437:73;;7519:93;7608:3;7519:93;:::i;:::-;7637:2;7632:3;7628:12;7621:19;;7281:365;;;:::o;7652:419::-;7818:4;7856:2;7845:9;7841:18;7833:26;;7905:9;7899:4;7895:20;7891:1;7880:9;7876:17;7869:47;7933:131;8059:4;7933:131;:::i;:::-;7925:139;;7652:419;;;:::o;8077:167::-;8217:19;8213:1;8205:6;8201:14;8194:43;8077:167;:::o;8250:366::-;8392:3;8413:67;8477:2;8472:3;8413:67;:::i;:::-;8406:74;;8489:93;8578:3;8489:93;:::i;:::-;8607:2;8602:3;8598:12;8591:19;;8250:366;;;:::o;8622:419::-;8788:4;8826:2;8815:9;8811:18;8803:26;;8875:9;8869:4;8865:20;8861:1;8850:9;8846:17;8839:47;8903:131;9029:4;8903:131;:::i;:::-;8895:139;;8622:419;;;:::o;9047:442::-;9196:4;9234:2;9223:9;9219:18;9211:26;;9247:71;9315:1;9304:9;9300:17;9291:6;9247:71;:::i;:::-;9328:72;9396:2;9385:9;9381:18;9372:6;9328:72;:::i;:::-;9410;9478:2;9467:9;9463:18;9454:6;9410:72;:::i;:::-;9047:442;;;;;;:::o;9495:116::-;9565:21;9580:5;9565:21;:::i;:::-;9558:5;9555:32;9545:60;;9601:1;9598;9591:12;9545:60;9495:116;:::o;9617:137::-;9671:5;9702:6;9696:13;9687:22;;9718:30;9742:5;9718:30;:::i;:::-;9617:137;;;;:::o;9760:345::-;9827:6;9876:2;9864:9;9855:7;9851:23;9847:32;9844:119;;;9882:79;;:::i;:::-;9844:119;10002:1;10027:61;10080:7;10071:6;10060:9;10056:22;10027:61;:::i;:::-;10017:71;;9973:125;9760:345;;;;:::o;10111:180::-;10159:77;10156:1;10149:88;10256:4;10253:1;10246:15;10280:4;10277:1;10270:15;10297:191;10337:3;10356:20;10374:1;10356:20;:::i;:::-;10351:25;;10390:20;10408:1;10390:20;:::i;:::-;10385:25;;10433:1;10430;10426:9;10419:16;;10454:3;10451:1;10448:10;10445:36;;;10461:18;;:::i;:::-;10445:36;10297:191;;;;:::o;10494:442::-;10643:4;10681:2;10670:9;10666:18;10658:26;;10694:71;10762:1;10751:9;10747:17;10738:6;10694:71;:::i;:::-;10775:72;10843:2;10832:9;10828:18;10819:6;10775:72;:::i;:::-;10857;10925:2;10914:9;10910:18;10901:6;10857:72;:::i;:::-;10494:442;;;;;;:::o;10942:161::-;11082:13;11078:1;11070:6;11066:14;11059:37;10942:161;:::o;11109:366::-;11251:3;11272:67;11336:2;11331:3;11272:67;:::i;:::-;11265:74;;11348:93;11437:3;11348:93;:::i;:::-;11466:2;11461:3;11457:12;11450:19;;11109:366;;;:::o;11481:419::-;11647:4;11685:2;11674:9;11670:18;11662:26;;11734:9;11728:4;11724:20;11720:1;11709:9;11705:17;11698:47;11762:131;11888:4;11762:131;:::i;:::-;11754:139;;11481:419;;;:::o;11906:164::-;12046:16;12042:1;12034:6;12030:14;12023:40;11906:164;:::o;12076:366::-;12218:3;12239:67;12303:2;12298:3;12239:67;:::i;:::-;12232:74;;12315:93;12404:3;12315:93;:::i;:::-;12433:2;12428:3;12424:12;12417:19;;12076:366;;;:::o;12448:419::-;12614:4;12652:2;12641:9;12637:18;12629:26;;12701:9;12695:4;12691:20;12687:1;12676:9;12672:17;12665:47;12729:131;12855:4;12729:131;:::i;:::-;12721:139;;12448:419;;;:::o;12873:194::-;12913:4;12933:20;12951:1;12933:20;:::i;:::-;12928:25;;12967:20;12985:1;12967:20;:::i;:::-;12962:25;;13011:1;13008;13004:9;12996:17;;13035:1;13029:4;13026:11;13023:37;;;13040:18;;:::i;:::-;13023:37;12873:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1012400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"compra(uint256)": "infinite",
								"consultaOfertas()": "infinite",
								"ofertas(uint256)": "infinite",
								"ofertasAtivas(uint256)": "infinite",
								"owner()": "2527",
								"realizaOferta(uint256,uint256)": "infinite",
								"sacarFundos()": "infinite",
								"token()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 708,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 685,
									"end": 708,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 743,
									"end": 744,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 744,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 715,
									"end": 744,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 885,
									"end": 962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 885,
									"end": 962,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 368,
									"end": 378,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 360,
									"end": 365,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 365,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 942,
									"end": 953,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 954,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 928,
									"end": 954,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 928,
									"end": 954,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 928,
									"end": 954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 885,
									"end": 962,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1218"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 4340,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220546af5fd619ef36ef7a94244063e481a6a50c0c7b890f9bf78ec38d8e7d339fe64736f6c63430008160033",
									".code": [
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "7CB02950"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "7CB02950"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "90041A40"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "FC0C546A"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "2C562A44"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "506E1D52"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "56AFFF7C"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "5F6DF038"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 438,
											"end": 4340,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1290,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1290,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3445,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 779,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 779,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 779,
											"end": 820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3670,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2557,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2557,
											"end": 3332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 167,
											"end": 187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 167,
											"end": 187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 492,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 492,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 251,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 237,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 256,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 237,
											"end": 247,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 237,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 256,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 237,
											"end": 256,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 229,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1422,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1406,
											"end": 1426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1398,
											"end": 1456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1398,
											"end": 1456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1514,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "186A0"
										},
										{
											"begin": 1475,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1218"
										},
										{
											"begin": 1475,
											"end": 1490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1499,
											"end": 1509,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1475,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1475,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1475,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1520,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1467,
											"end": 1531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1467,
											"end": 1531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1562,
											"end": 1563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1542,
											"end": 1585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1542,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1603,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1218"
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1617,
											"end": 1627,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1641,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1644,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1598,
											"end": 1661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1661,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1598,
											"end": 1661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1682,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1682,
											"end": 1706,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1682,
											"end": 1706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1763,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1763,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1806,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1806,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1806,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1853,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1817,
											"end": 1832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1854,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1865,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1865,
											"end": 1883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1915,
											"end": 1926,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1926,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1915,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1928,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1915,
											"end": 1928,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1928,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1915,
											"end": 1928,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1901,
											"end": 1928,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1928,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1928,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1955,
											"end": 1966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1955,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1966,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 1966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1995,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 1998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1998,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1999,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2051,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2097,
											"end": 2114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2097,
											"end": 2114,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2097,
											"end": 2117,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2097,
											"end": 2117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2097,
											"end": 2117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2077,
											"end": 2117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2117,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2152,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2131,
											"end": 2148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2131,
											"end": 2148,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2128,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2128,
											"end": 2206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "65FED65FF7CD6B2D79D64E55D0439FBA77CB42A9ADABF9FA002EA4C20A1F81E1"
										},
										{
											"begin": 2237,
											"end": 2247,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2250,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2252,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2221,
											"end": 2280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2221,
											"end": 2280,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 2288,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 2288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3568,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 779,
											"end": 820,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 779,
											"end": 820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3670,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 251,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 251,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 251,
											"end": 256,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 237,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 256,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 237,
											"end": 247,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 237,
											"end": 256,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 256,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 237,
											"end": 256,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 229,
											"end": 307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 229,
											"end": 307,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 229,
											"end": 307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3730,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3776,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3777,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3788,
											"end": 3806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 3807,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3788,
											"end": 3829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3719,
											"end": 3837,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2646,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2635,
											"end": 2646,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2646,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2646,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2621,
											"end": 2662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2621,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2703,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2706,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2707,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2748,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2718,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2718,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2785,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1218"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2798,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2780,
											"end": 2859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 2780,
											"end": 2859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2923,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2910,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2923,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2956,
											"end": 2973,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2956,
											"end": 2973,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2956,
											"end": 2976,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 2956,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2976,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2956,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2936,
											"end": 2976,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2976,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2976,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2936,
											"end": 2976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3016,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3005,
											"end": 3016,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3016,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3072,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3075,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3038,
											"end": 3075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3090,
											"end": 3299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3151,
											"end": 3171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 3151,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3148,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3131,
											"end": 3171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3171,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3131,
											"end": 3171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3214,
											"end": 3215,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3215,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3190,
											"end": 3284,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3251,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3284,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3190,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3299,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 3090,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 3332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 3332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 827,
											"end": 874,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 827,
											"end": 874,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 827,
											"end": 874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1218"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 492,
											"end": 520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 821,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 966,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1275,
											"end": 1280,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1257,
											"end": 1281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1257,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1415,
											"end": 1419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1455,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1456,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1536,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1466,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1466,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1615,
											"end": 1617,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1613,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1618,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1547,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1547,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1294,
											"end": 1626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1961,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1632,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1742,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1737,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1738,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1711,
											"end": 1743,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1827,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1708,
											"end": 1827,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 1746,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1746,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1825,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 1746,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1827,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1708,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1891,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 1891,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1944,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1881,
											"end": 1944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1961,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1961,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2093,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1967,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2086,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2033,
											"end": 2087,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2093,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2195,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2099,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2136,
											"end": 2143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2165,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2154,
											"end": 2189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2154,
											"end": 2189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2319,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2201,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2288,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 2288,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2415,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2325,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2395,
											"end": 2408,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2409,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2409,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2415,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2421,
											"end": 2530,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 2421,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2517,
											"end": 2522,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 2502,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2502,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2500,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2421,
											"end": 2530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2421,
											"end": 2530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2421,
											"end": 2530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2776,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2787,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2936,
											"end": 2938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 2939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2918,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2868,
											"end": 2940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2868,
											"end": 2940,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2868,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2950,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3016,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3003,
											"end": 3021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2950,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2950,
											"end": 3022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2950,
											"end": 3022,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2950,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 3100,
											"end": 3102,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 3032,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3032,
											"end": 3104,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 3032,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3114,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 3176,
											"end": 3179,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3165,
											"end": 3174,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3114,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 3114,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3114,
											"end": 3181,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 3114,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 3188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3416,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3194,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3310,
											"end": 3328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3302,
											"end": 3328,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3302,
											"end": 3328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3391,
											"end": 3408,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 3338,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 3338,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3416,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3416,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3482,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3422,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3476,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3630,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 3488,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 3589,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 3598,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 3598,
											"end": 3622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3622,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 3598,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3589,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3589,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3589,
											"end": 3623,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 3589,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 3571,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 3571,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3624,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3630,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3630,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3488,
											"end": 3630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3762,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 3636,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 3750,
											"end": 3755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 3719,
											"end": 3756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 3719,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3706,
											"end": 3756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3706,
											"end": 3756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3636,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3908,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3768,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3896,
											"end": 3901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3865,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 3865,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3865,
											"end": 3902,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3865,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3914,
											"end": 4073,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 3914,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 4015,
											"end": 4066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4066,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 4015,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3914,
											"end": 4073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3914,
											"end": 4073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3914,
											"end": 4073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4329,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4079,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4213,
											"end": 4222,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4201,
											"end": 4227,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4201,
											"end": 4227,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4317,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4304,
											"end": 4321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4237,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4322,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4237,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4329,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4329,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4504,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 4335,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4419,
											"end": 4430,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4441,
											"end": 4460,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4488,
											"end": 4491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4504,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4504,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4335,
											"end": 4504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4793,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 4510,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "PUSH",
											"source": 12,
											"value": "446576652073657220646F6E6F2070617261206368616D617220657373612066"
										},
										{
											"begin": 4646,
											"end": 4647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4634,
											"end": 4648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4627,
											"end": 4685,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4785,
											"name": "PUSH",
											"source": 12,
											"value": "756EC3A7C3A36F00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4714,
											"end": 4716,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4702,
											"end": 4717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4695,
											"end": 4786,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4510,
											"end": 4793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 5165,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 4799,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4941,
											"end": 4944,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 5021,
											"end": 5024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4962,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 4962,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4962,
											"end": 5029,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4962,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4955,
											"end": 5029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 5127,
											"end": 5130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 5038,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5131,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 5038,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5158,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5147,
											"end": 5159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5159,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5140,
											"end": 5159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 5165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 5165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 5165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4799,
											"end": 5165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5590,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 5171,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5337,
											"end": 5341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5360,
											"end": 5378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5352,
											"end": 5378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5418,
											"end": 5422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5414,
											"end": 5434,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5388,
											"end": 5435,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 5452,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5583,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5452,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5583,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5590,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5802,
											"name": "PUSH",
											"source": 12,
											"value": "4EC3A36F20706F646520736572207A65726F0000000000000000000000000000"
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5720,
											"end": 5734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5803,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 6182,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 5816,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 5979,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5979,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5972,
											"end": 6046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5972,
											"end": 6046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 6144,
											"end": 6147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6055,
											"end": 6148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6148,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 6055,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6168,
											"end": 6171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 6182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 6182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 6182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 6182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6607,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 6188,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6354,
											"end": 6358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6390,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6395,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6441,
											"end": 6450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6431,
											"end": 6451,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6427,
											"end": 6428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6425,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6412,
											"end": 6429,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6405,
											"end": 6452,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 6595,
											"end": 6599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6469,
											"end": 6600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6469,
											"end": 6600,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 6469,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6461,
											"end": 6600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6461,
											"end": 6600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6607,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6756,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 6613,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6670,
											"end": 6675,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6701,
											"end": 6707,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6695,
											"end": 6708,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6686,
											"end": 6708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6686,
											"end": 6708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 6744,
											"end": 6749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 6717,
											"end": 6750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6750,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 6717,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6756,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6613,
											"end": 6756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 7113,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6762,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6832,
											"end": 6838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6867,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6856,
											"end": 6879,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6852,
											"end": 6884,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6968,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 6849,
											"end": 6968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 6887,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 6887,
											"end": 6966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6887,
											"end": 6966,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 6887,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6968,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 6849,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 7088,
											"end": 7095,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7068,
											"end": 7077,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7064,
											"end": 7086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 7032,
											"end": 7096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7096,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 7032,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7096,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 7113,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 7113,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 7113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 7113,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 7113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7275,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 7119,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH",
											"source": 12,
											"value": "7364617364200000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7255,
											"end": 7256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7236,
											"end": 7268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7646,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 7281,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7444,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7508,
											"end": 7509,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 7444,
											"end": 7510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7510,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 7444,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7510,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7510,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7608,
											"end": 7611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 7519,
											"end": 7612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7519,
											"end": 7612,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 7519,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7639,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7632,
											"end": 7635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7646,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 7854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7833,
											"end": 7859,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7833,
											"end": 7859,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7915,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7891,
											"end": 7892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 7933,
											"end": 8064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7933,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7925,
											"end": 8064,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7925,
											"end": 8064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 8071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7652,
											"end": 8071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8077,
											"end": 8244,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 8077,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8217,
											"end": 8236,
											"name": "PUSH",
											"source": 12,
											"value": "4E616F20706F646520736572207A65726F000000000000000000000000000000"
										},
										{
											"begin": 8213,
											"end": 8214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8215,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8194,
											"end": 8237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8077,
											"end": 8244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8077,
											"end": 8244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8616,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 8250,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8392,
											"end": 8395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8477,
											"end": 8479,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8472,
											"end": 8475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 8413,
											"end": 8480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8480,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 8413,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 8489,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8582,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 8489,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8607,
											"end": 8609,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8602,
											"end": 8605,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8598,
											"end": 8610,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8591,
											"end": 8610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8250,
											"end": 8616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8788,
											"end": 8792,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 8884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8885,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8861,
											"end": 8862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8859,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 9029,
											"end": 9033,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 8903,
											"end": 9034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8895,
											"end": 9034,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8895,
											"end": 9034,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 9041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9196,
											"end": 9200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9236,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9223,
											"end": 9232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9219,
											"end": 9237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9211,
											"end": 9237,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9211,
											"end": 9237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9300,
											"end": 9317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9291,
											"end": 9297,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 9247,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9247,
											"end": 9318,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 9247,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9328,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 9396,
											"end": 9398,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9381,
											"end": 9399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9372,
											"end": 9378,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9328,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 9328,
											"end": 9400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9328,
											"end": 9400,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 9328,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 9478,
											"end": 9480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9467,
											"end": 9476,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9454,
											"end": 9460,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 9410,
											"end": 9482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9482,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 9410,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9611,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 9495,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 9580,
											"end": 9585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 9565,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 9565,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9558,
											"end": 9563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9555,
											"end": 9587,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9545,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 9545,
											"end": 9605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9601,
											"end": 9602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9598,
											"end": 9599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9591,
											"end": 9603,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9545,
											"end": 9605,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 9545,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9754,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 9617,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9671,
											"end": 9676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9709,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 9742,
											"end": 9747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 9718,
											"end": 9748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9718,
											"end": 9748,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 9718,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9754,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9754,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 10105,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 9760,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9878,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9851,
											"end": 9874,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9847,
											"end": 9879,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9963,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 9844,
											"end": 9963,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 9882,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 9882,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 9961,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 9882,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9844,
											"end": 9963,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 9844,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 10080,
											"end": 10087,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10069,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10078,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 10027,
											"end": 10088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10027,
											"end": 10088,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 10027,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10017,
											"end": 10088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10017,
											"end": 10088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9973,
											"end": 10098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 10105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 10105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 10105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 10105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 10105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10111,
											"end": 10291,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 10111,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10159,
											"end": 10236,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10156,
											"end": 10157,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10149,
											"end": 10237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10260,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10246,
											"end": 10261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10280,
											"end": 10284,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10277,
											"end": 10278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10488,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 10297,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10337,
											"end": 10340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 10374,
											"end": 10375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 10356,
											"end": 10376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10351,
											"end": 10376,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10351,
											"end": 10376,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 10408,
											"end": 10409,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 10390,
											"end": 10410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10410,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 10390,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10410,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10385,
											"end": 10410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10433,
											"end": 10434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10430,
											"end": 10431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10426,
											"end": 10435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10419,
											"end": 10435,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10419,
											"end": 10435,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10454,
											"end": 10457,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10448,
											"end": 10458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10481,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 10445,
											"end": 10481,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 10461,
											"end": 10479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10445,
											"end": 10481,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 10445,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10488,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10488,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10643,
											"end": 10647,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10681,
											"end": 10683,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10666,
											"end": 10684,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10658,
											"end": 10684,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10658,
											"end": 10684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10694,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 10762,
											"end": 10763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10760,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10747,
											"end": 10764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10738,
											"end": 10744,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10694,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 10694,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10694,
											"end": 10765,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 10694,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 10843,
											"end": 10845,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10832,
											"end": 10841,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10828,
											"end": 10846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10819,
											"end": 10825,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 10775,
											"end": 10847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10775,
											"end": 10847,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 10775,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10857,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 10925,
											"end": 10927,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10914,
											"end": 10923,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10901,
											"end": 10907,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10857,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 10857,
											"end": 10929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10857,
											"end": 10929,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 10857,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10494,
											"end": 10936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10942,
											"end": 11103,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 10942,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11082,
											"end": 11095,
											"name": "PUSH",
											"source": 12,
											"value": "696420696E76616C69646F000000000000000000000000000000000000000000"
										},
										{
											"begin": 11078,
											"end": 11079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11070,
											"end": 11076,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11066,
											"end": 11080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11059,
											"end": 11096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10942,
											"end": 11103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10942,
											"end": 11103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11475,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 11109,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11251,
											"end": 11254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11272,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 11336,
											"end": 11338,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 11331,
											"end": 11334,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11272,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 11272,
											"end": 11339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11272,
											"end": 11339,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 11272,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11265,
											"end": 11339,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11265,
											"end": 11339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11348,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 11437,
											"end": 11440,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11348,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 11348,
											"end": 11441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11348,
											"end": 11441,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 11348,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11468,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11461,
											"end": 11464,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11457,
											"end": 11469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11450,
											"end": 11469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11450,
											"end": 11469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11475,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11109,
											"end": 11475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11481,
											"end": 11900,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 11481,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11647,
											"end": 11651,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11674,
											"end": 11683,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11662,
											"end": 11688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11662,
											"end": 11688,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11743,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11728,
											"end": 11732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11724,
											"end": 11744,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11720,
											"end": 11721,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11718,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11705,
											"end": 11722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11698,
											"end": 11745,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11888,
											"end": 11892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 11762,
											"end": 11893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11762,
											"end": 11893,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11762,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11754,
											"end": 11893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11754,
											"end": 11893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11481,
											"end": 11900,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11481,
											"end": 11900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11481,
											"end": 11900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11481,
											"end": 11900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11906,
											"end": 12070,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 11906,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12046,
											"end": 12062,
											"name": "PUSH",
											"source": 12,
											"value": "646576652073657220617469766F000000000000000000000000000000000000"
										},
										{
											"begin": 12042,
											"end": 12043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12034,
											"end": 12040,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12030,
											"end": 12044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12023,
											"end": 12063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11906,
											"end": 12070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11906,
											"end": 12070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12076,
											"end": 12442,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 12076,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12218,
											"end": 12221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 12303,
											"end": 12305,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 12298,
											"end": 12301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12239,
											"end": 12306,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 12239,
											"end": 12306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12239,
											"end": 12306,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 12239,
											"end": 12306,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12232,
											"end": 12306,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12232,
											"end": 12306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12315,
											"end": 12408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 12404,
											"end": 12407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12315,
											"end": 12408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 12315,
											"end": 12408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12315,
											"end": 12408,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 12315,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12435,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12417,
											"end": 12436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12417,
											"end": 12436,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12076,
											"end": 12442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12076,
											"end": 12442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12076,
											"end": 12442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12076,
											"end": 12442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12448,
											"end": 12867,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 12448,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12614,
											"end": 12618,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12654,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12641,
											"end": 12650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12637,
											"end": 12655,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12655,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12629,
											"end": 12655,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12701,
											"end": 12710,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 12699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12711,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12687,
											"end": 12688,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12676,
											"end": 12685,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12672,
											"end": 12689,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12665,
											"end": 12712,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 12729,
											"end": 12860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12729,
											"end": 12860,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 12729,
											"end": 12860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12721,
											"end": 12860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12721,
											"end": 12860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12448,
											"end": 12867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12448,
											"end": 12867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12448,
											"end": 12867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12448,
											"end": 12867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 13067,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 12873,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12917,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12933,
											"end": 12953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 12951,
											"end": 12952,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12933,
											"end": 12953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 12933,
											"end": 12953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12933,
											"end": 12953,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 12933,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 12953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12928,
											"end": 12953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 12985,
											"end": 12986,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 12967,
											"end": 12987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 12967,
											"end": 12987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12962,
											"end": 12987,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12962,
											"end": 12987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13011,
											"end": 13012,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13008,
											"end": 13009,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13004,
											"end": 13013,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13013,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13033,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13026,
											"end": 13037,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13023,
											"end": 13060,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13023,
											"end": 13060,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 13023,
											"end": 13060,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 13040,
											"end": 13058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 13040,
											"end": 13058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13023,
											"end": 13060,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 13023,
											"end": 13060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 13067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 13067,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 13067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 13067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 13067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CasaDeCambio.sol",
								"CasaDeCambioAbstract.sol",
								"ControleAcessoDono.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"compra(uint256)": "7cb02950",
							"consultaOfertas()": "506e1d52",
							"ofertas(uint256)": "56afff7c",
							"ofertasAtivas(uint256)": "90041a40",
							"owner()": "8da5cb5b",
							"realizaOferta(uint256,uint256)": "2c562a44",
							"sacarFundos()": "5f6df038",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ultimaOfertaAdicionada\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantidade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preco\",\"type\":\"uint256\"}],\"name\":\"ofertaRealizada\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"compra\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consultaOfertas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ofertas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantidadeTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precoLote\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dono\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ehAtivo\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ofertasAtivas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantidadeTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precoLote\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"dono\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"ehAtivo\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantidadeTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precoLote\",\"type\":\"uint256\"}],\"name\":\"realizaOferta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sacarFundos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"compra(uint256)\":{\"notice\":\"1.Checar se o id \\u00e9 valido 2.Checar se a oferta est\\u00e1 ativa 3.Checar se o valor repassado bate com o precoLote 4.Recuperar a oferta 5.Transferir a quantidade de tokens para a carteira de quem chama*\"},\"consultaOfertas()\":{\"notice\":\"Retornar a quantidade de ofertas ativas e o id da primeira oferta dispon\\u00edvel*\"},\"realizaOferta(uint256,uint256)\":{\"notice\":\"1.Apenas o dono pode chamar 2.Validar a quantidadeTokens e precoLote 3.Transferir tokens do dono para o contrato 4.Salvar a oferta 5.Emitir o evento ofertaRealizada Importante precoLote \\u00e9 em Wei, para convers\\u00e3o: https://eth-converter.com/*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CasaDeCambio.sol\":\"CasaDeCambio\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"CasaDeCambio.sol\":{\"keccak256\":\"0xea7860ddf0c73e499efa447ab59542c6ae363f457602e662fdb83be59d0d7a87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ae3a12caae3951c647ace6407c13aff7cb1586a466f96efd8b645f1ef84b739\",\"dweb:/ipfs/Qmc5nDrVm8bVnTvqdXH5thZyJ4Bm4pMUszGx8KPJFaHue3\"]},\"CasaDeCambioAbstract.sol\":{\"keccak256\":\"0xbfdc368c5e2c944e72115505214060e736ba1a43c918a4d6313c8e57d96d9c80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59b9c2d68599f6fae8ef0a50ca0c991334bc003a8a36dfc9e11478d5f324908\",\"dweb:/ipfs/QmdPDvBMS46ipkZybKVH8wUBCuRDbUoDvpHkix8jpob33f\"]},\"ControleAcessoDono.sol\":{\"keccak256\":\"0x11390f7919e819e4ada5d72b93fb8cba73ca62b294a2522b1eba7a53f20863cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36371871723af6546971b208f7d33094518a3f1cf8f5eecc88ecf37af6aa2f18\",\"dweb:/ipfs/QmZQJham3xpFgghQMWLTvpa1LYYXyY2xC3uvKJ1WZJzMks\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1600,
								"contract": "CasaDeCambio.sol:CasaDeCambio",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1232,
								"contract": "CasaDeCambio.sol:CasaDeCambio",
								"label": "qtddOfertas",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1235,
								"contract": "CasaDeCambio.sol:CasaDeCambio",
								"label": "qtddOfertasAtivas",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1238,
								"contract": "CasaDeCambio.sol:CasaDeCambio",
								"label": "pOfertaAtiva",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Oferta)1229_storage"
							},
							{
								"astId": 1243,
								"contract": "CasaDeCambio.sol:CasaDeCambio",
								"label": "ofertas",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Oferta)1229_storage)"
							},
							{
								"astId": 1248,
								"contract": "CasaDeCambio.sol:CasaDeCambio",
								"label": "ofertasAtivas",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(Oferta)1229_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Oferta)1229_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CasaDeCambio.Oferta)",
								"numberOfBytes": "32",
								"value": "t_struct(Oferta)1229_storage"
							},
							"t_struct(Oferta)1229_storage": {
								"encoding": "inplace",
								"label": "struct CasaDeCambio.Oferta",
								"members": [
									{
										"astId": 1220,
										"contract": "CasaDeCambio.sol:CasaDeCambio",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1222,
										"contract": "CasaDeCambio.sol:CasaDeCambio",
										"label": "quantidadeTokens",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1224,
										"contract": "CasaDeCambio.sol:CasaDeCambio",
										"label": "precoLote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1226,
										"contract": "CasaDeCambio.sol:CasaDeCambio",
										"label": "dono",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 1228,
										"contract": "CasaDeCambio.sol:CasaDeCambio",
										"label": "ehAtivo",
										"offset": 20,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"compra(uint256)": {
								"notice": "1.Checar se o id é valido 2.Checar se a oferta está ativa 3.Checar se o valor repassado bate com o precoLote 4.Recuperar a oferta 5.Transferir a quantidade de tokens para a carteira de quem chama*"
							},
							"consultaOfertas()": {
								"notice": "Retornar a quantidade de ofertas ativas e o id da primeira oferta disponível*"
							},
							"realizaOferta(uint256,uint256)": {
								"notice": "1.Apenas o dono pode chamar 2.Validar a quantidadeTokens e precoLote 3.Transferir tokens do dono para o contrato 4.Salvar a oferta 5.Emitir o evento ofertaRealizada Importante precoLote é em Wei, para conversão: https://eth-converter.com/*"
							}
						},
						"version": 1
					}
				},
				"TokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "minter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"minter(address,uint256)": "19a65041"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"minter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Crie um contrato que herde desse, receba o endere\\u00e7o de um ERC20 via construtor e venda por ether Uma oferta j\\u00e1 comprada n\\u00e3o pode ser vendida novamente*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"CasaDeCambio.sol\":\"TokenInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"CasaDeCambio.sol\":{\"keccak256\":\"0xea7860ddf0c73e499efa447ab59542c6ae363f457602e662fdb83be59d0d7a87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ae3a12caae3951c647ace6407c13aff7cb1586a466f96efd8b645f1ef84b739\",\"dweb:/ipfs/Qmc5nDrVm8bVnTvqdXH5thZyJ4Bm4pMUszGx8KPJFaHue3\"]},\"CasaDeCambioAbstract.sol\":{\"keccak256\":\"0xbfdc368c5e2c944e72115505214060e736ba1a43c918a4d6313c8e57d96d9c80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59b9c2d68599f6fae8ef0a50ca0c991334bc003a8a36dfc9e11478d5f324908\",\"dweb:/ipfs/QmdPDvBMS46ipkZybKVH8wUBCuRDbUoDvpHkix8jpob33f\"]},\"ControleAcessoDono.sol\":{\"keccak256\":\"0x11390f7919e819e4ada5d72b93fb8cba73ca62b294a2522b1eba7a53f20863cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36371871723af6546971b208f7d33094518a3f1cf8f5eecc88ecf37af6aa2f18\",\"dweb:/ipfs/QmZQJham3xpFgghQMWLTvpa1LYYXyY2xC3uvKJ1WZJzMks\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Crie um contrato que herde desse, receba o endereço de um ERC20 via construtor e venda por ether Uma oferta já comprada não pode ser vendida novamente*",
						"version": 1
					}
				}
			},
			"CasaDeCambioAbstract.sol": {
				"CasaDeCambioAbstract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ultimaOfertaAdicionada",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantidade",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "preco",
									"type": "uint256"
								}
							],
							"name": "ofertaRealizada",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "compra",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consultaOfertas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantidadeTokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "precoLote",
									"type": "uint256"
								}
							],
							"name": "realizaOferta",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sacarFundos",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"compra(uint256)": "7cb02950",
							"consultaOfertas()": "506e1d52",
							"owner()": "8da5cb5b",
							"realizaOferta(uint256,uint256)": "2c562a44",
							"sacarFundos()": "5f6df038"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ultimaOfertaAdicionada\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantidade\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preco\",\"type\":\"uint256\"}],\"name\":\"ofertaRealizada\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"compra\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consultaOfertas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantidadeTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"precoLote\",\"type\":\"uint256\"}],\"name\":\"realizaOferta\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sacarFundos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"compra(uint256)\":{\"notice\":\"1.Checar se o id \\u00e9 valido 2.Checar se a oferta est\\u00e1 ativa 3.Checar se o valor repassado bate com o precoLote 4.Recuperar a oferta 5.Transferir a quantidade de tokens para a carteira de quem chama*\"},\"consultaOfertas()\":{\"notice\":\"Retornar a quantidade de ofertas ativas e o id da primeira oferta dispon\\u00edvel*\"},\"realizaOferta(uint256,uint256)\":{\"notice\":\"1.Apenas o dono pode chamar 2.Validar a quantidadeTokens e precoLote 3.Transferir tokens do dono para o contrato 4.Salvar a oferta 5.Emitir o evento ofertaRealizada Importante precoLote \\u00e9 em Wei, para convers\\u00e3o: https://eth-converter.com/*\"}},\"notice\":\"Crie um contrato que herde desse, receba o endere\\u00e7o de um ERC20 via construtor e venda por ether Uma oferta j\\u00e1 comprada n\\u00e3o pode ser vendida novamente*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"CasaDeCambioAbstract.sol\":\"CasaDeCambioAbstract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"CasaDeCambioAbstract.sol\":{\"keccak256\":\"0xbfdc368c5e2c944e72115505214060e736ba1a43c918a4d6313c8e57d96d9c80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e59b9c2d68599f6fae8ef0a50ca0c991334bc003a8a36dfc9e11478d5f324908\",\"dweb:/ipfs/QmdPDvBMS46ipkZybKVH8wUBCuRDbUoDvpHkix8jpob33f\"]},\"ControleAcessoDono.sol\":{\"keccak256\":\"0x11390f7919e819e4ada5d72b93fb8cba73ca62b294a2522b1eba7a53f20863cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36371871723af6546971b208f7d33094518a3f1cf8f5eecc88ecf37af6aa2f18\",\"dweb:/ipfs/QmZQJham3xpFgghQMWLTvpa1LYYXyY2xC3uvKJ1WZJzMks\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1600,
								"contract": "CasaDeCambioAbstract.sol:CasaDeCambioAbstract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"compra(uint256)": {
								"notice": "1.Checar se o id é valido 2.Checar se a oferta está ativa 3.Checar se o valor repassado bate com o precoLote 4.Recuperar a oferta 5.Transferir a quantidade de tokens para a carteira de quem chama*"
							},
							"consultaOfertas()": {
								"notice": "Retornar a quantidade de ofertas ativas e o id da primeira oferta disponível*"
							},
							"realizaOferta(uint256,uint256)": {
								"notice": "1.Apenas o dono pode chamar 2.Validar a quantidadeTokens e precoLote 3.Transferir tokens do dono para o contrato 4.Salvar a oferta 5.Emitir o evento ofertaRealizada Importante precoLote é em Wei, para conversão: https://eth-converter.com/*"
							}
						},
						"notice": "Crie um contrato que herde desse, receba o endereço de um ERC20 via construtor e venda por ether Uma oferta já comprada não pode ser vendida novamente*",
						"version": 1
					}
				}
			},
			"ControleAcessoDono.sol": {
				"ControleAcessoDono": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ControleAcessoDono.sol\":132:389  contract ControleAcessoDono {... */\n  mstore(0x40, 0x80)\n    /* \"ControleAcessoDono.sol\":335:386  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ControleAcessoDono.sol\":368:378  msg.sender */\n  caller\n    /* \"ControleAcessoDono.sol\":360:365  owner */\n  0x00\n  dup1\n    /* \"ControleAcessoDono.sol\":360:378  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ControleAcessoDono.sol\":132:389  contract ControleAcessoDono {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ControleAcessoDono.sol\":132:389  contract ControleAcessoDono {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ControleAcessoDono.sol\":167:187  address public owner */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122032176c37562f21c8c1ce2f9350cb540cf201a6a30549ecc9fe8483e23fd841aa64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1621": {
									"entryPoint": null,
									"id": 1621,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060ef8061005b5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80638da5cb5b14602a575b5f80fd5b60306044565b604051603b919060a2565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608e826067565b9050919050565b609c816086565b82525050565b5f60208201905060b35f8301846095565b9291505056fea264697066735822122032176c37562f21c8c1ce2f9350cb540cf201a6a30549ecc9fe8483e23fd841aa64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xEF DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8E DUP3 PUSH1 0x67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0x86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB3 PUSH0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN OR PUSH13 0x37562F21C8C1CE2F9350CB540C CALLCODE ADD 0xA6 LOG3 SDIV 0x49 0xEC 0xC9 INVALID DUP5 DUP4 0xE2 EXTCODEHASH 0xD8 COINBASE 0xAA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "132:257:11:-:0;;;335:51;;;;;;;;;;368:10;360:5;;:18;;;;;;;;;;;;;;;;;;132:257;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_1600": {
									"entryPoint": 68,
									"id": 1600,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:12",
										"nodeType": "YulBlock",
										"src": "0:590:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:12",
													"nodeType": "YulBlock",
													"src": "52:81:12",
													"statements": [
														{
															"nativeSrc": "62:65:12",
															"nodeType": "YulAssignment",
															"src": "62:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:12",
																		"nodeType": "YulLiteral",
																		"src": "84:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:12"
																},
																"nativeSrc": "73:54:12",
																"nodeType": "YulFunctionCall",
																"src": "73:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:12",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:12",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:126:12"
											},
											{
												"body": {
													"nativeSrc": "184:51:12",
													"nodeType": "YulBlock",
													"src": "184:51:12",
													"statements": [
														{
															"nativeSrc": "194:35:12",
															"nodeType": "YulAssignment",
															"src": "194:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:12"
																},
																"nativeSrc": "205:24:12",
																"nodeType": "YulFunctionCall",
																"src": "205:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:12",
														"nodeType": "YulTypedName",
														"src": "166:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:12",
														"nodeType": "YulTypedName",
														"src": "176:7:12",
														"type": ""
													}
												],
												"src": "139:96:12"
											},
											{
												"body": {
													"nativeSrc": "306:53:12",
													"nodeType": "YulBlock",
													"src": "306:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:12"
																		},
																		"nativeSrc": "328:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:12"
																},
																"nativeSrc": "316:37:12",
																"nodeType": "YulFunctionCall",
																"src": "316:37:12"
															},
															"nativeSrc": "316:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:12",
														"nodeType": "YulTypedName",
														"src": "294:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:12",
														"nodeType": "YulTypedName",
														"src": "301:3:12",
														"type": ""
													}
												],
												"src": "241:118:12"
											},
											{
												"body": {
													"nativeSrc": "463:124:12",
													"nodeType": "YulBlock",
													"src": "463:124:12",
													"statements": [
														{
															"nativeSrc": "473:26:12",
															"nodeType": "YulAssignment",
															"src": "473:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:12",
																		"nodeType": "YulLiteral",
																		"src": "496:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:12"
																},
																"nativeSrc": "481:18:12",
																"nodeType": "YulFunctionCall",
																"src": "481:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:12",
																				"nodeType": "YulLiteral",
																				"src": "577:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:12"
																		},
																		"nativeSrc": "562:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:12"
																},
																"nativeSrc": "509:71:12",
																"nodeType": "YulFunctionCall",
																"src": "509:71:12"
															},
															"nativeSrc": "509:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:12",
														"nodeType": "YulTypedName",
														"src": "435:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:12",
														"nodeType": "YulTypedName",
														"src": "447:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:12",
														"nodeType": "YulTypedName",
														"src": "458:4:12",
														"type": ""
													}
												],
												"src": "365:222:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c80638da5cb5b14602a575b5f80fd5b60306044565b604051603b919060a2565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608e826067565b9050919050565b609c816086565b82525050565b5f60208201905060b35f8301846095565b9291505056fea264697066735822122032176c37562f21c8c1ce2f9350cb540cf201a6a30549ecc9fe8483e23fd841aa64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8E DUP3 PUSH1 0x67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0x86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB3 PUSH0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN OR PUSH13 0x37562F21C8C1CE2F9350CB540C CALLCODE ADD 0xA6 LOG3 SDIV 0x49 0xEC 0xC9 INVALID DUP5 DUP4 0xE2 EXTCODEHASH 0xD8 COINBASE 0xAA PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "132:257:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;167:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:126:12:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47800",
								"executionCost": "24362",
								"totalCost": "72162"
							},
							"external": {
								"owner()": "2483"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 389,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 389,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 389,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 335,
									"end": 386,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 386,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 335,
									"end": 386,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 335,
									"end": 386,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 368,
									"end": 378,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 360,
									"end": 365,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 365,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 360,
									"end": 378,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 360,
									"end": 378,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 132,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 389,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 132,
									"end": 389,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 389,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 389,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 132,
									"end": 389,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 389,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122032176c37562f21c8c1ce2f9350cb540cf201a6a30549ecc9fe8483e23fd841aa64736f6c63430008160033",
									".code": [
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 389,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 132,
											"end": 389,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 167,
											"end": 187,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CasaDeCambio.sol",
								"CasaDeCambioAbstract.sol",
								"ControleAcessoDono.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ControleAcessoDono.sol\":\"ControleAcessoDono\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"ControleAcessoDono.sol\":{\"keccak256\":\"0x11390f7919e819e4ada5d72b93fb8cba73ca62b294a2522b1eba7a53f20863cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36371871723af6546971b208f7d33094518a3f1cf8f5eecc88ecf37af6aa2f18\",\"dweb:/ipfs/QmZQJham3xpFgghQMWLTvpa1LYYXyY2xC3uvKJ1WZJzMks\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1600,
								"contract": "ControleAcessoDono.sol:ControleAcessoDono",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1189,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1428:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1437:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1445:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1030,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1030,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1030,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1030,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1030,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1030,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1030,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1030,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1030,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1030,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1030,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1030,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1030,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1030,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1030,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1030,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1030,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1401:9741:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1108,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1108,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1108,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1108,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1108,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1108,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "305:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 1134,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 1134,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 1134,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1188
						],
						"IERC165": [
							1200
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1201,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1200,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "687:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1200
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1180,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1200",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1188,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1189,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1200,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"CasaDeCambio.sol": {
				"ast": {
					"absolutePath": "CasaDeCambio.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"CasaDeCambio": [
							1534
						],
						"CasaDeCambioAbstract": [
							1595
						],
						"Context": [
							1164
						],
						"ControleAcessoDono": [
							1622
						],
						"ERC165": [
							1188
						],
						"ERC20": [
							1030
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						],
						"TokenInterface": [
							1213
						]
					},
					"id": 1535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 1031,
							"src": "70:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CasaDeCambioAbstract.sol",
							"file": "./CasaDeCambioAbstract.sol",
							"id": 1204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1535,
							"sourceUnit": 1596,
							"src": "127:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1205,
								"nodeType": "StructuredDocumentation",
								"src": "167:172:9",
								"text": "Crie um contrato que herde desse, receba o endereço de um ERC20 via construtor e venda por ether\nUma oferta já comprada não pode ser vendida novamente*"
							},
							"fullyImplemented": false,
							"id": 1213,
							"linearizedBaseContracts": [
								1213
							],
							"name": "TokenInterface",
							"nameLocation": "353:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "19a65041",
									"id": 1212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minter",
									"nameLocation": "384:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "399:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "391:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "416:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "408:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:33:9"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:9"
									},
									"scope": 1213,
									"src": "375:58:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1535,
							"src": "343:93:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1214,
										"name": "CasaDeCambioAbstract",
										"nameLocations": [
											"463:20:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1595,
										"src": "463:20:9"
									},
									"id": 1215,
									"nodeType": "InheritanceSpecifier",
									"src": "463:20:9"
								}
							],
							"canonicalName": "CasaDeCambio",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1534,
							"linearizedBaseContracts": [
								1534,
								1595,
								1622
							],
							"name": "CasaDeCambio",
							"nameLocation": "447:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1218,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "515:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "492:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$1030",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1217,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1216,
											"name": "ERC20",
											"nameLocations": [
												"492:5:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "492:5:9"
										},
										"referencedDeclaration": 1030,
										"src": "492:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1030",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CasaDeCambio.Oferta",
									"id": 1229,
									"members": [
										{
											"constant": false,
											"id": 1220,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "560:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 1229,
											"src": "552:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "552:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1222,
											"mutability": "mutable",
											"name": "quantidadeTokens",
											"nameLocation": "581:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 1229,
											"src": "573:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1221,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "573:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1224,
											"mutability": "mutable",
											"name": "precoLote",
											"nameLocation": "616:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1229,
											"src": "608:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1223,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "608:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1226,
											"mutability": "mutable",
											"name": "dono",
											"nameLocation": "644:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1229,
											"src": "636:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1225,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "636:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1228,
											"mutability": "mutable",
											"name": "ehAtivo",
											"nameLocation": "664:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1229,
											"src": "659:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1227,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "659:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Oferta",
									"nameLocation": "534:6:9",
									"nodeType": "StructDefinition",
									"scope": 1534,
									"src": "527:152:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1232,
									"mutability": "mutable",
									"name": "qtddOfertas",
									"nameLocation": "693:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "685:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1231,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "707:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1235,
									"mutability": "mutable",
									"name": "qtddOfertasAtivas",
									"nameLocation": "723:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "715:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1233,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "715:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "743:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1238,
									"mutability": "mutable",
									"name": "pOfertaAtiva",
									"nameLocation": "758:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "751:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Oferta_$1229_storage",
										"typeString": "struct CasaDeCambio.Oferta"
									},
									"typeName": {
										"id": 1237,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1236,
											"name": "Oferta",
											"nameLocations": [
												"751:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1229,
											"src": "751:6:9"
										},
										"referencedDeclaration": 1229,
										"src": "751:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Oferta_$1229_storage_ptr",
											"typeString": "struct CasaDeCambio.Oferta"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "56afff7c",
									"id": 1243,
									"mutability": "mutable",
									"name": "ofertas",
									"nameLocation": "813:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "779:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
										"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta)"
									},
									"typeName": {
										"id": 1242,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1239,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "787:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "779:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
											"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1241,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1240,
												"name": "Oferta",
												"nameLocations": [
													"798:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "798:6:9"
											},
											"referencedDeclaration": 1229,
											"src": "798:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Oferta_$1229_storage_ptr",
												"typeString": "struct CasaDeCambio.Oferta"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90041a40",
									"id": 1248,
									"mutability": "mutable",
									"name": "ofertasAtivas",
									"nameLocation": "861:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1534,
									"src": "827:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
										"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta)"
									},
									"typeName": {
										"id": 1247,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1244,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "835:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "827:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
											"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1246,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1245,
												"name": "Oferta",
												"nameLocations": [
													"846:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "846:6:9"
											},
											"referencedDeclaration": 1229,
											"src": "846:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Oferta_$1229_storage_ptr",
												"typeString": "struct CasaDeCambio.Oferta"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "917:45:9",
										"statements": [
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1253,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "928:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1030",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1255,
																"name": "tokenAdress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "942:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1254,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "936:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "936:18:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$1030",
															"typeString": "contract ERC20"
														}
													},
													"src": "928:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$1030",
														"typeString": "contract ERC20"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "928:26:9"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "tokenAdress",
												"nameLocation": "905:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "897:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:21:9"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:0:9"
									},
									"scope": 1534,
									"src": "885:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1556
									],
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "1387:901:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1272,
																"name": "quantidadeTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "1406:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1425:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1406:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4ec3a36f20706f646520736572207a65726f",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "unicodeString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1428:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
																"typeString": "literal_string hex\"4ec3a36f20706f646520736572207a65726f\""
															},
															"value": "Não pode ser zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
																"typeString": "literal_string hex\"4ec3a36f20706f646520736572207a65726f\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1398:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "1398:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1283,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1499:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1503:6:9",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1499:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1491:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1281,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1491:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1491:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1279,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1218,
																		"src": "1475:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$1030",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1481:9:9",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 616,
																	"src": "1475:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1475:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "313030303030",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1514:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"src": "1475:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736461736420",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1522:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372",
																"typeString": "literal_string \"sdasd \""
															},
															"value": "sdasd "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31f526a250f2f8ffcea8c836085ceee6465a1451613c0705c58da9e2ba0da372",
																"typeString": "literal_string \"sdasd \""
															}
														],
														"id": 1278,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1467:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "1467:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1293,
																"name": "precoLote",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "1550:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1562:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1550:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e616f20706f646520736572207a65726f",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b",
																"typeString": "literal_string \"Nao pode ser zero\""
															},
															"value": "Nao pode ser zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94f5a9b5de2f6e7b62094676741219f6444ec9e43d4c5f99674cdf01edea334b",
																"typeString": "literal_string \"Nao pode ser zero\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "1542:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1617:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1621:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1617:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1306,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1637:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CasaDeCambio_$1534",
																		"typeString": "contract CasaDeCambio"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CasaDeCambio_$1534",
																		"typeString": "contract CasaDeCambio"
																	}
																],
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1629:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1629:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1629:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1308,
															"name": "quantidadeTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "1644:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "1598:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1030",
																"typeString": "contract ERC20"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1604:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "1598:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "1598:63:9"
											},
											{
												"assignments": [
													1313
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "novaOferta",
														"nameLocation": "1696:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1391,
														"src": "1682:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
															"typeString": "struct CasaDeCambio.Oferta"
														},
														"typeName": {
															"id": 1312,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1311,
																"name": "Oferta",
																"nameLocations": [
																	"1682:6:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1229,
																"src": "1682:6:9"
															},
															"referencedDeclaration": 1229,
															"src": "1682:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_storage_ptr",
																"typeString": "struct CasaDeCambio.Oferta"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1314,
												"nodeType": "VariableDeclarationStatement",
												"src": "1682:24:9"
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1315,
															"name": "novaOferta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1717:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																"typeString": "struct CasaDeCambio.Oferta memory"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1728:16:9",
														"memberName": "quantidadeTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1222,
														"src": "1717:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "quantidadeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "1747:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1717:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "1717:46:9"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1321,
															"name": "novaOferta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1774:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																"typeString": "struct CasaDeCambio.Oferta memory"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1785:9:9",
														"memberName": "precoLote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1224,
														"src": "1774:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1324,
														"name": "precoLote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "1797:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1774:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "1774:32:9"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1327,
															"name": "novaOferta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1817:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																"typeString": "struct CasaDeCambio.Oferta memory"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1828:4:9",
														"memberName": "dono",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1226,
														"src": "1817:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1332,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1843:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1847:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1843:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1835:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1330,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1835:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1835:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1817:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "1817:37:9"
											},
											{
												"expression": {
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1337,
															"name": "novaOferta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1865:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																"typeString": "struct CasaDeCambio.Oferta memory"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1876:7:9",
														"memberName": "ehAtivo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1228,
														"src": "1865:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1865:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "1865:25:9"
											},
											{
												"expression": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1343,
														"name": "qtddOfertas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "1901:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1344,
															"name": "qtddOfertas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "1915:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1927:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1915:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1901:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "1901:27:9"
											},
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1349,
															"name": "novaOferta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1939:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																"typeString": "struct CasaDeCambio.Oferta memory"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1950:2:9",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "1939:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1352,
														"name": "qtddOfertas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "1955:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1939:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "1939:27:9"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1355,
															"name": "ofertas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "1977:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
																"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta storage ref)"
															}
														},
														"id": 1358,
														"indexExpression": {
															"expression": {
																"id": 1356,
																"name": "novaOferta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "1985:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																	"typeString": "struct CasaDeCambio.Oferta memory"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1996:2:9",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "1985:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1977:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_storage",
															"typeString": "struct CasaDeCambio.Oferta storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1359,
														"name": "novaOferta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "2002:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
															"typeString": "struct CasaDeCambio.Oferta memory"
														}
													},
													"src": "1977:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Oferta_$1229_storage",
														"typeString": "struct CasaDeCambio.Oferta storage ref"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "1977:35:9"
											},
											{
												"expression": {
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1362,
															"name": "ofertasAtivas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "2023:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
																"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta storage ref)"
															}
														},
														"id": 1365,
														"indexExpression": {
															"expression": {
																"id": 1363,
																"name": "novaOferta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "2037:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																	"typeString": "struct CasaDeCambio.Oferta memory"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2048:2:9",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "2037:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2023:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_storage",
															"typeString": "struct CasaDeCambio.Oferta storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1366,
														"name": "novaOferta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "2054:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
															"typeString": "struct CasaDeCambio.Oferta memory"
														}
													},
													"src": "2023:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Oferta_$1229_storage",
														"typeString": "struct CasaDeCambio.Oferta storage ref"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "2023:41:9"
											},
											{
												"expression": {
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1369,
														"name": "qtddOfertasAtivas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2077:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1370,
															"name": "qtddOfertasAtivas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "2097:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2116:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2097:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2077:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "2077:40:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1375,
														"name": "qtddOfertasAtivas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2131:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2152:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2131:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "2128:78:9",
												"trueBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "2154:52:9",
													"statements": [
														{
															"expression": {
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1378,
																	"name": "pOfertaAtiva",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "2169:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Oferta_$1229_storage",
																		"typeString": "struct CasaDeCambio.Oferta storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1379,
																	"name": "novaOferta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1313,
																	"src": "2184:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																		"typeString": "struct CasaDeCambio.Oferta memory"
																	}
																},
																"src": "2169:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_storage",
																	"typeString": "struct CasaDeCambio.Oferta storage ref"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "2169:25:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1385,
																"name": "novaOferta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "2237:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																	"typeString": "struct CasaDeCambio.Oferta memory"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2248:2:9",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "2237:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1387,
															"name": "quantidadeTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "2252:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1388,
															"name": "precoLote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "2270:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"name": "ofertaRealizada",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "2221:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2221:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "2216:64:9"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "974:310:9",
										"text": "1.Apenas o dono pode chamar\n2.Validar a quantidadeTokens e precoLote\n3.Transferir tokens do dono para o contrato\n4.Salvar a oferta\n5.Emitir o evento ofertaRealizada\nImportante precoLote é em Wei, para conversão: https://eth-converter.com/*"
									},
									"functionSelector": "2c562a44",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1268,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1267,
												"name": "apenasDono",
												"nameLocations": [
													"1367:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1612,
												"src": "1367:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1367:10:9"
										}
									],
									"name": "realizaOferta",
									"nameLocation": "1299:13:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1269,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1378:8:9"
									},
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "quantidadeTokens",
												"nameLocation": "1321:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1313:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "precoLote",
												"nameLocation": "1347:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "1339:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:45:9"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:0:9"
									},
									"scope": 1534,
									"src": "1290:998:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1562
									],
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "2610:722:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "2629:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1401,
																"name": "qtddOfertas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1232,
																"src": "2635:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2629:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696420696e76616c69646f",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2648:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93",
																"typeString": "literal_string \"id invalido\""
															},
															"value": "id invalido"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e59ca39839c6c180a02056fcf00c1699a64691c5b6382fa102852515f0661c93",
																"typeString": "literal_string \"id invalido\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2621:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2621:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "2621:41:9"
											},
											{
												"assignments": [
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "oferta",
														"nameLocation": "2687:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "2673:20:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
															"typeString": "struct CasaDeCambio.Oferta"
														},
														"typeName": {
															"id": 1407,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1406,
																"name": "Oferta",
																"nameLocations": [
																	"2673:6:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1229,
																"src": "2673:6:9"
															},
															"referencedDeclaration": 1229,
															"src": "2673:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_storage_ptr",
																"typeString": "struct CasaDeCambio.Oferta"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"baseExpression": {
														"id": 1409,
														"name": "ofertas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "2696:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
															"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta storage ref)"
														}
													},
													"id": 1411,
													"indexExpression": {
														"id": 1410,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "2704:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2696:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Oferta_$1229_storage",
														"typeString": "struct CasaDeCambio.Oferta storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2673:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1414,
																	"name": "oferta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1408,
																	"src": "2726:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																		"typeString": "struct CasaDeCambio.Oferta memory"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2733:7:9",
																"memberName": "ehAtivo",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1228,
																"src": "2726:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2744:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2726:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "646576652073657220617469766f",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2750:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797",
																"typeString": "literal_string \"deve ser ativo\""
															},
															"value": "deve ser ativo"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96afbd64609dfb666768a490d407ef8f73052a26933635db21ca7fb333ce6797",
																"typeString": "literal_string \"deve ser ativo\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2718:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "2718:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1426,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2807:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CasaDeCambio_$1534",
																		"typeString": "contract CasaDeCambio"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CasaDeCambio_$1534",
																		"typeString": "contract CasaDeCambio"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2799:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2799:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2799:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1430,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2822:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2826:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2822:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2814:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2814:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2814:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1433,
																"name": "oferta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "2835:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																	"typeString": "struct CasaDeCambio.Oferta memory"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2842:16:9",
															"memberName": "quantidadeTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1222,
															"src": "2835:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1421,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2780:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1030",
																"typeString": "contract ERC20"
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2786:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "2780:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2780:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "2780:79:9"
											},
											{
												"expression": {
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1437,
															"name": "oferta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "2870:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																"typeString": "struct CasaDeCambio.Oferta memory"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2877:7:9",
														"memberName": "ehAtivo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1228,
														"src": "2870:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2887:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2870:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "2870:22:9"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1443,
															"name": "ofertas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "2903:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
																"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta storage ref)"
															}
														},
														"id": 1445,
														"indexExpression": {
															"id": 1444,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "2911:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2903:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_storage",
															"typeString": "struct CasaDeCambio.Oferta storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1446,
														"name": "oferta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "2917:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
															"typeString": "struct CasaDeCambio.Oferta memory"
														}
													},
													"src": "2903:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Oferta_$1229_storage",
														"typeString": "struct CasaDeCambio.Oferta storage ref"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "2903:20:9"
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "qtddOfertasAtivas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "2936:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1450,
															"name": "qtddOfertasAtivas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "2956:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2975:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2956:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2936:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "2936:40:9"
											},
											{
												"body": {
													"id": 1490,
													"nodeType": "Block",
													"src": "3023:302:9",
													"statements": [
														{
															"assignments": [
																1466
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1466,
																	"mutability": "mutable",
																	"name": "ofertaTest",
																	"nameLocation": "3052:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1490,
																	"src": "3038:24:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																		"typeString": "struct CasaDeCambio.Oferta"
																	},
																	"typeName": {
																		"id": 1465,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1464,
																			"name": "Oferta",
																			"nameLocations": [
																				"3038:6:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1229,
																			"src": "3038:6:9"
																		},
																		"referencedDeclaration": 1229,
																		"src": "3038:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Oferta_$1229_storage_ptr",
																			"typeString": "struct CasaDeCambio.Oferta"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1470,
															"initialValue": {
																"baseExpression": {
																	"id": 1467,
																	"name": "ofertas",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "3065:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Oferta_$1229_storage_$",
																		"typeString": "mapping(uint256 => struct CasaDeCambio.Oferta storage ref)"
																	}
																},
																"id": 1469,
																"indexExpression": {
																	"id": 1468,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "3073:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3065:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_storage",
																	"typeString": "struct CasaDeCambio.Oferta storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3038:37:9"
														},
														{
															"condition": {
																"expression": {
																	"id": 1471,
																	"name": "ofertaTest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "3093:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																		"typeString": "struct CasaDeCambio.Oferta memory"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3104:7:9",
																"memberName": "ehAtivo",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1228,
																"src": "3093:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1489,
															"nodeType": "IfStatement",
															"src": "3090:209:9",
															"trueBody": {
																"id": 1488,
																"nodeType": "Block",
																"src": "3112:187:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1473,
																				"name": "qtddOfertasAtivas",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "3131:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1474,
																					"name": "qtddOfertasAtivas",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1235,
																					"src": "3151:17:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1475,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3170:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3151:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3131:40:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1478,
																		"nodeType": "ExpressionStatement",
																		"src": "3131:40:9"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1479,
																				"name": "qtddOfertasAtivas",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1235,
																				"src": "3193:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3214:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3193:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1487,
																		"nodeType": "IfStatement",
																		"src": "3190:94:9",
																		"trueBody": {
																			"id": 1486,
																			"nodeType": "Block",
																			"src": "3216:68:9",
																			"statements": [
																				{
																					"expression": {
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1482,
																							"name": "pOfertaAtiva",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1238,
																							"src": "3239:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Oferta_$1229_storage",
																								"typeString": "struct CasaDeCambio.Oferta storage ref"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1483,
																							"name": "ofertaTest",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1466,
																							"src": "3254:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Oferta_$1229_memory_ptr",
																								"typeString": "struct CasaDeCambio.Oferta memory"
																							}
																						},
																						"src": "3239:25:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Oferta_$1229_storage",
																							"typeString": "struct CasaDeCambio.Oferta storage ref"
																						}
																					},
																					"id": 1485,
																					"nodeType": "ExpressionStatement",
																					"src": "3239:25:9"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1458,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "3002:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1459,
														"name": "qtddOfertas",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "3005:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3002:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"initializationExpression": {
													"assignments": [
														1456
													],
													"declarations": [
														{
															"constant": false,
															"id": 1456,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2999:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1491,
															"src": "2994:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1455,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2994:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1457,
													"nodeType": "VariableDeclarationStatement",
													"src": "2994:6:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3018:3:9",
														"subExpression": {
															"id": 1461,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "3018:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1463,
													"nodeType": "ExpressionStatement",
													"src": "3018:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2989:336:9"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "2296:255:9",
										"text": "1.Checar se o id é valido\n2.Checar se a oferta está ativa\n3.Checar se o valor repassado bate com o precoLote\n4.Recuperar a oferta\n5.Transferir a quantidade de tokens para a carteira de quem chama*"
									},
									"functionSelector": "7cb02950",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compra",
									"nameLocation": "2566:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1397,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2602:8:9"
									},
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2581:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2573:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:12:9"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2610:0:9"
									},
									"scope": 1534,
									"src": "2557:775:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1570
									],
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "3515:62:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1502,
															"name": "qtddOfertasAtivas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3534:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1503,
																"name": "pOfertaAtiva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "3553:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Oferta_$1229_storage",
																	"typeString": "struct CasaDeCambio.Oferta storage ref"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3566:2:9",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1220,
															"src": "3553:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1505,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3533:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1506,
												"nodeType": "Return",
												"src": "3526:43:9"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "3340:99:9",
										"text": "Retornar a quantidade de ofertas ativas e o id da primeira oferta disponível*"
									},
									"functionSelector": "506e1d52",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consultaOfertas",
									"nameLocation": "3454:15:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1496,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3486:8:9"
									},
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3469:2:9"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "3504:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3504:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "3510:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3510:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:12:9"
									},
									"scope": 1534,
									"src": "3445:132:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1594
									],
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "3719:118:9",
										"statements": [
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "recebedor",
														"nameLocation": "3746:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "3730:25:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1514,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3730:15:9",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1518,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3766:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3770:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3766:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3758:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1516,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3758:8:9",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3758:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3730:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1527,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3815:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CasaDeCambio_$1534",
																			"typeString": "contract CasaDeCambio"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CasaDeCambio_$1534",
																			"typeString": "contract CasaDeCambio"
																		}
																	],
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3807:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1525,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3807:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3807:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3821:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "3807:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1522,
															"name": "recebedor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "3788:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3798:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3788:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3788:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "3788:41:9"
											}
										]
									},
									"functionSelector": "5f6df038",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1510,
												"name": "apenasDono",
												"nameLocations": [
													"3700:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1612,
												"src": "3700:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3700:10:9"
										}
									],
									"name": "sacarFundos",
									"nameLocation": "3679:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1512,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3711:8:9"
									},
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3690:2:9"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3719:0:9"
									},
									"scope": 1534,
									"src": "3670:167:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1535,
							"src": "438:3902:9",
							"usedErrors": [],
							"usedEvents": [
								1548
							]
						}
					],
					"src": "35:4305:9"
				},
				"id": 9
			},
			"CasaDeCambioAbstract.sol": {
				"ast": {
					"absolutePath": "CasaDeCambioAbstract.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"CasaDeCambioAbstract": [
							1595
						],
						"Context": [
							1164
						],
						"ControleAcessoDono": [
							1622
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 1596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1536,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:10"
						},
						{
							"absolutePath": "ControleAcessoDono.sol",
							"file": "./ControleAcessoDono.sol",
							"id": 1537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1596,
							"sourceUnit": 1623,
							"src": "70:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1539,
										"name": "ControleAcessoDono",
										"nameLocations": [
											"324:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1622,
										"src": "324:18:10"
									},
									"id": 1540,
									"nodeType": "InheritanceSpecifier",
									"src": "324:18:10"
								}
							],
							"canonicalName": "CasaDeCambioAbstract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1538,
								"nodeType": "StructuredDocumentation",
								"src": "108:172:10",
								"text": "Crie um contrato que herde desse, receba o endereço de um ERC20 via construtor e venda por ether\nUma oferta já comprada não pode ser vendida novamente*"
							},
							"fullyImplemented": false,
							"id": 1595,
							"linearizedBaseContracts": [
								1595,
								1622
							],
							"name": "CasaDeCambioAbstract",
							"nameLocation": "300:20:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "65fed65ff7cd6b2d79d64e55d0439fba77cb42a9adabf9fa002ea4c20a1f81e1",
									"id": 1548,
									"name": "ofertaRealizada",
									"nameLocation": "385:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"indexed": false,
												"mutability": "mutable",
												"name": "ultimaOfertaAdicionada",
												"nameLocation": "409:22:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "401:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantidade",
												"nameLocation": "441:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "433:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": false,
												"mutability": "mutable",
												"name": "preco",
												"nameLocation": "461:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "453:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:67:10"
									},
									"src": "379:89:10"
								},
								{
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "476:310:10",
										"text": "1.Apenas o dono pode chamar\n2.Validar a quantidadeTokens e precoLote\n3.Transferir tokens do dono para o contrato\n4.Salvar a oferta\n5.Emitir o evento ofertaRealizada\nImportante precoLote é em Wei, para conversão: https://eth-converter.com/*"
									},
									"functionSelector": "2c562a44",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "realizaOferta",
									"nameLocation": "801:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "quantidadeTokens",
												"nameLocation": "823:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "815:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "precoLote",
												"nameLocation": "849:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "841:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:45:10"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:0:10"
									},
									"scope": 1595,
									"src": "792:85:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "885:255:10",
										"text": "1.Checar se o id é valido\n2.Checar se a oferta está ativa\n3.Checar se o valor repassado bate com o precoLote\n4.Recuperar a oferta\n5.Transferir a quantidade de tokens para a carteira de quem chama*"
									},
									"functionSelector": "7cb02950",
									"id": 1562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "compra",
									"nameLocation": "1155:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1170:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "1162:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:12:10"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:0:10"
									},
									"scope": 1595,
									"src": "1146:53:10",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1563,
										"nodeType": "StructuredDocumentation",
										"src": "1207:99:10",
										"text": "Retornar a quantidade de ofertas ativas e o id da primeira oferta disponível*"
									},
									"functionSelector": "506e1d52",
									"id": 1570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "consultaOfertas",
									"nameLocation": "1321:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:2:10"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1370:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1370:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1376:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1376:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:12:10"
									},
									"scope": 1595,
									"src": "1312:70:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "1523:118:10",
										"statements": [
											{
												"assignments": [
													1576
												],
												"declarations": [
													{
														"constant": false,
														"id": 1576,
														"mutability": "mutable",
														"name": "recebedor",
														"nameLocation": "1550:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "1534:25:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1575,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1534:15:10",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1570:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1574:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1570:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1562:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1562:8:10",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1562:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1534:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1588,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1619:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CasaDeCambioAbstract_$1595",
																			"typeString": "contract CasaDeCambioAbstract"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CasaDeCambioAbstract_$1595",
																			"typeString": "contract CasaDeCambioAbstract"
																		}
																	],
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1611:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1586,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1611:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1611:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1625:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1611:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1583,
															"name": "recebedor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "1592:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1602:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1592:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1592:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "1592:41:10"
											}
										]
									},
									"functionSelector": "5f6df038",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1572,
												"name": "apenasDono",
												"nameLocations": [
													"1505:10:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1612,
												"src": "1505:10:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1505:10:10"
										}
									],
									"name": "sacarFundos",
									"nameLocation": "1484:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:2:10"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:10"
									},
									"scope": 1595,
									"src": "1475:166:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1596,
							"src": "282:1862:10",
							"usedErrors": [],
							"usedEvents": [
								1548
							]
						}
					],
					"src": "35:2109:10"
				},
				"id": 10
			},
			"ControleAcessoDono.sol": {
				"ast": {
					"absolutePath": "ControleAcessoDono.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ControleAcessoDono": [
							1622
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 1623,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1623,
							"sourceUnit": 296,
							"src": "70:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ControleAcessoDono",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1622,
							"linearizedBaseContracts": [
								1622
							],
							"name": "ControleAcessoDono",
							"nameLocation": "141:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1600,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "182:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1622,
									"src": "167:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1599,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "167:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "218:109:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1603,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "237:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "241:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "237:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1605,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "251:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "237:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446576652073657220646f6e6f2070617261206368616d617220657373612066756ec3a7c3a36f",
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "unicodeString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "258:48:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a",
																"typeString": "literal_string hex\"446576652073657220646f6e6f2070617261206368616d617220657373612066756ec3a7c3a36f\""
															},
															"value": "Deve ser dono para chamar essa função"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c31716b6b0e4a2c2294e8a2b3b3914e64f8f098b6b818cae12e95c382dbd8e2a",
																"typeString": "literal_string hex\"446576652073657220646f6e6f2070617261206368616d617220657373612066756ec3a7c3a36f\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "229:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "229:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "229:78:11"
											},
											{
												"id": 1610,
												"nodeType": "PlaceholderStatement",
												"src": "318:1:11"
											}
										]
									},
									"id": 1612,
									"name": "apenasDono",
									"nameLocation": "205:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:2:11"
									},
									"src": "196:131:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "349:37:11",
										"statements": [
											{
												"expression": {
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1615,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "360:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1616,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "368:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "372:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "368:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "360:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "360:18:11"
											}
										]
									},
									"id": 1621,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:2:11"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:11"
									},
									"scope": 1622,
									"src": "335:51:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1623,
							"src": "132:257:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:354:11"
				},
				"id": 11
			}
		}
	}
}