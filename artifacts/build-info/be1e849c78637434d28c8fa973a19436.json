{
	"id": "be1e849c78637434d28c8fa973a19436",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"SimpleExchangeImpl_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: ISimpleExchange.sol\n\n\npragma solidity ^0.8.20;\n\n\ninterface ISimpleExchange {\n\n    struct Offer {\n        uint amountToSell;\n        IERC20 tokenToSell;\n        address seller;\n        uint amountToBuy;\n        IERC20 tokenToBuy;\n        string status;\n    }\n\n    function getOffersLength() external view returns (uint);\n\n    function putOffer(uint amountToSell, IERC20 tokenToSell, uint amountToBuy, IERC20 tokenToBuy) external;\n\n    function acceptOffer(uint index) payable external;\n\n    function cancelOffer(uint index) external;\n}\n// File: SimpleExchangeImpl.sol\n\n\n\npragma solidity >=0.8.2 <0.9.0;\n\n\n\ncontract ImplementSimpleExchange is ISimpleExchange {\n\n    Offer[] public offers;\n\n    constructor() {\n    }\n\n    function getOffersLength() view external override returns (uint) {\n        return offers.length;\n    }\n\n    function putOffer(uint amountToSell, IERC20 tokenToSell, uint amountToBuy, IERC20 tokenToBuy) external override {\n        require(amountToSell !=0, unicode\"Não pode ser zero\");\n\n        offers.push(Offer({\n            amountToSell: amountToSell, \n            tokenToSell: tokenToSell, \n            seller: msg.sender,\n            amountToBuy: amountToBuy, \n            tokenToBuy: tokenToBuy,\n            status: \"PENDING\"\n        }));\n\n        //vendedor manda tokens para o contrato\n        tokenToSell.transferFrom(msg.sender, address(this), amountToSell);\n    }\n\n    function acceptOffer(uint index) payable external override {\n        Offer memory offer = offers[index];\n        require(compare(offer.status, \"PENDING\"), \"Oferta deve estar pendente.\");\n        \n        offer.status = \"ACCEPTED\";\n        \n        IERC20 TokenSell = offer.tokenToSell;\n        IERC20 TokenBuy = offer.tokenToBuy;\n\n        //comprador manda tokens para o contrato\n        TokenBuy.transferFrom(msg.sender, address(this), offer.amountToBuy);\n\n        //contrato manda tokens para o comprador\n        TokenSell.transfer(msg.sender, offer.amountToSell);\n\n        //contrato manda tokens para o vendedor\n        TokenBuy.transfer(offer.seller, offer.amountToBuy);\n\n        offers[index] = offer;\n    }\n\n    function cancelOffer(uint index) public override {\n        Offer memory offer = offers[index];\n        require(compare(offer.status, \"PENDING\"), \"Oferta deve estar pendente.\");\n        offer.status = \"CANCELED\";\n        offers[index] = offer;\n    }\n\n    function balanceOffTokenToSell(uint index) view public returns (uint) {\n        Offer memory offer = offers[index];\n        return offer.tokenToSell.balanceOf(msg.sender);\n    }\n\n    function balanceOffTokenToBuy(uint index) view public returns (uint) {\n        Offer memory offer = offers[index];\n        return offer.tokenToBuy.balanceOf(msg.sender);\n    }\n\n    function stringToByte(string memory text) private pure  returns (bytes32){\n        return keccak256(abi.encodePacked(text));\n    }\n\n    function compare(string memory text1, string memory text2) private pure returns (bool){\n         return stringToByte(text1) == stringToByte(text2);\n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SimpleExchangeImpl_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "SimpleExchangeImpl_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "SimpleExchangeImpl_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "SimpleExchangeImpl_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "SimpleExchangeImpl_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "SimpleExchangeImpl_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISimpleExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "acceptOffer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "cancelOffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOffersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountToSell",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenToSell",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountToBuy",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenToBuy",
									"type": "address"
								}
							],
							"name": "putOffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOffer(uint256)": "c815729d",
							"cancelOffer(uint256)": "ef706adf",
							"getOffersLength()": "73c2dc12",
							"putOffer(uint256,address,uint256,address)": "19b8f993"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOffersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToSell\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToBuy\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToBuy\",\"type\":\"address\"}],\"name\":\"putOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"ISimpleExchange\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ImplementSimpleExchange": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "acceptOffer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "balanceOffTokenToBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "balanceOffTokenToSell",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "cancelOffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOffersLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "offers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToSell",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenToSell",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountToBuy",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenToBuy",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "status",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountToSell",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenToSell",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountToBuy",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenToBuy",
									"type": "address"
								}
							],
							"name": "putOffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SimpleExchangeImpl_flattened.sol\":22619:25046  contract ImplementSimpleExchange is ISimpleExchange {... */\n  mstore(0x40, 0x80)\n    /* \"SimpleExchangeImpl_flattened.sol\":22706:22727  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"SimpleExchangeImpl_flattened.sol\":22619:25046  contract ImplementSimpleExchange is ISimpleExchange {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SimpleExchangeImpl_flattened.sol\":22619:25046  contract ImplementSimpleExchange is ISimpleExchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a72ea6a\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x8a72ea6a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc815729d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe324869b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xef706adf\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x19b8f993\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f6bb8e0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x73c2dc12\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"SimpleExchangeImpl_flattened.sol\":22841:23407  function putOffer(uint amountToSell, IERC20 tokenToSell, uint amountToBuy, IERC20 tokenToBuy) external override {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"SimpleExchangeImpl_flattened.sol\":24569:24744  function balanceOffTokenToBuy(uint index) view public returns (uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleExchangeImpl_flattened.sol\":22733:22835  function getOffersLength() view external override returns (uint) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleExchangeImpl_flattened.sol\":22678:22699  Offer[] public offers */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleExchangeImpl_flattened.sol\":23413:24126  function acceptOffer(uint index) payable external override {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"SimpleExchangeImpl_flattened.sol\":24386:24563  function balanceOffTokenToSell(uint index) view public returns (uint) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SimpleExchangeImpl_flattened.sol\":24132:24380  function cancelOffer(uint index) public override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"SimpleExchangeImpl_flattened.sol\":22841:23407  function putOffer(uint amountToSell, IERC20 tokenToSell, uint amountToBuy, IERC20 tokenToBuy) external override {... */\n    tag_14:\n        /* \"SimpleExchangeImpl_flattened.sol\":22986:22987  0 */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":22971:22983  amountToSell */\n      dup5\n        /* \"SimpleExchangeImpl_flattened.sol\":22971:22987  amountToSell !=0 */\n      sub\n        /* \"SimpleExchangeImpl_flattened.sol\":22963:23017  require(amountToSell !=0, unicode\"Não pode ser zero\") */\n      tag_45\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_46\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"SimpleExchangeImpl_flattened.sol\":23028:23034  offers */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":23040:23275  Offer({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":23074:23086  amountToSell */\n      dup7\n        /* \"SimpleExchangeImpl_flattened.sol\":23040:23275  Offer({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":23114:23125  tokenToSell */\n      dup6\n        /* \"SimpleExchangeImpl_flattened.sol\":23040:23275  Offer({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":23148:23158  msg.sender */\n      caller\n        /* \"SimpleExchangeImpl_flattened.sol\":23040:23275  Offer({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":23185:23196  amountToBuy */\n      dup5\n        /* \"SimpleExchangeImpl_flattened.sol\":23040:23275  Offer({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":23223:23233  tokenToBuy */\n      dup4\n        /* \"SimpleExchangeImpl_flattened.sol\":23040:23275  Offer({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x50454e44494e4700000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23028:23276  offers.push(Offer({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      swap1\n      dup2\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      pop\n      pop\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23335:23346  tokenToSell */\n      dup3\n        /* \"SimpleExchangeImpl_flattened.sol\":23335:23359  tokenToSell.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SimpleExchangeImpl_flattened.sol\":23360:23370  msg.sender */\n      caller\n        /* \"SimpleExchangeImpl_flattened.sol\":23380:23384  this */\n      address\n        /* \"SimpleExchangeImpl_flattened.sol\":23387:23399  amountToSell */\n      dup8\n        /* \"SimpleExchangeImpl_flattened.sol\":23335:23400  tokenToSell.transferFrom(msg.sender, address(this), amountToSell) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":22841:23407  function putOffer(uint amountToSell, IERC20 tokenToSell, uint amountToBuy, IERC20 tokenToBuy) external override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":24569:24744  function balanceOffTokenToBuy(uint index) view public returns (uint) {... */\n    tag_19:\n        /* \"SimpleExchangeImpl_flattened.sol\":24632:24636  uint */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24648:24666  Offer memory offer */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24669:24675  offers */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24676:24681  index */\n      dup4\n        /* \"SimpleExchangeImpl_flattened.sol\":24669:24682  offers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n    tag_58:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":24648:24682  Offer memory offer = offers[index] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_66\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_65)\n    tag_66:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_67:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24699:24704  offer */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24699:24715  offer.tokenToBuy */\n      0x80\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":24699:24725  offer.tokenToBuy.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleExchangeImpl_flattened.sol\":24726:24736  msg.sender */\n      caller\n        /* \"SimpleExchangeImpl_flattened.sol\":24699:24737  offer.tokenToBuy.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"SimpleExchangeImpl_flattened.sol\":24692:24737  return offer.tokenToBuy.balanceOf(msg.sender) */\n      swap2\n      pop\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24569:24744  function balanceOffTokenToBuy(uint index) view public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":22733:22835  function getOffersLength() view external override returns (uint) {... */\n    tag_24:\n        /* \"SimpleExchangeImpl_flattened.sol\":22792:22796  uint */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":22815:22821  offers */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":22815:22828  offers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":22808:22828  return offers.length */\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":22733:22835  function getOffersLength() view external override returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":22678:22699  Offer[] public offers */\n    tag_29:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_63\n      jump\t// in\n    tag_77:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_63\n      jump\t// in\n    tag_78:\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":23413:24126  function acceptOffer(uint index) payable external override {... */\n    tag_34:\n        /* \"SimpleExchangeImpl_flattened.sol\":23482:23500  Offer memory offer */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":23503:23509  offers */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":23510:23515  index */\n      dup3\n        /* \"SimpleExchangeImpl_flattened.sol\":23503:23516  offers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_83\n      jumpi\n      tag_84\n      tag_60\n      jump\t// in\n    tag_84:\n    tag_83:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":23482:23516  Offer memory offer = offers[index] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_63\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_63\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23534:23566  compare(offer.status, \"PENDING\") */\n      tag_91\n        /* \"SimpleExchangeImpl_flattened.sol\":23542:23547  offer */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":23542:23554  offer.status */\n      0xa0\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":23534:23566  compare(offer.status, \"PENDING\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x50454e44494e4700000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23534:23541  compare */\n      tag_92\n        /* \"SimpleExchangeImpl_flattened.sol\":23534:23566  compare(offer.status, \"PENDING\") */\n      jump\t// in\n    tag_91:\n        /* \"SimpleExchangeImpl_flattened.sol\":23526:23598  require(compare(offer.status, \"PENDING\"), \"Oferta deve estar pendente.\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"SimpleExchangeImpl_flattened.sol\":23617:23642  offer.status = \"ACCEPTED\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x4143434550544544000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23617:23622  offer */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":23617:23629  offer.status */\n      0xa0\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":23617:23642  offer.status = \"ACCEPTED\" */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23661:23677  IERC20 TokenSell */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":23680:23685  offer */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":23680:23697  offer.tokenToSell */\n      0x20\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":23661:23697  IERC20 TokenSell = offer.tokenToSell */\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23707:23722  IERC20 TokenBuy */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":23725:23730  offer */\n      dup3\n        /* \"SimpleExchangeImpl_flattened.sol\":23725:23741  offer.tokenToBuy */\n      0x80\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":23707:23741  IERC20 TokenBuy = offer.tokenToBuy */\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23801:23809  TokenBuy */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":23801:23822  TokenBuy.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SimpleExchangeImpl_flattened.sol\":23823:23833  msg.sender */\n      caller\n        /* \"SimpleExchangeImpl_flattened.sol\":23843:23847  this */\n      address\n        /* \"SimpleExchangeImpl_flattened.sol\":23850:23855  offer */\n      dup7\n        /* \"SimpleExchangeImpl_flattened.sol\":23850:23867  offer.amountToBuy */\n      0x60\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":23801:23868  TokenBuy.transferFrom(msg.sender, address(this), offer.amountToBuy) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_99:\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23928:23937  TokenSell */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":23928:23946  TokenSell.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleExchangeImpl_flattened.sol\":23947:23957  msg.sender */\n      caller\n        /* \"SimpleExchangeImpl_flattened.sol\":23959:23964  offer */\n      dup6\n        /* \"SimpleExchangeImpl_flattened.sol\":23959:23977  offer.amountToSell */\n      0x00\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":23928:23978  TokenSell.transfer(msg.sender, offer.amountToSell) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_104:\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24037:24045  TokenBuy */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24037:24054  TokenBuy.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SimpleExchangeImpl_flattened.sol\":24055:24060  offer */\n      dup5\n        /* \"SimpleExchangeImpl_flattened.sol\":24055:24067  offer.seller */\n      0x40\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":24069:24074  offer */\n      dup6\n        /* \"SimpleExchangeImpl_flattened.sol\":24069:24086  offer.amountToBuy */\n      0x60\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":24037:24087  TokenBuy.transfer(offer.seller, offer.amountToBuy) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_105:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_108:\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24114:24119  offer */\n      dup3\n        /* \"SimpleExchangeImpl_flattened.sol\":24098:24104  offers */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24105:24110  index */\n      dup6\n        /* \"SimpleExchangeImpl_flattened.sol\":24098:24111  offers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_110\n      tag_60\n      jump\t// in\n    tag_110:\n    tag_109:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":24098:24119  offers[index] = offer */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      swap1\n      dup2\n      tag_112\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_112:\n      pop\n      swap1\n      pop\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23472:24126  {... */\n      pop\n      pop\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":23413:24126  function acceptOffer(uint index) payable external override {... */\n      pop\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":24386:24563  function balanceOffTokenToSell(uint index) view public returns (uint) {... */\n    tag_38:\n        /* \"SimpleExchangeImpl_flattened.sol\":24450:24454  uint */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24466:24484  Offer memory offer */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24487:24493  offers */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24494:24499  index */\n      dup4\n        /* \"SimpleExchangeImpl_flattened.sol\":24487:24500  offers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_115\n      tag_60\n      jump\t// in\n    tag_115:\n    tag_114:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":24466:24500  Offer memory offer = offers[index] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_63\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_63\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24517:24522  offer */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24517:24534  offer.tokenToSell */\n      0x20\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":24517:24544  offer.tokenToSell.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SimpleExchangeImpl_flattened.sol\":24545:24555  msg.sender */\n      caller\n        /* \"SimpleExchangeImpl_flattened.sol\":24517:24556  offer.tokenToSell.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_122:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_125:\n        /* \"SimpleExchangeImpl_flattened.sol\":24510:24556  return offer.tokenToSell.balanceOf(msg.sender) */\n      swap2\n      pop\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24386:24563  function balanceOffTokenToSell(uint index) view public returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":24132:24380  function cancelOffer(uint index) public override {... */\n    tag_43:\n        /* \"SimpleExchangeImpl_flattened.sol\":24191:24209  Offer memory offer */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24212:24218  offers */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24219:24224  index */\n      dup3\n        /* \"SimpleExchangeImpl_flattened.sol\":24212:24225  offers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_127\n      jumpi\n      tag_128\n      tag_60\n      jump\t// in\n    tag_128:\n    tag_127:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":24191:24225  Offer memory offer = offers[index] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_63\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_63\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24243:24275  compare(offer.status, \"PENDING\") */\n      tag_135\n        /* \"SimpleExchangeImpl_flattened.sol\":24251:24256  offer */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":24251:24263  offer.status */\n      0xa0\n      add\n      mload\n        /* \"SimpleExchangeImpl_flattened.sol\":24243:24275  compare(offer.status, \"PENDING\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x50454e44494e4700000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24243:24250  compare */\n      tag_92\n        /* \"SimpleExchangeImpl_flattened.sol\":24243:24275  compare(offer.status, \"PENDING\") */\n      jump\t// in\n    tag_135:\n        /* \"SimpleExchangeImpl_flattened.sol\":24235:24307  require(compare(offer.status, \"PENDING\"), \"Oferta deve estar pendente.\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_95\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"SimpleExchangeImpl_flattened.sol\":24317:24342  offer.status = \"CANCELED\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x43414e43454c4544000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24317:24322  offer */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":24317:24329  offer.status */\n      0xa0\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":24317:24342  offer.status = \"CANCELED\" */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24368:24373  offer */\n      dup1\n        /* \"SimpleExchangeImpl_flattened.sol\":24352:24358  offers */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24359:24364  index */\n      dup4\n        /* \"SimpleExchangeImpl_flattened.sol\":24352:24365  offers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_139\n      tag_60\n      jump\t// in\n    tag_139:\n    tag_138:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x06\n      mul\n      add\n        /* \"SimpleExchangeImpl_flattened.sol\":24352:24373  offers[index] = offer */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      swap1\n      dup2\n      tag_141\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_141:\n      pop\n      swap1\n      pop\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24181:24380  {... */\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24132:24380  function cancelOffer(uint index) public override {... */\n      pop\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":24886:25039  function compare(string memory text1, string memory text2) private pure returns (bool){... */\n    tag_92:\n        /* \"SimpleExchangeImpl_flattened.sol\":24967:24971  bool */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":25013:25032  stringToByte(text2) */\n      tag_143\n        /* \"SimpleExchangeImpl_flattened.sol\":25026:25031  text2 */\n      dup3\n        /* \"SimpleExchangeImpl_flattened.sol\":25013:25025  stringToByte */\n      tag_144\n        /* \"SimpleExchangeImpl_flattened.sol\":25013:25032  stringToByte(text2) */\n      jump\t// in\n    tag_143:\n        /* \"SimpleExchangeImpl_flattened.sol\":24990:25009  stringToByte(text1) */\n      tag_145\n        /* \"SimpleExchangeImpl_flattened.sol\":25003:25008  text1 */\n      dup5\n        /* \"SimpleExchangeImpl_flattened.sol\":24990:25002  stringToByte */\n      tag_144\n        /* \"SimpleExchangeImpl_flattened.sol\":24990:25009  stringToByte(text1) */\n      jump\t// in\n    tag_145:\n        /* \"SimpleExchangeImpl_flattened.sol\":24990:25032  stringToByte(text1) == stringToByte(text2) */\n      eq\n        /* \"SimpleExchangeImpl_flattened.sol\":24983:25032  return stringToByte(text1) == stringToByte(text2) */\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24886:25039  function compare(string memory text1, string memory text2) private pure returns (bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SimpleExchangeImpl_flattened.sol\":24750:24880  function stringToByte(string memory text) private pure  returns (bytes32){... */\n    tag_144:\n        /* \"SimpleExchangeImpl_flattened.sol\":24815:24822  bytes32 */\n      0x00\n        /* \"SimpleExchangeImpl_flattened.sol\":24867:24871  text */\n      dup2\n        /* \"SimpleExchangeImpl_flattened.sol\":24850:24872  abi.encodePacked(text) */\n      add(0x20, mload(0x40))\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"SimpleExchangeImpl_flattened.sol\":24840:24873  keccak256(abi.encodePacked(text)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"SimpleExchangeImpl_flattened.sol\":24833:24873  return keccak256(abi.encodePacked(text)) */\n      swap1\n      pop\n        /* \"SimpleExchangeImpl_flattened.sol\":24750:24880  function stringToByte(string memory text) private pure  returns (bytes32){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_150:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_152:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_153:\n        /* \"#utility.yul\":490:514   */\n      tag_204\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_205:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_154:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_207\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_155:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:918   */\n    tag_156:\n        /* \"#utility.yul\":859:866   */\n      0x00\n        /* \"#utility.yul\":888:912   */\n      tag_210\n        /* \"#utility.yul\":906:911   */\n      dup3\n        /* \"#utility.yul\":888:912   */\n      tag_155\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":877:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1034   */\n    tag_157:\n        /* \"#utility.yul\":975:982   */\n      0x00\n        /* \"#utility.yul\":1004:1028   */\n      tag_212\n        /* \"#utility.yul\":1022:1027   */\n      dup3\n        /* \"#utility.yul\":1004:1028   */\n      tag_156\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":993:1028   */\n      swap1\n      pop\n        /* \"#utility.yul\":924:1034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1040:1190   */\n    tag_158:\n        /* \"#utility.yul\":1127:1165   */\n      tag_214\n        /* \"#utility.yul\":1159:1164   */\n      dup2\n        /* \"#utility.yul\":1127:1165   */\n      tag_157\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1117:1166   */\n      eq\n        /* \"#utility.yul\":1107:1184   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":1180:1181   */\n      0x00\n        /* \"#utility.yul\":1177:1178   */\n      dup1\n        /* \"#utility.yul\":1170:1182   */\n      revert\n        /* \"#utility.yul\":1107:1184   */\n    tag_215:\n        /* \"#utility.yul\":1040:1190   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1196:1363   */\n    tag_159:\n        /* \"#utility.yul\":1256:1261   */\n      0x00\n        /* \"#utility.yul\":1294:1300   */\n      dup2\n        /* \"#utility.yul\":1281:1301   */\n      calldataload\n        /* \"#utility.yul\":1272:1301   */\n      swap1\n      pop\n        /* \"#utility.yul\":1310:1357   */\n      tag_217\n        /* \"#utility.yul\":1351:1356   */\n      dup2\n        /* \"#utility.yul\":1310:1357   */\n      tag_158\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1196:1363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1369:2190   */\n    tag_13:\n        /* \"#utility.yul\":1483:1489   */\n      0x00\n        /* \"#utility.yul\":1491:1497   */\n      dup1\n        /* \"#utility.yul\":1499:1505   */\n      0x00\n        /* \"#utility.yul\":1507:1513   */\n      dup1\n        /* \"#utility.yul\":1556:1559   */\n      0x80\n        /* \"#utility.yul\":1544:1553   */\n      dup6\n        /* \"#utility.yul\":1535:1542   */\n      dup8\n        /* \"#utility.yul\":1531:1554   */\n      sub\n        /* \"#utility.yul\":1527:1560   */\n      slt\n        /* \"#utility.yul\":1524:1644   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":1563:1642   */\n      tag_220\n      tag_150\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1524:1644   */\n    tag_219:\n        /* \"#utility.yul\":1683:1684   */\n      0x00\n        /* \"#utility.yul\":1708:1761   */\n      tag_221\n        /* \"#utility.yul\":1753:1760   */\n      dup8\n        /* \"#utility.yul\":1744:1750   */\n      dup3\n        /* \"#utility.yul\":1733:1742   */\n      dup9\n        /* \"#utility.yul\":1729:1751   */\n      add\n        /* \"#utility.yul\":1708:1761   */\n      tag_154\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":1698:1761   */\n      swap5\n      pop\n        /* \"#utility.yul\":1654:1771   */\n      pop\n        /* \"#utility.yul\":1810:1812   */\n      0x20\n        /* \"#utility.yul\":1836:1903   */\n      tag_222\n        /* \"#utility.yul\":1895:1902   */\n      dup8\n        /* \"#utility.yul\":1886:1892   */\n      dup3\n        /* \"#utility.yul\":1875:1884   */\n      dup9\n        /* \"#utility.yul\":1871:1893   */\n      add\n        /* \"#utility.yul\":1836:1903   */\n      tag_159\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1826:1903   */\n      swap4\n      pop\n        /* \"#utility.yul\":1781:1913   */\n      pop\n        /* \"#utility.yul\":1952:1954   */\n      0x40\n        /* \"#utility.yul\":1978:2031   */\n      tag_223\n        /* \"#utility.yul\":2023:2030   */\n      dup8\n        /* \"#utility.yul\":2014:2020   */\n      dup3\n        /* \"#utility.yul\":2003:2012   */\n      dup9\n        /* \"#utility.yul\":1999:2021   */\n      add\n        /* \"#utility.yul\":1978:2031   */\n      tag_154\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1968:2031   */\n      swap3\n      pop\n        /* \"#utility.yul\":1923:2041   */\n      pop\n        /* \"#utility.yul\":2080:2082   */\n      0x60\n        /* \"#utility.yul\":2106:2173   */\n      tag_224\n        /* \"#utility.yul\":2165:2172   */\n      dup8\n        /* \"#utility.yul\":2156:2162   */\n      dup3\n        /* \"#utility.yul\":2145:2154   */\n      dup9\n        /* \"#utility.yul\":2141:2163   */\n      add\n        /* \"#utility.yul\":2106:2173   */\n      tag_159\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2096:2173   */\n      swap2\n      pop\n        /* \"#utility.yul\":2051:2183   */\n      pop\n        /* \"#utility.yul\":1369:2190   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2196:2525   */\n    tag_18:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2304:2306   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup3\n        /* \"#utility.yul\":2283:2290   */\n      dup5\n        /* \"#utility.yul\":2279:2302   */\n      sub\n        /* \"#utility.yul\":2275:2307   */\n      slt\n        /* \"#utility.yul\":2272:2391   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2310:2389   */\n      tag_227\n      tag_150\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2272:2391   */\n    tag_226:\n        /* \"#utility.yul\":2430:2431   */\n      0x00\n        /* \"#utility.yul\":2455:2508   */\n      tag_228\n        /* \"#utility.yul\":2500:2507   */\n      dup5\n        /* \"#utility.yul\":2491:2497   */\n      dup3\n        /* \"#utility.yul\":2480:2489   */\n      dup6\n        /* \"#utility.yul\":2476:2498   */\n      add\n        /* \"#utility.yul\":2455:2508   */\n      tag_154\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2445:2508   */\n      swap2\n      pop\n        /* \"#utility.yul\":2401:2518   */\n      pop\n        /* \"#utility.yul\":2196:2525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2531:2649   */\n    tag_160:\n        /* \"#utility.yul\":2618:2642   */\n      tag_230\n        /* \"#utility.yul\":2636:2641   */\n      dup2\n        /* \"#utility.yul\":2618:2642   */\n      tag_152\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2613:2616   */\n      dup3\n        /* \"#utility.yul\":2606:2643   */\n      mstore\n        /* \"#utility.yul\":2531:2649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2655:2877   */\n    tag_21:\n        /* \"#utility.yul\":2748:2752   */\n      0x00\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"#utility.yul\":2775:2784   */\n      dup3\n        /* \"#utility.yul\":2771:2789   */\n      add\n        /* \"#utility.yul\":2763:2789   */\n      swap1\n      pop\n        /* \"#utility.yul\":2799:2870   */\n      tag_232\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2856:2865   */\n      dup4\n        /* \"#utility.yul\":2852:2869   */\n      add\n        /* \"#utility.yul\":2843:2849   */\n      dup5\n        /* \"#utility.yul\":2799:2870   */\n      tag_160\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2655:2877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2883:2943   */\n    tag_161:\n        /* \"#utility.yul\":2911:2914   */\n      0x00\n        /* \"#utility.yul\":2932:2937   */\n      dup2\n        /* \"#utility.yul\":2925:2937   */\n      swap1\n      pop\n        /* \"#utility.yul\":2883:2943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2949:3091   */\n    tag_162:\n        /* \"#utility.yul\":2999:3008   */\n      0x00\n        /* \"#utility.yul\":3032:3085   */\n      tag_235\n        /* \"#utility.yul\":3050:3084   */\n      tag_236\n        /* \"#utility.yul\":3059:3083   */\n      tag_237\n        /* \"#utility.yul\":3077:3082   */\n      dup5\n        /* \"#utility.yul\":3059:3083   */\n      tag_155\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3050:3084   */\n      tag_161\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3032:3085   */\n      tag_155\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3019:3085   */\n      swap1\n      pop\n        /* \"#utility.yul\":2949:3091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3097:3223   */\n    tag_163:\n        /* \"#utility.yul\":3147:3156   */\n      0x00\n        /* \"#utility.yul\":3180:3217   */\n      tag_239\n        /* \"#utility.yul\":3211:3216   */\n      dup3\n        /* \"#utility.yul\":3180:3217   */\n      tag_162\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3167:3217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3097:3223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3229:3369   */\n    tag_164:\n        /* \"#utility.yul\":3293:3302   */\n      0x00\n        /* \"#utility.yul\":3326:3363   */\n      tag_241\n        /* \"#utility.yul\":3357:3362   */\n      dup3\n        /* \"#utility.yul\":3326:3363   */\n      tag_163\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3313:3363   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3375:3534   */\n    tag_165:\n        /* \"#utility.yul\":3476:3527   */\n      tag_243\n        /* \"#utility.yul\":3521:3526   */\n      dup2\n        /* \"#utility.yul\":3476:3527   */\n      tag_164\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3471:3474   */\n      dup3\n        /* \"#utility.yul\":3464:3528   */\n      mstore\n        /* \"#utility.yul\":3375:3534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3658   */\n    tag_166:\n        /* \"#utility.yul\":3627:3651   */\n      tag_245\n        /* \"#utility.yul\":3645:3650   */\n      dup2\n        /* \"#utility.yul\":3627:3651   */\n      tag_156\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3622:3625   */\n      dup3\n        /* \"#utility.yul\":3615:3652   */\n      mstore\n        /* \"#utility.yul\":3540:3658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3664:3763   */\n    tag_167:\n        /* \"#utility.yul\":3716:3722   */\n      0x00\n        /* \"#utility.yul\":3750:3755   */\n      dup2\n        /* \"#utility.yul\":3744:3756   */\n      mload\n        /* \"#utility.yul\":3734:3756   */\n      swap1\n      pop\n        /* \"#utility.yul\":3664:3763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3769:3938   */\n    tag_168:\n        /* \"#utility.yul\":3853:3864   */\n      0x00\n        /* \"#utility.yul\":3887:3893   */\n      dup3\n        /* \"#utility.yul\":3882:3885   */\n      dup3\n        /* \"#utility.yul\":3875:3894   */\n      mstore\n        /* \"#utility.yul\":3927:3931   */\n      0x20\n        /* \"#utility.yul\":3922:3925   */\n      dup3\n        /* \"#utility.yul\":3918:3932   */\n      add\n        /* \"#utility.yul\":3903:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3769:3938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3944:4190   */\n    tag_169:\n        /* \"#utility.yul\":4025:4026   */\n      0x00\n        /* \"#utility.yul\":4035:4148   */\n    tag_249:\n        /* \"#utility.yul\":4049:4055   */\n      dup4\n        /* \"#utility.yul\":4046:4047   */\n      dup2\n        /* \"#utility.yul\":4043:4056   */\n      lt\n        /* \"#utility.yul\":4035:4148   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":4134:4135   */\n      dup1\n        /* \"#utility.yul\":4129:4132   */\n      dup3\n        /* \"#utility.yul\":4125:4136   */\n      add\n        /* \"#utility.yul\":4119:4137   */\n      mload\n        /* \"#utility.yul\":4115:4116   */\n      dup2\n        /* \"#utility.yul\":4110:4113   */\n      dup5\n        /* \"#utility.yul\":4106:4117   */\n      add\n        /* \"#utility.yul\":4099:4138   */\n      mstore\n        /* \"#utility.yul\":4071:4073   */\n      0x20\n        /* \"#utility.yul\":4068:4069   */\n      dup2\n        /* \"#utility.yul\":4064:4074   */\n      add\n        /* \"#utility.yul\":4059:4074   */\n      swap1\n      pop\n        /* \"#utility.yul\":4035:4148   */\n      jump(tag_249)\n    tag_251:\n        /* \"#utility.yul\":4182:4183   */\n      0x00\n        /* \"#utility.yul\":4173:4179   */\n      dup5\n        /* \"#utility.yul\":4168:4171   */\n      dup5\n        /* \"#utility.yul\":4164:4180   */\n      add\n        /* \"#utility.yul\":4157:4184   */\n      mstore\n        /* \"#utility.yul\":4006:4190   */\n      pop\n        /* \"#utility.yul\":3944:4190   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4196:4298   */\n    tag_170:\n        /* \"#utility.yul\":4237:4243   */\n      0x00\n        /* \"#utility.yul\":4288:4290   */\n      0x1f\n        /* \"#utility.yul\":4284:4291   */\n      not\n        /* \"#utility.yul\":4279:4281   */\n      0x1f\n        /* \"#utility.yul\":4272:4277   */\n      dup4\n        /* \"#utility.yul\":4268:4282   */\n      add\n        /* \"#utility.yul\":4264:4292   */\n      and\n        /* \"#utility.yul\":4254:4292   */\n      swap1\n      pop\n        /* \"#utility.yul\":4196:4298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4304:4681   */\n    tag_171:\n        /* \"#utility.yul\":4392:4395   */\n      0x00\n        /* \"#utility.yul\":4420:4459   */\n      tag_254\n        /* \"#utility.yul\":4453:4458   */\n      dup3\n        /* \"#utility.yul\":4420:4459   */\n      tag_167\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4475:4546   */\n      tag_255\n        /* \"#utility.yul\":4539:4545   */\n      dup2\n        /* \"#utility.yul\":4534:4537   */\n      dup6\n        /* \"#utility.yul\":4475:4546   */\n      tag_168\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4468:4546   */\n      swap4\n      pop\n        /* \"#utility.yul\":4555:4620   */\n      tag_256\n        /* \"#utility.yul\":4613:4619   */\n      dup2\n        /* \"#utility.yul\":4608:4611   */\n      dup6\n        /* \"#utility.yul\":4601:4605   */\n      0x20\n        /* \"#utility.yul\":4594:4599   */\n      dup7\n        /* \"#utility.yul\":4590:4606   */\n      add\n        /* \"#utility.yul\":4555:4620   */\n      tag_169\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4645:4674   */\n      tag_257\n        /* \"#utility.yul\":4667:4673   */\n      dup2\n        /* \"#utility.yul\":4645:4674   */\n      tag_170\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4640:4643   */\n      dup5\n        /* \"#utility.yul\":4636:4675   */\n      add\n        /* \"#utility.yul\":4629:4675   */\n      swap2\n      pop\n        /* \"#utility.yul\":4396:4681   */\n      pop\n        /* \"#utility.yul\":4304:4681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4687:5609   */\n    tag_31:\n        /* \"#utility.yul\":4968:4972   */\n      0x00\n        /* \"#utility.yul\":5006:5009   */\n      0xc0\n        /* \"#utility.yul\":4995:5004   */\n      dup3\n        /* \"#utility.yul\":4991:5010   */\n      add\n        /* \"#utility.yul\":4983:5010   */\n      swap1\n      pop\n        /* \"#utility.yul\":5020:5091   */\n      tag_259\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5077:5086   */\n      dup4\n        /* \"#utility.yul\":5073:5090   */\n      add\n        /* \"#utility.yul\":5064:5070   */\n      dup10\n        /* \"#utility.yul\":5020:5091   */\n      tag_160\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5101:5187   */\n      tag_260\n        /* \"#utility.yul\":5183:5185   */\n      0x20\n        /* \"#utility.yul\":5172:5181   */\n      dup4\n        /* \"#utility.yul\":5168:5186   */\n      add\n        /* \"#utility.yul\":5159:5165   */\n      dup9\n        /* \"#utility.yul\":5101:5187   */\n      tag_165\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5197:5269   */\n      tag_261\n        /* \"#utility.yul\":5265:5267   */\n      0x40\n        /* \"#utility.yul\":5254:5263   */\n      dup4\n        /* \"#utility.yul\":5250:5268   */\n      add\n        /* \"#utility.yul\":5241:5247   */\n      dup8\n        /* \"#utility.yul\":5197:5269   */\n      tag_166\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5279:5351   */\n      tag_262\n        /* \"#utility.yul\":5347:5349   */\n      0x60\n        /* \"#utility.yul\":5336:5345   */\n      dup4\n        /* \"#utility.yul\":5332:5350   */\n      add\n        /* \"#utility.yul\":5323:5329   */\n      dup7\n        /* \"#utility.yul\":5279:5351   */\n      tag_160\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5361:5448   */\n      tag_263\n        /* \"#utility.yul\":5443:5446   */\n      0x80\n        /* \"#utility.yul\":5432:5441   */\n      dup4\n        /* \"#utility.yul\":5428:5447   */\n      add\n        /* \"#utility.yul\":5419:5425   */\n      dup6\n        /* \"#utility.yul\":5361:5448   */\n      tag_165\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5496:5505   */\n      dup2\n        /* \"#utility.yul\":5490:5494   */\n      dup2\n        /* \"#utility.yul\":5486:5506   */\n      sub\n        /* \"#utility.yul\":5480:5483   */\n      0xa0\n        /* \"#utility.yul\":5469:5478   */\n      dup4\n        /* \"#utility.yul\":5465:5484   */\n      add\n        /* \"#utility.yul\":5458:5507   */\n      mstore\n        /* \"#utility.yul\":5524:5602   */\n      tag_264\n        /* \"#utility.yul\":5597:5601   */\n      dup2\n        /* \"#utility.yul\":5588:5594   */\n      dup5\n        /* \"#utility.yul\":5524:5602   */\n      tag_171\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5516:5602   */\n      swap1\n      pop\n        /* \"#utility.yul\":4687:5609   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5615:5829   */\n    tag_172:\n        /* \"#utility.yul\":5755:5821   */\n      0x4ec3a36f20706f646520736572207a65726f0000000000000000000000000000\n        /* \"#utility.yul\":5751:5752   */\n      0x00\n        /* \"#utility.yul\":5743:5749   */\n      dup3\n        /* \"#utility.yul\":5739:5753   */\n      add\n        /* \"#utility.yul\":5732:5822   */\n      mstore\n        /* \"#utility.yul\":5615:5829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5835:6201   */\n    tag_173:\n        /* \"#utility.yul\":5977:5980   */\n      0x00\n        /* \"#utility.yul\":5998:6065   */\n      tag_267\n        /* \"#utility.yul\":6062:6064   */\n      0x12\n        /* \"#utility.yul\":6057:6060   */\n      dup4\n        /* \"#utility.yul\":5998:6065   */\n      tag_168\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5991:6065   */\n      swap2\n      pop\n        /* \"#utility.yul\":6074:6167   */\n      tag_268\n        /* \"#utility.yul\":6163:6166   */\n      dup3\n        /* \"#utility.yul\":6074:6167   */\n      tag_172\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6192:6194   */\n      0x20\n        /* \"#utility.yul\":6187:6190   */\n      dup3\n        /* \"#utility.yul\":6183:6195   */\n      add\n        /* \"#utility.yul\":6176:6195   */\n      swap1\n      pop\n        /* \"#utility.yul\":5835:6201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6207:6626   */\n    tag_47:\n        /* \"#utility.yul\":6373:6377   */\n      0x00\n        /* \"#utility.yul\":6411:6413   */\n      0x20\n        /* \"#utility.yul\":6400:6409   */\n      dup3\n        /* \"#utility.yul\":6396:6414   */\n      add\n        /* \"#utility.yul\":6388:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6460:6469   */\n      dup2\n        /* \"#utility.yul\":6454:6458   */\n      dup2\n        /* \"#utility.yul\":6450:6470   */\n      sub\n        /* \"#utility.yul\":6446:6447   */\n      0x00\n        /* \"#utility.yul\":6435:6444   */\n      dup4\n        /* \"#utility.yul\":6431:6448   */\n      add\n        /* \"#utility.yul\":6424:6471   */\n      mstore\n        /* \"#utility.yul\":6488:6619   */\n      tag_270\n        /* \"#utility.yul\":6614:6618   */\n      dup2\n        /* \"#utility.yul\":6488:6619   */\n      tag_173\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6480:6619   */\n      swap1\n      pop\n        /* \"#utility.yul\":6207:6626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:6812   */\n    tag_174:\n        /* \"#utility.yul\":6680:6757   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6677:6678   */\n      0x00\n        /* \"#utility.yul\":6670:6758   */\n      mstore\n        /* \"#utility.yul\":6777:6781   */\n      0x41\n        /* \"#utility.yul\":6774:6775   */\n      0x04\n        /* \"#utility.yul\":6767:6782   */\n      mstore\n        /* \"#utility.yul\":6801:6805   */\n      0x24\n        /* \"#utility.yul\":6798:6799   */\n      0x00\n        /* \"#utility.yul\":6791:6806   */\n      revert\n        /* \"#utility.yul\":6818:6998   */\n    tag_175:\n        /* \"#utility.yul\":6866:6943   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6863:6864   */\n      0x00\n        /* \"#utility.yul\":6856:6944   */\n      mstore\n        /* \"#utility.yul\":6963:6967   */\n      0x22\n        /* \"#utility.yul\":6960:6961   */\n      0x04\n        /* \"#utility.yul\":6953:6968   */\n      mstore\n        /* \"#utility.yul\":6987:6991   */\n      0x24\n        /* \"#utility.yul\":6984:6985   */\n      0x00\n        /* \"#utility.yul\":6977:6992   */\n      revert\n        /* \"#utility.yul\":7004:7324   */\n    tag_63:\n        /* \"#utility.yul\":7048:7054   */\n      0x00\n        /* \"#utility.yul\":7085:7086   */\n      0x02\n        /* \"#utility.yul\":7079:7083   */\n      dup3\n        /* \"#utility.yul\":7075:7087   */\n      div\n        /* \"#utility.yul\":7065:7087   */\n      swap1\n      pop\n        /* \"#utility.yul\":7132:7133   */\n      0x01\n        /* \"#utility.yul\":7126:7130   */\n      dup3\n        /* \"#utility.yul\":7122:7134   */\n      and\n        /* \"#utility.yul\":7153:7171   */\n      dup1\n        /* \"#utility.yul\":7143:7224   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":7209:7213   */\n      0x7f\n        /* \"#utility.yul\":7201:7207   */\n      dup3\n        /* \"#utility.yul\":7197:7214   */\n      and\n        /* \"#utility.yul\":7187:7214   */\n      swap2\n      pop\n        /* \"#utility.yul\":7143:7224   */\n    tag_274:\n        /* \"#utility.yul\":7271:7273   */\n      0x20\n        /* \"#utility.yul\":7263:7269   */\n      dup3\n        /* \"#utility.yul\":7260:7274   */\n      lt\n        /* \"#utility.yul\":7240:7258   */\n      dup2\n        /* \"#utility.yul\":7237:7275   */\n      sub\n        /* \"#utility.yul\":7234:7318   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":7290:7308   */\n      tag_276\n      tag_175\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7234:7318   */\n    tag_275:\n        /* \"#utility.yul\":7055:7324   */\n      pop\n        /* \"#utility.yul\":7004:7324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7330:7471   */\n    tag_176:\n        /* \"#utility.yul\":7379:7383   */\n      0x00\n        /* \"#utility.yul\":7402:7405   */\n      dup2\n        /* \"#utility.yul\":7394:7405   */\n      swap1\n      pop\n        /* \"#utility.yul\":7425:7428   */\n      dup2\n        /* \"#utility.yul\":7422:7423   */\n      0x00\n        /* \"#utility.yul\":7415:7429   */\n      mstore\n        /* \"#utility.yul\":7459:7463   */\n      0x20\n        /* \"#utility.yul\":7456:7457   */\n      0x00\n        /* \"#utility.yul\":7446:7464   */\n      keccak256\n        /* \"#utility.yul\":7438:7464   */\n      swap1\n      pop\n        /* \"#utility.yul\":7330:7471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7477:7570   */\n    tag_177:\n        /* \"#utility.yul\":7514:7520   */\n      0x00\n        /* \"#utility.yul\":7561:7563   */\n      0x20\n        /* \"#utility.yul\":7556:7558   */\n      0x1f\n        /* \"#utility.yul\":7549:7554   */\n      dup4\n        /* \"#utility.yul\":7545:7559   */\n      add\n        /* \"#utility.yul\":7541:7564   */\n      div\n        /* \"#utility.yul\":7531:7564   */\n      swap1\n      pop\n        /* \"#utility.yul\":7477:7570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7576:7683   */\n    tag_178:\n        /* \"#utility.yul\":7620:7628   */\n      0x00\n        /* \"#utility.yul\":7670:7675   */\n      dup3\n        /* \"#utility.yul\":7664:7668   */\n      dup3\n        /* \"#utility.yul\":7660:7676   */\n      shl\n        /* \"#utility.yul\":7639:7676   */\n      swap1\n      pop\n        /* \"#utility.yul\":7576:7683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7689:8082   */\n    tag_179:\n        /* \"#utility.yul\":7758:7764   */\n      0x00\n        /* \"#utility.yul\":7808:7809   */\n      0x08\n        /* \"#utility.yul\":7796:7806   */\n      dup4\n        /* \"#utility.yul\":7792:7810   */\n      mul\n        /* \"#utility.yul\":7831:7928   */\n      tag_281\n        /* \"#utility.yul\":7861:7927   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7850:7859   */\n      dup3\n        /* \"#utility.yul\":7831:7928   */\n      tag_178\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7949:7988   */\n      tag_282\n        /* \"#utility.yul\":7979:7987   */\n      dup7\n        /* \"#utility.yul\":7968:7977   */\n      dup4\n        /* \"#utility.yul\":7949:7988   */\n      tag_178\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7937:7988   */\n      swap6\n      pop\n        /* \"#utility.yul\":8021:8025   */\n      dup1\n        /* \"#utility.yul\":8017:8026   */\n      not\n        /* \"#utility.yul\":8010:8015   */\n      dup5\n        /* \"#utility.yul\":8006:8027   */\n      and\n        /* \"#utility.yul\":7997:8027   */\n      swap4\n      pop\n        /* \"#utility.yul\":8070:8074   */\n      dup1\n        /* \"#utility.yul\":8060:8068   */\n      dup7\n        /* \"#utility.yul\":8056:8075   */\n      and\n        /* \"#utility.yul\":8049:8054   */\n      dup5\n        /* \"#utility.yul\":8046:8076   */\n      or\n        /* \"#utility.yul\":8036:8076   */\n      swap3\n      pop\n        /* \"#utility.yul\":7765:8082   */\n      pop\n      pop\n        /* \"#utility.yul\":7689:8082   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8088:8230   */\n    tag_180:\n        /* \"#utility.yul\":8138:8147   */\n      0x00\n        /* \"#utility.yul\":8171:8224   */\n      tag_284\n        /* \"#utility.yul\":8189:8223   */\n      tag_285\n        /* \"#utility.yul\":8198:8222   */\n      tag_286\n        /* \"#utility.yul\":8216:8221   */\n      dup5\n        /* \"#utility.yul\":8198:8222   */\n      tag_152\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8189:8223   */\n      tag_161\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8171:8224   */\n      tag_152\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8158:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8088:8230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8236:8311   */\n    tag_181:\n        /* \"#utility.yul\":8279:8282   */\n      0x00\n        /* \"#utility.yul\":8300:8305   */\n      dup2\n        /* \"#utility.yul\":8293:8305   */\n      swap1\n      pop\n        /* \"#utility.yul\":8236:8311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8317:8586   */\n    tag_182:\n        /* \"#utility.yul\":8427:8466   */\n      tag_289\n        /* \"#utility.yul\":8458:8465   */\n      dup4\n        /* \"#utility.yul\":8427:8466   */\n      tag_180\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8488:8579   */\n      tag_290\n        /* \"#utility.yul\":8537:8578   */\n      tag_291\n        /* \"#utility.yul\":8561:8577   */\n      dup3\n        /* \"#utility.yul\":8537:8578   */\n      tag_181\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8529:8535   */\n      dup5\n        /* \"#utility.yul\":8522:8526   */\n      dup5\n        /* \"#utility.yul\":8516:8527   */\n      sload\n        /* \"#utility.yul\":8488:8579   */\n      tag_179\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8482:8486   */\n      dup3\n        /* \"#utility.yul\":8475:8580   */\n      sstore\n        /* \"#utility.yul\":8393:8586   */\n      pop\n        /* \"#utility.yul\":8317:8586   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8592:8665   */\n    tag_183:\n        /* \"#utility.yul\":8637:8640   */\n      0x00\n        /* \"#utility.yul\":8592:8665   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8671:8860   */\n    tag_184:\n        /* \"#utility.yul\":8748:8780   */\n      tag_294\n      tag_183\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":8789:8854   */\n      tag_295\n        /* \"#utility.yul\":8847:8853   */\n      dup2\n        /* \"#utility.yul\":8839:8845   */\n      dup5\n        /* \"#utility.yul\":8833:8837   */\n      dup5\n        /* \"#utility.yul\":8789:8854   */\n      tag_182\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8724:8860   */\n      pop\n        /* \"#utility.yul\":8671:8860   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8866:9052   */\n    tag_185:\n        /* \"#utility.yul\":8926:9046   */\n    tag_297:\n        /* \"#utility.yul\":8943:8946   */\n      dup2\n        /* \"#utility.yul\":8936:8941   */\n      dup2\n        /* \"#utility.yul\":8933:8947   */\n      lt\n        /* \"#utility.yul\":8926:9046   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":8997:9036   */\n      tag_300\n        /* \"#utility.yul\":9034:9035   */\n      0x00\n        /* \"#utility.yul\":9027:9032   */\n      dup3\n        /* \"#utility.yul\":8997:9036   */\n      tag_184\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8970:8971   */\n      0x01\n        /* \"#utility.yul\":8963:8968   */\n      dup2\n        /* \"#utility.yul\":8959:8972   */\n      add\n        /* \"#utility.yul\":8950:8972   */\n      swap1\n      pop\n        /* \"#utility.yul\":8926:9046   */\n      jump(tag_297)\n    tag_299:\n        /* \"#utility.yul\":8866:9052   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9601   */\n    tag_186:\n        /* \"#utility.yul\":9159:9161   */\n      0x1f\n        /* \"#utility.yul\":9154:9157   */\n      dup3\n        /* \"#utility.yul\":9151:9162   */\n      gt\n        /* \"#utility.yul\":9148:9594   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":9193:9231   */\n      tag_303\n        /* \"#utility.yul\":9225:9230   */\n      dup2\n        /* \"#utility.yul\":9193:9231   */\n      tag_176\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":9277:9306   */\n      tag_304\n        /* \"#utility.yul\":9295:9305   */\n      dup5\n        /* \"#utility.yul\":9277:9306   */\n      tag_177\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9267:9275   */\n      dup2\n        /* \"#utility.yul\":9263:9307   */\n      add\n        /* \"#utility.yul\":9460:9462   */\n      0x20\n        /* \"#utility.yul\":9448:9458   */\n      dup6\n        /* \"#utility.yul\":9445:9463   */\n      lt\n        /* \"#utility.yul\":9442:9491   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":9481:9489   */\n      dup2\n        /* \"#utility.yul\":9466:9489   */\n      swap1\n      pop\n        /* \"#utility.yul\":9442:9491   */\n    tag_305:\n        /* \"#utility.yul\":9504:9584   */\n      tag_306\n        /* \"#utility.yul\":9560:9582   */\n      tag_307\n        /* \"#utility.yul\":9578:9581   */\n      dup6\n        /* \"#utility.yul\":9560:9582   */\n      tag_177\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9550:9558   */\n      dup4\n        /* \"#utility.yul\":9546:9583   */\n      add\n        /* \"#utility.yul\":9533:9544   */\n      dup3\n        /* \"#utility.yul\":9504:9584   */\n      tag_185\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9163:9594   */\n      pop\n      pop\n        /* \"#utility.yul\":9148:9594   */\n    tag_302:\n        /* \"#utility.yul\":9058:9601   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9607:9724   */\n    tag_187:\n        /* \"#utility.yul\":9661:9669   */\n      0x00\n        /* \"#utility.yul\":9711:9716   */\n      dup3\n        /* \"#utility.yul\":9705:9709   */\n      dup3\n        /* \"#utility.yul\":9701:9717   */\n      shr\n        /* \"#utility.yul\":9680:9717   */\n      swap1\n      pop\n        /* \"#utility.yul\":9607:9724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9730:9899   */\n    tag_188:\n        /* \"#utility.yul\":9774:9780   */\n      0x00\n        /* \"#utility.yul\":9807:9858   */\n      tag_310\n        /* \"#utility.yul\":9855:9856   */\n      0x00\n        /* \"#utility.yul\":9851:9857   */\n      not\n        /* \"#utility.yul\":9843:9848   */\n      dup5\n        /* \"#utility.yul\":9840:9841   */\n      0x08\n        /* \"#utility.yul\":9836:9849   */\n      mul\n        /* \"#utility.yul\":9807:9858   */\n      tag_187\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9803:9859   */\n      not\n        /* \"#utility.yul\":9888:9892   */\n      dup1\n        /* \"#utility.yul\":9882:9886   */\n      dup4\n        /* \"#utility.yul\":9878:9893   */\n      and\n        /* \"#utility.yul\":9868:9893   */\n      swap2\n      pop\n        /* \"#utility.yul\":9781:9899   */\n      pop\n        /* \"#utility.yul\":9730:9899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9904:10199   */\n    tag_189:\n        /* \"#utility.yul\":9980:9984   */\n      0x00\n        /* \"#utility.yul\":10126:10155   */\n      tag_312\n        /* \"#utility.yul\":10151:10154   */\n      dup4\n        /* \"#utility.yul\":10145:10149   */\n      dup4\n        /* \"#utility.yul\":10126:10155   */\n      tag_188\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10118:10155   */\n      swap2\n      pop\n        /* \"#utility.yul\":10188:10191   */\n      dup3\n        /* \"#utility.yul\":10185:10186   */\n      0x02\n        /* \"#utility.yul\":10181:10192   */\n      mul\n        /* \"#utility.yul\":10175:10179   */\n      dup3\n        /* \"#utility.yul\":10172:10193   */\n      or\n        /* \"#utility.yul\":10164:10193   */\n      swap1\n      pop\n        /* \"#utility.yul\":9904:10199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10204:11599   */\n    tag_50:\n        /* \"#utility.yul\":10321:10358   */\n      tag_314\n        /* \"#utility.yul\":10354:10357   */\n      dup3\n        /* \"#utility.yul\":10321:10358   */\n      tag_167\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10423:10441   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10415:10421   */\n      dup2\n        /* \"#utility.yul\":10412:10442   */\n      gt\n        /* \"#utility.yul\":10409:10465   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":10445:10463   */\n      tag_316\n      tag_174\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10409:10465   */\n    tag_315:\n        /* \"#utility.yul\":10489:10527   */\n      tag_317\n        /* \"#utility.yul\":10521:10525   */\n      dup3\n        /* \"#utility.yul\":10515:10526   */\n      sload\n        /* \"#utility.yul\":10489:10527   */\n      tag_63\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10574:10641   */\n      tag_318\n        /* \"#utility.yul\":10634:10640   */\n      dup3\n        /* \"#utility.yul\":10626:10632   */\n      dup3\n        /* \"#utility.yul\":10620:10624   */\n      dup6\n        /* \"#utility.yul\":10574:10641   */\n      tag_186\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10692:10696   */\n      0x20\n        /* \"#utility.yul\":10679:10696   */\n      swap1\n      pop\n        /* \"#utility.yul\":10724:10726   */\n      0x1f\n        /* \"#utility.yul\":10716:10722   */\n      dup4\n        /* \"#utility.yul\":10713:10727   */\n      gt\n        /* \"#utility.yul\":10741:10742   */\n      0x01\n        /* \"#utility.yul\":10736:11354   */\n      dup2\n      eq\n      tag_320\n      jumpi\n        /* \"#utility.yul\":11398:11399   */\n      0x00\n        /* \"#utility.yul\":11415:11421   */\n      dup5\n        /* \"#utility.yul\":11412:11489   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":11464:11473   */\n      dup3\n        /* \"#utility.yul\":11459:11462   */\n      dup8\n        /* \"#utility.yul\":11455:11474   */\n      add\n        /* \"#utility.yul\":11449:11475   */\n      mload\n        /* \"#utility.yul\":11440:11475   */\n      swap1\n      pop\n        /* \"#utility.yul\":11412:11489   */\n    tag_321:\n        /* \"#utility.yul\":11515:11582   */\n      tag_322\n        /* \"#utility.yul\":11575:11581   */\n      dup6\n        /* \"#utility.yul\":11568:11573   */\n      dup3\n        /* \"#utility.yul\":11515:11582   */\n      tag_189\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11509:11513   */\n      dup7\n        /* \"#utility.yul\":11502:11583   */\n      sstore\n        /* \"#utility.yul\":11371:11593   */\n      pop\n        /* \"#utility.yul\":10706:11593   */\n      jump(tag_319)\n        /* \"#utility.yul\":10736:11354   */\n    tag_320:\n        /* \"#utility.yul\":10788:10792   */\n      0x1f\n        /* \"#utility.yul\":10784:10793   */\n      not\n        /* \"#utility.yul\":10776:10782   */\n      dup5\n        /* \"#utility.yul\":10772:10794   */\n      and\n        /* \"#utility.yul\":10822:10859   */\n      tag_323\n        /* \"#utility.yul\":10854:10858   */\n      dup7\n        /* \"#utility.yul\":10822:10859   */\n      tag_176\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":10881:10882   */\n      0x00\n        /* \"#utility.yul\":10895:11103   */\n    tag_324:\n        /* \"#utility.yul\":10909:10916   */\n      dup3\n        /* \"#utility.yul\":10906:10907   */\n      dup2\n        /* \"#utility.yul\":10903:10917   */\n      lt\n        /* \"#utility.yul\":10895:11103   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":10988:10997   */\n      dup5\n        /* \"#utility.yul\":10983:10986   */\n      dup10\n        /* \"#utility.yul\":10979:10998   */\n      add\n        /* \"#utility.yul\":10973:10999   */\n      mload\n        /* \"#utility.yul\":10965:10971   */\n      dup3\n        /* \"#utility.yul\":10958:11000   */\n      sstore\n        /* \"#utility.yul\":11039:11040   */\n      0x01\n        /* \"#utility.yul\":11031:11037   */\n      dup3\n        /* \"#utility.yul\":11027:11041   */\n      add\n        /* \"#utility.yul\":11017:11041   */\n      swap2\n      pop\n        /* \"#utility.yul\":11086:11088   */\n      0x20\n        /* \"#utility.yul\":11075:11084   */\n      dup6\n        /* \"#utility.yul\":11071:11089   */\n      add\n        /* \"#utility.yul\":11058:11089   */\n      swap5\n      pop\n        /* \"#utility.yul\":10932:10936   */\n      0x20\n        /* \"#utility.yul\":10929:10930   */\n      dup2\n        /* \"#utility.yul\":10925:10937   */\n      add\n        /* \"#utility.yul\":10920:10937   */\n      swap1\n      pop\n        /* \"#utility.yul\":10895:11103   */\n      jump(tag_324)\n    tag_326:\n        /* \"#utility.yul\":11131:11137   */\n      dup7\n        /* \"#utility.yul\":11122:11129   */\n      dup4\n        /* \"#utility.yul\":11119:11138   */\n      lt\n        /* \"#utility.yul\":11116:11295   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":11189:11198   */\n      dup5\n        /* \"#utility.yul\":11184:11187   */\n      dup10\n        /* \"#utility.yul\":11180:11199   */\n      add\n        /* \"#utility.yul\":11174:11200   */\n      mload\n        /* \"#utility.yul\":11232:11280   */\n      tag_328\n        /* \"#utility.yul\":11274:11278   */\n      0x1f\n        /* \"#utility.yul\":11266:11272   */\n      dup10\n        /* \"#utility.yul\":11262:11279   */\n      and\n        /* \"#utility.yul\":11251:11260   */\n      dup3\n        /* \"#utility.yul\":11232:11280   */\n      tag_188\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11224:11230   */\n      dup4\n        /* \"#utility.yul\":11217:11281   */\n      sstore\n        /* \"#utility.yul\":11139:11295   */\n      pop\n        /* \"#utility.yul\":11116:11295   */\n    tag_327:\n        /* \"#utility.yul\":11341:11342   */\n      0x01\n        /* \"#utility.yul\":11337:11338   */\n      0x02\n        /* \"#utility.yul\":11329:11335   */\n      dup9\n        /* \"#utility.yul\":11325:11339   */\n      mul\n        /* \"#utility.yul\":11321:11343   */\n      add\n        /* \"#utility.yul\":11315:11319   */\n      dup9\n        /* \"#utility.yul\":11308:11344   */\n      sstore\n        /* \"#utility.yul\":10743:11354   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10706:11593   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":10296:11599   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10204:11599   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11605:12047   */\n    tag_52:\n        /* \"#utility.yul\":11754:11758   */\n      0x00\n        /* \"#utility.yul\":11792:11794   */\n      0x60\n        /* \"#utility.yul\":11781:11790   */\n      dup3\n        /* \"#utility.yul\":11777:11795   */\n      add\n        /* \"#utility.yul\":11769:11795   */\n      swap1\n      pop\n        /* \"#utility.yul\":11805:11876   */\n      tag_330\n        /* \"#utility.yul\":11873:11874   */\n      0x00\n        /* \"#utility.yul\":11862:11871   */\n      dup4\n        /* \"#utility.yul\":11858:11875   */\n      add\n        /* \"#utility.yul\":11849:11855   */\n      dup7\n        /* \"#utility.yul\":11805:11876   */\n      tag_166\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11886:11958   */\n      tag_331\n        /* \"#utility.yul\":11954:11956   */\n      0x20\n        /* \"#utility.yul\":11943:11952   */\n      dup4\n        /* \"#utility.yul\":11939:11957   */\n      add\n        /* \"#utility.yul\":11930:11936   */\n      dup6\n        /* \"#utility.yul\":11886:11958   */\n      tag_166\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11968:12040   */\n      tag_332\n        /* \"#utility.yul\":12036:12038   */\n      0x40\n        /* \"#utility.yul\":12025:12034   */\n      dup4\n        /* \"#utility.yul\":12021:12039   */\n      add\n        /* \"#utility.yul\":12012:12018   */\n      dup5\n        /* \"#utility.yul\":11968:12040   */\n      tag_160\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11605:12047   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12053:12143   */\n    tag_190:\n        /* \"#utility.yul\":12087:12094   */\n      0x00\n        /* \"#utility.yul\":12130:12135   */\n      dup2\n        /* \"#utility.yul\":12123:12136   */\n      iszero\n        /* \"#utility.yul\":12116:12137   */\n      iszero\n        /* \"#utility.yul\":12105:12137   */\n      swap1\n      pop\n        /* \"#utility.yul\":12053:12143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12149:12265   */\n    tag_191:\n        /* \"#utility.yul\":12219:12240   */\n      tag_335\n        /* \"#utility.yul\":12234:12239   */\n      dup2\n        /* \"#utility.yul\":12219:12240   */\n      tag_190\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":12212:12217   */\n      dup2\n        /* \"#utility.yul\":12209:12241   */\n      eq\n        /* \"#utility.yul\":12199:12259   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":12255:12256   */\n      0x00\n        /* \"#utility.yul\":12252:12253   */\n      dup1\n        /* \"#utility.yul\":12245:12257   */\n      revert\n        /* \"#utility.yul\":12199:12259   */\n    tag_336:\n        /* \"#utility.yul\":12149:12265   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12271:12408   */\n    tag_192:\n        /* \"#utility.yul\":12325:12330   */\n      0x00\n        /* \"#utility.yul\":12356:12362   */\n      dup2\n        /* \"#utility.yul\":12350:12363   */\n      mload\n        /* \"#utility.yul\":12341:12363   */\n      swap1\n      pop\n        /* \"#utility.yul\":12372:12402   */\n      tag_338\n        /* \"#utility.yul\":12396:12401   */\n      dup2\n        /* \"#utility.yul\":12372:12402   */\n      tag_191\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":12271:12408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12414:12759   */\n    tag_56:\n        /* \"#utility.yul\":12481:12487   */\n      0x00\n        /* \"#utility.yul\":12530:12532   */\n      0x20\n        /* \"#utility.yul\":12518:12527   */\n      dup3\n        /* \"#utility.yul\":12509:12516   */\n      dup5\n        /* \"#utility.yul\":12505:12528   */\n      sub\n        /* \"#utility.yul\":12501:12533   */\n      slt\n        /* \"#utility.yul\":12498:12617   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":12536:12615   */\n      tag_341\n      tag_150\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":12498:12617   */\n    tag_340:\n        /* \"#utility.yul\":12656:12657   */\n      0x00\n        /* \"#utility.yul\":12681:12742   */\n      tag_342\n        /* \"#utility.yul\":12734:12741   */\n      dup5\n        /* \"#utility.yul\":12725:12731   */\n      dup3\n        /* \"#utility.yul\":12714:12723   */\n      dup6\n        /* \"#utility.yul\":12710:12732   */\n      add\n        /* \"#utility.yul\":12681:12742   */\n      tag_192\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":12671:12742   */\n      swap2\n      pop\n        /* \"#utility.yul\":12627:12752   */\n      pop\n        /* \"#utility.yul\":12414:12759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12765:12945   */\n    tag_60:\n        /* \"#utility.yul\":12813:12890   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12810:12811   */\n      0x00\n        /* \"#utility.yul\":12803:12891   */\n      mstore\n        /* \"#utility.yul\":12910:12914   */\n      0x32\n        /* \"#utility.yul\":12907:12908   */\n      0x04\n        /* \"#utility.yul\":12900:12915   */\n      mstore\n        /* \"#utility.yul\":12934:12938   */\n      0x24\n        /* \"#utility.yul\":12931:12932   */\n      0x00\n        /* \"#utility.yul\":12924:12939   */\n      revert\n        /* \"#utility.yul\":12951:13173   */\n    tag_69:\n        /* \"#utility.yul\":13044:13048   */\n      0x00\n        /* \"#utility.yul\":13082:13084   */\n      0x20\n        /* \"#utility.yul\":13071:13080   */\n      dup3\n        /* \"#utility.yul\":13067:13085   */\n      add\n        /* \"#utility.yul\":13059:13085   */\n      swap1\n      pop\n        /* \"#utility.yul\":13095:13166   */\n      tag_345\n        /* \"#utility.yul\":13163:13164   */\n      0x00\n        /* \"#utility.yul\":13152:13161   */\n      dup4\n        /* \"#utility.yul\":13148:13165   */\n      add\n        /* \"#utility.yul\":13139:13145   */\n      dup5\n        /* \"#utility.yul\":13095:13166   */\n      tag_166\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12951:13173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13179:13322   */\n    tag_193:\n        /* \"#utility.yul\":13236:13241   */\n      0x00\n        /* \"#utility.yul\":13267:13273   */\n      dup2\n        /* \"#utility.yul\":13261:13274   */\n      mload\n        /* \"#utility.yul\":13252:13274   */\n      swap1\n      pop\n        /* \"#utility.yul\":13283:13316   */\n      tag_347\n        /* \"#utility.yul\":13310:13315   */\n      dup2\n        /* \"#utility.yul\":13283:13316   */\n      tag_153\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":13179:13322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13328:13679   */\n    tag_73:\n        /* \"#utility.yul\":13398:13404   */\n      0x00\n        /* \"#utility.yul\":13447:13449   */\n      0x20\n        /* \"#utility.yul\":13435:13444   */\n      dup3\n        /* \"#utility.yul\":13426:13433   */\n      dup5\n        /* \"#utility.yul\":13422:13445   */\n      sub\n        /* \"#utility.yul\":13418:13450   */\n      slt\n        /* \"#utility.yul\":13415:13534   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":13453:13532   */\n      tag_350\n      tag_150\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13415:13534   */\n    tag_349:\n        /* \"#utility.yul\":13573:13574   */\n      0x00\n        /* \"#utility.yul\":13598:13662   */\n      tag_351\n        /* \"#utility.yul\":13654:13661   */\n      dup5\n        /* \"#utility.yul\":13645:13651   */\n      dup3\n        /* \"#utility.yul\":13634:13643   */\n      dup6\n        /* \"#utility.yul\":13630:13652   */\n      add\n        /* \"#utility.yul\":13598:13662   */\n      tag_193\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":13588:13662   */\n      swap2\n      pop\n        /* \"#utility.yul\":13544:13672   */\n      pop\n        /* \"#utility.yul\":13328:13679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13685:13862   */\n    tag_194:\n        /* \"#utility.yul\":13825:13854   */\n      0x4f666572746120646576652065737461722070656e64656e74652e0000000000\n        /* \"#utility.yul\":13821:13822   */\n      0x00\n        /* \"#utility.yul\":13813:13819   */\n      dup3\n        /* \"#utility.yul\":13809:13823   */\n      add\n        /* \"#utility.yul\":13802:13855   */\n      mstore\n        /* \"#utility.yul\":13685:13862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13868:14234   */\n    tag_195:\n        /* \"#utility.yul\":14010:14013   */\n      0x00\n        /* \"#utility.yul\":14031:14098   */\n      tag_354\n        /* \"#utility.yul\":14095:14097   */\n      0x1b\n        /* \"#utility.yul\":14090:14093   */\n      dup4\n        /* \"#utility.yul\":14031:14098   */\n      tag_168\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":14024:14098   */\n      swap2\n      pop\n        /* \"#utility.yul\":14107:14200   */\n      tag_355\n        /* \"#utility.yul\":14196:14199   */\n      dup3\n        /* \"#utility.yul\":14107:14200   */\n      tag_194\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":14225:14227   */\n      0x20\n        /* \"#utility.yul\":14220:14223   */\n      dup3\n        /* \"#utility.yul\":14216:14228   */\n      add\n        /* \"#utility.yul\":14209:14228   */\n      swap1\n      pop\n        /* \"#utility.yul\":13868:14234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14240:14659   */\n    tag_95:\n        /* \"#utility.yul\":14406:14410   */\n      0x00\n        /* \"#utility.yul\":14444:14446   */\n      0x20\n        /* \"#utility.yul\":14433:14442   */\n      dup3\n        /* \"#utility.yul\":14429:14447   */\n      add\n        /* \"#utility.yul\":14421:14447   */\n      swap1\n      pop\n        /* \"#utility.yul\":14493:14502   */\n      dup2\n        /* \"#utility.yul\":14487:14491   */\n      dup2\n        /* \"#utility.yul\":14483:14503   */\n      sub\n        /* \"#utility.yul\":14479:14480   */\n      0x00\n        /* \"#utility.yul\":14468:14477   */\n      dup4\n        /* \"#utility.yul\":14464:14481   */\n      add\n        /* \"#utility.yul\":14457:14504   */\n      mstore\n        /* \"#utility.yul\":14521:14652   */\n      tag_357\n        /* \"#utility.yul\":14647:14651   */\n      dup2\n        /* \"#utility.yul\":14521:14652   */\n      tag_195\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14513:14652   */\n      swap1\n      pop\n        /* \"#utility.yul\":14240:14659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14665:14997   */\n    tag_101:\n        /* \"#utility.yul\":14786:14790   */\n      0x00\n        /* \"#utility.yul\":14824:14826   */\n      0x40\n        /* \"#utility.yul\":14813:14822   */\n      dup3\n        /* \"#utility.yul\":14809:14827   */\n      add\n        /* \"#utility.yul\":14801:14827   */\n      swap1\n      pop\n        /* \"#utility.yul\":14837:14908   */\n      tag_359\n        /* \"#utility.yul\":14905:14906   */\n      0x00\n        /* \"#utility.yul\":14894:14903   */\n      dup4\n        /* \"#utility.yul\":14890:14907   */\n      add\n        /* \"#utility.yul\":14881:14887   */\n      dup6\n        /* \"#utility.yul\":14837:14908   */\n      tag_166\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":14918:14990   */\n      tag_360\n        /* \"#utility.yul\":14986:14988   */\n      0x20\n        /* \"#utility.yul\":14975:14984   */\n      dup4\n        /* \"#utility.yul\":14971:14989   */\n      add\n        /* \"#utility.yul\":14962:14968   */\n      dup5\n        /* \"#utility.yul\":14918:14990   */\n      tag_160\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14665:14997   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15003:15151   */\n    tag_196:\n        /* \"#utility.yul\":15105:15116   */\n      0x00\n        /* \"#utility.yul\":15142:15145   */\n      dup2\n        /* \"#utility.yul\":15127:15145   */\n      swap1\n      pop\n        /* \"#utility.yul\":15003:15151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15157:15547   */\n    tag_197:\n        /* \"#utility.yul\":15263:15266   */\n      0x00\n        /* \"#utility.yul\":15291:15330   */\n      tag_363\n        /* \"#utility.yul\":15324:15329   */\n      dup3\n        /* \"#utility.yul\":15291:15330   */\n      tag_167\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":15346:15435   */\n      tag_364\n        /* \"#utility.yul\":15428:15434   */\n      dup2\n        /* \"#utility.yul\":15423:15426   */\n      dup6\n        /* \"#utility.yul\":15346:15435   */\n      tag_196\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":15339:15435   */\n      swap4\n      pop\n        /* \"#utility.yul\":15444:15509   */\n      tag_365\n        /* \"#utility.yul\":15502:15508   */\n      dup2\n        /* \"#utility.yul\":15497:15500   */\n      dup6\n        /* \"#utility.yul\":15490:15494   */\n      0x20\n        /* \"#utility.yul\":15483:15488   */\n      dup7\n        /* \"#utility.yul\":15479:15495   */\n      add\n        /* \"#utility.yul\":15444:15509   */\n      tag_169\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":15534:15540   */\n      dup1\n        /* \"#utility.yul\":15529:15532   */\n      dup5\n        /* \"#utility.yul\":15525:15541   */\n      add\n        /* \"#utility.yul\":15518:15541   */\n      swap2\n      pop\n        /* \"#utility.yul\":15267:15547   */\n      pop\n        /* \"#utility.yul\":15157:15547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15553:15828   */\n    tag_148:\n        /* \"#utility.yul\":15685:15688   */\n      0x00\n        /* \"#utility.yul\":15707:15802   */\n      tag_367\n        /* \"#utility.yul\":15798:15801   */\n      dup3\n        /* \"#utility.yul\":15789:15795   */\n      dup5\n        /* \"#utility.yul\":15707:15802   */\n      tag_197\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":15700:15802   */\n      swap2\n      pop\n        /* \"#utility.yul\":15819:15822   */\n      dup2\n        /* \"#utility.yul\":15812:15822   */\n      swap1\n      pop\n        /* \"#utility.yul\":15553:15828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220712be36f37f181ac35c4bc896cd206ce11d8e141132afef65163a8690a6a6e8864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_827": {
									"entryPoint": null,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50611ba48061001d5f395ff3fe60806040526004361061006f575f3560e01c80638a72ea6a1161004d5780638a72ea6a14610101578063c815729d14610142578063e324869b1461015e578063ef706adf1461019a5761006f565b806319b8f993146100735780631f6bb8e01461009b57806373c2dc12146100d7575b5f80fd5b34801561007e575f80fd5b506100996004803603810190610094919061140f565b6101c2565b005b3480156100a6575f80fd5b506100c160048036038101906100bc9190611473565b61044f565b6040516100ce91906114ad565b60405180910390f35b3480156100e2575f80fd5b506100eb6106a3565b6040516100f891906114ad565b60405180910390f35b34801561010c575f80fd5b5061012760048036038101906101229190611473565b6106ae565b604051610139969594939291906115ba565b60405180910390f35b61015c60048036038101906101579190611473565b6107d7565b005b348015610169575f80fd5b50610184600480360381019061017f9190611473565b610d1e565b60405161019191906114ad565b60405180910390f35b3480156101a5575f80fd5b506101c060048036038101906101bb9190611473565b610f72565b005b5f8403610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb9061166a565b60405180910390fd5b5f6040518060c001604052808681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600781526020017f50454e44494e4700000000000000000000000000000000000000000000000000815250815250908060018154018082558091505060019003905f5260205f2090600602015f909190919091505f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050190816103c891906118a6565b5050508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161040893929190611975565b6020604051808303815f875af1158015610424573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044891906119df565b5050505050565b5f805f838154811061046457610463611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805461059d906116e2565b80601f01602080910402602001604051908101604052809291908181526020018280546105c9906116e2565b80156106145780601f106105eb57610100808354040283529160200191610614565b820191905f5260205f20905b8154815290600101906020018083116105f757829003601f168201915b5050505050815250509050806080015173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161065c9190611a37565b602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b9190611a64565b915050919050565b5f8080549050905090565b5f81815481106106bc575f80fd5b905f5260205f2090600602015f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005018054610756906116e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906116e2565b80156107cd5780601f106107a4576101008083540402835291602001916107cd565b820191905f5260205f20905b8154815290600101906020018083116107b057829003601f168201915b5050505050905086565b5f8082815481106107eb576107ea611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054610924906116e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610950906116e2565b801561099b5780601f106109725761010080835404028352916020019161099b565b820191905f5260205f20905b81548152906001019060200180831161097e57829003601f168201915b50505050508152505090506109e98160a001516040518060400160405280600781526020017f50454e44494e4700000000000000000000000000000000000000000000000000815250611322565b610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90611ad9565b60405180910390fd5b6040518060400160405280600881526020017f41434345505445440000000000000000000000000000000000000000000000008152508160a001819052505f816020015190505f826080015190508073ffffffffffffffffffffffffffffffffffffffff166323b872dd333086606001516040518463ffffffff1660e01b8152600401610ab793929190611975565b6020604051808303815f875af1158015610ad3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af791906119df565b508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33855f01516040518363ffffffff1660e01b8152600401610b36929190611af7565b6020604051808303815f875af1158015610b52573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7691906119df565b508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb846040015185606001516040518363ffffffff1660e01b8152600401610bba929190611af7565b6020604051808303815f875af1158015610bd6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfa91906119df565b50825f8581548110610c0f57610c0e611a0a565b5b905f5260205f2090600602015f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005019081610d1491906118a6565b5090505050505050565b5f805f8381548110610d3357610d32611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054610e6c906116e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e98906116e2565b8015610ee35780601f10610eba57610100808354040283529160200191610ee3565b820191905f5260205f20905b815481529060010190602001808311610ec657829003601f168201915b5050505050815250509050806020015173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f2b9190611a37565b602060405180830381865afa158015610f46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f6a9190611a64565b915050919050565b5f808281548110610f8657610f85611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180546110bf906116e2565b80601f01602080910402602001604051908101604052809291908181526020018280546110eb906116e2565b80156111365780601f1061110d57610100808354040283529160200191611136565b820191905f5260205f20905b81548152906001019060200180831161111957829003601f168201915b50505050508152505090506111848160a001516040518060400160405280600781526020017f50454e44494e4700000000000000000000000000000000000000000000000000815250611322565b6111c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ba90611ad9565b60405180910390fd5b6040518060400160405280600881526020017f43414e43454c45440000000000000000000000000000000000000000000000008152508160a00181905250805f838154811061121557611214611a0a565b5b905f5260205f2090600602015f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501908161131a91906118a6565b509050505050565b5f61132c8261133e565b6113358461133e565b14905092915050565b5f816040516020016113509190611b58565b604051602081830303815290604052805190602001209050919050565b5f80fd5b5f819050919050565b61138381611371565b811461138d575f80fd5b50565b5f8135905061139e8161137a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113cd826113a4565b9050919050565b5f6113de826113c3565b9050919050565b6113ee816113d4565b81146113f8575f80fd5b50565b5f81359050611409816113e5565b92915050565b5f805f80608085870312156114275761142661136d565b5b5f61143487828801611390565b9450506020611445878288016113fb565b935050604061145687828801611390565b9250506060611467878288016113fb565b91505092959194509250565b5f602082840312156114885761148761136d565b5b5f61149584828501611390565b91505092915050565b6114a781611371565b82525050565b5f6020820190506114c05f83018461149e565b92915050565b5f819050919050565b5f6114e96114e46114df846113a4565b6114c6565b6113a4565b9050919050565b5f6114fa826114cf565b9050919050565b5f61150b826114f0565b9050919050565b61151b81611501565b82525050565b61152a816113c3565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561156757808201518184015260208101905061154c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61158c82611530565b611596818561153a565b93506115a681856020860161154a565b6115af81611572565b840191505092915050565b5f60c0820190506115cd5f83018961149e565b6115da6020830188611512565b6115e76040830187611521565b6115f4606083018661149e565b6116016080830185611512565b81810360a08301526116138184611582565b9050979650505050505050565b7f4ec3a36f20706f646520736572207a65726f00000000000000000000000000005f82015250565b5f61165460128361153a565b915061165f82611620565b602082019050919050565b5f6020820190508181035f83015261168181611648565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116f957607f821691505b60208210810361170c5761170b6116b5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261176e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611733565b6117788683611733565b95508019841693508086168417925050509392505050565b5f6117aa6117a56117a084611371565b6114c6565b611371565b9050919050565b5f819050919050565b6117c383611790565b6117d76117cf826117b1565b84845461173f565b825550505050565b5f90565b6117eb6117df565b6117f68184846117ba565b505050565b5b818110156118195761180e5f826117e3565b6001810190506117fc565b5050565b601f82111561185e5761182f81611712565b61183884611724565b81016020851015611847578190505b61185b61185385611724565b8301826117fb565b50505b505050565b5f82821c905092915050565b5f61187e5f1984600802611863565b1980831691505092915050565b5f611896838361186f565b9150826002028217905092915050565b6118af82611530565b67ffffffffffffffff8111156118c8576118c7611688565b5b6118d282546116e2565b6118dd82828561181d565b5f60209050601f83116001811461190e575f84156118fc578287015190505b611906858261188b565b86555061196d565b601f19841661191c86611712565b5f5b828110156119435784890151825560018201915060208501945060208101905061191e565b86831015611960578489015161195c601f89168261186f565b8355505b6001600288020188555050505b505050505050565b5f6060820190506119885f830186611521565b6119956020830185611521565b6119a2604083018461149e565b949350505050565b5f8115159050919050565b6119be816119aa565b81146119c8575f80fd5b50565b5f815190506119d9816119b5565b92915050565b5f602082840312156119f4576119f361136d565b5b5f611a01848285016119cb565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611a4a5f830184611521565b92915050565b5f81519050611a5e8161137a565b92915050565b5f60208284031215611a7957611a7861136d565b5b5f611a8684828501611a50565b91505092915050565b7f4f666572746120646576652065737461722070656e64656e74652e00000000005f82015250565b5f611ac3601b8361153a565b9150611ace82611a8f565b602082019050919050565b5f6020820190508181035f830152611af081611ab7565b9050919050565b5f604082019050611b0a5f830185611521565b611b17602083018461149e565b9392505050565b5f81905092915050565b5f611b3282611530565b611b3c8185611b1e565b9350611b4c81856020860161154a565b80840191505092915050565b5f611b638284611b28565b91508190509291505056fea2646970667358221220712be36f37f181ac35c4bc896cd206ce11d8e141132afef65163a8690a6a6e8864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA4 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A72EA6A GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8A72EA6A EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xC815729D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xE324869B EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xEF706ADF EQ PUSH2 0x19A JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x19B8F993 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x1F6BB8E0 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x73C2DC12 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP5 SUB PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E44494E4700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x408 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x59D SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C9 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x614 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x614 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6BC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x924 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x950 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x972 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x9E9 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E44494E4700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1322 JUMP JUMPDEST PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4143434550544544000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x80 ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB36 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP DUP3 PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xC0F JUMPI PUSH2 0xC0E PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xE6C SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE98 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEE3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEBA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEC6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF86 JUMPI PUSH2 0xF85 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x10BF SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10EB SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1136 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x110D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1136 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1119 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1184 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E44494E4700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x11C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BA SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43414E43454C4544000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST POP SWAP1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x132C DUP3 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x1335 DUP5 PUSH2 0x133E JUMP JUMPDEST EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1350 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13CD DUP3 PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DE DUP3 PUSH2 0x13C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1409 DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1434 DUP8 DUP3 DUP9 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1445 DUP8 DUP3 DUP9 ADD PUSH2 0x13FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1456 DUP8 DUP3 DUP9 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1467 DUP8 DUP3 DUP9 ADD PUSH2 0x13FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1495 DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14A7 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x149E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14E9 PUSH2 0x14E4 PUSH2 0x14DF DUP5 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14FA DUP3 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150B DUP3 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151B DUP2 PUSH2 0x1501 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x152A DUP2 PUSH2 0x13C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1567 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x158C DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1596 DUP2 DUP6 PUSH2 0x153A JUMP JUMPDEST SWAP4 POP PUSH2 0x15A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x154A JUMP JUMPDEST PUSH2 0x15AF DUP2 PUSH2 0x1572 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH0 DUP4 ADD DUP10 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x15DA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x15F4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x1601 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1512 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1613 DUP2 DUP5 PUSH2 0x1582 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4EC3A36F20706F646520736572207A65726F0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1654 PUSH1 0x12 DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x165F DUP3 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1681 DUP2 PUSH2 0x1648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x16B5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x176E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x1778 DUP7 DUP4 PUSH2 0x1733 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA PUSH2 0x17A5 PUSH2 0x17A0 DUP5 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C3 DUP4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0x17D7 PUSH2 0x17CF DUP3 PUSH2 0x17B1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x173F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x17F6 DUP2 DUP5 DUP5 PUSH2 0x17BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1819 JUMPI PUSH2 0x180E PUSH0 DUP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x185E JUMPI PUSH2 0x182F DUP2 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1838 DUP5 PUSH2 0x1724 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1847 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x185B PUSH2 0x1853 DUP6 PUSH2 0x1724 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x17FB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x187E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1863 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1896 DUP4 DUP4 PUSH2 0x186F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18AF DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x1688 JUMP JUMPDEST JUMPDEST PUSH2 0x18D2 DUP3 SLOAD PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x18DD DUP3 DUP3 DUP6 PUSH2 0x181D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x190E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x18FC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1906 DUP6 DUP3 PUSH2 0x188B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x196D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x191C DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1943 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x191E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1960 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x195C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x186F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1988 PUSH0 DUP4 ADD DUP7 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x1995 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x19A2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x149E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BE DUP2 PUSH2 0x19AA JUMP JUMPDEST DUP2 EQ PUSH2 0x19C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19D9 DUP2 PUSH2 0x19B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A01 DUP5 DUP3 DUP6 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4A PUSH0 DUP4 ADD DUP5 PUSH2 0x1521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A5E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A86 DUP5 DUP3 DUP6 ADD PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F666572746120646576652065737461722070656E64656E74652E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC3 PUSH1 0x1B DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACE DUP3 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF0 DUP2 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B0A PUSH0 DUP4 ADD DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x1B17 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x149E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B32 DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1B3C DUP2 DUP6 PUSH2 0x1B1E JUMP JUMPDEST SWAP4 POP PUSH2 0x1B4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x154A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 DUP3 DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x2BE36F37F181AC35C4BC896CD206CE11D8E1 COINBASE SGT 0x2A INVALID 0xF6 MLOAD PUSH4 0xA8690A6A PUSH15 0x8864736F6C63430008160033000000 ",
							"sourceMap": "22619:2427:0:-:0;;;22706:21;;;;;;;;;;22619:2427;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@acceptOffer_963": {
									"entryPoint": 2007,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOffTokenToBuy_1042": {
									"entryPoint": 1103,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOffTokenToSell_1020": {
									"entryPoint": 3358,
									"id": 1020,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cancelOffer_998": {
									"entryPoint": 3954,
									"id": 998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compare_1075": {
									"entryPoint": 4898,
									"id": 1075,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOffersLength_837": {
									"entryPoint": 1699,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@offers_823": {
									"entryPoint": 1710,
									"id": 823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@putOffer_885": {
									"entryPoint": 450,
									"id": 885,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@stringToByte_1057": {
									"entryPoint": 4926,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$242": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$242t_uint256t_contract$_IERC20_$242": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_contract$_IERC20_$242_t_address_t_uint256_t_contract$_IERC20_$242_t_string_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 5906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$242": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IERC20_$242_to_t_address": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 6283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$242": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15831:1",
										"nodeType": "YulBlock",
										"src": "0:15831:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "735:81:1",
													"nodeType": "YulBlock",
													"src": "735:81:1",
													"statements": [
														{
															"nativeSrc": "745:65:1",
															"nodeType": "YulAssignment",
															"src": "745:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:42:1",
																		"nodeType": "YulLiteral",
																		"src": "767:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:1"
																},
																"nativeSrc": "756:54:1",
																"nodeType": "YulFunctionCall",
																"src": "756:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "690:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:1",
														"nodeType": "YulTypedName",
														"src": "717:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:1",
														"nodeType": "YulTypedName",
														"src": "727:7:1",
														"type": ""
													}
												],
												"src": "690:126:1"
											},
											{
												"body": {
													"nativeSrc": "867:51:1",
													"nodeType": "YulBlock",
													"src": "867:51:1",
													"statements": [
														{
															"nativeSrc": "877:35:1",
															"nodeType": "YulAssignment",
															"src": "877:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "906:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "906:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "888:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "888:17:1"
																},
																"nativeSrc": "888:24:1",
																"nodeType": "YulFunctionCall",
																"src": "888:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "877:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "877:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "822:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "849:5:1",
														"nodeType": "YulTypedName",
														"src": "849:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "859:7:1",
														"nodeType": "YulTypedName",
														"src": "859:7:1",
														"type": ""
													}
												],
												"src": "822:96:1"
											},
											{
												"body": {
													"nativeSrc": "983:51:1",
													"nodeType": "YulBlock",
													"src": "983:51:1",
													"statements": [
														{
															"nativeSrc": "993:35:1",
															"nodeType": "YulAssignment",
															"src": "993:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1022:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1022:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1004:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1004:17:1"
																},
																"nativeSrc": "1004:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1004:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "993:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "993:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$242",
												"nativeSrc": "924:110:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "965:5:1",
														"nodeType": "YulTypedName",
														"src": "965:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "975:7:1",
														"nodeType": "YulTypedName",
														"src": "975:7:1",
														"type": ""
													}
												],
												"src": "924:110:1"
											},
											{
												"body": {
													"nativeSrc": "1097:93:1",
													"nodeType": "YulBlock",
													"src": "1097:93:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1168:16:1",
																"nodeType": "YulBlock",
																"src": "1168:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1177:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1177:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1180:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1180:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1170:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1170:6:1"
																			},
																			"nativeSrc": "1170:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1170:12:1"
																		},
																		"nativeSrc": "1170:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1170:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1120:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1120:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1159:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1159:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$242",
																					"nativeSrc": "1127:31:1",
																					"nodeType": "YulIdentifier",
																					"src": "1127:31:1"
																				},
																				"nativeSrc": "1127:38:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1127:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1117:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1117:2:1"
																		},
																		"nativeSrc": "1117:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:1"
																},
																"nativeSrc": "1110:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1110:57:1"
															},
															"nativeSrc": "1107:77:1",
															"nodeType": "YulIf",
															"src": "1107:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$242",
												"nativeSrc": "1040:150:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"src": "1040:150:1"
											},
											{
												"body": {
													"nativeSrc": "1262:101:1",
													"nodeType": "YulBlock",
													"src": "1262:101:1",
													"statements": [
														{
															"nativeSrc": "1272:29:1",
															"nodeType": "YulAssignment",
															"src": "1272:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1294:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1294:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1281:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1281:12:1"
																},
																"nativeSrc": "1281:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1281:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1272:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1351:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1351:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$242",
																	"nativeSrc": "1310:40:1",
																	"nodeType": "YulIdentifier",
																	"src": "1310:40:1"
																},
																"nativeSrc": "1310:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1310:47:1"
															},
															"nativeSrc": "1310:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1310:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$242",
												"nativeSrc": "1196:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1240:6:1",
														"nodeType": "YulTypedName",
														"src": "1240:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1256:5:1",
														"nodeType": "YulTypedName",
														"src": "1256:5:1",
														"type": ""
													}
												],
												"src": "1196:167:1"
											},
											{
												"body": {
													"nativeSrc": "1514:676:1",
													"nodeType": "YulBlock",
													"src": "1514:676:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1561:83:1",
																"nodeType": "YulBlock",
																"src": "1561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1563:77:1"
																			},
																			"nativeSrc": "1563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1563:79:1"
																		},
																		"nativeSrc": "1563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1544:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1531:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nativeSrc": "1531:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1556:3:1",
																		"nodeType": "YulLiteral",
																		"src": "1556:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:1"
																},
																"nativeSrc": "1527:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:33:1"
															},
															"nativeSrc": "1524:120:1",
															"nodeType": "YulIf",
															"src": "1524:120:1"
														},
														{
															"nativeSrc": "1654:117:1",
															"nodeType": "YulBlock",
															"src": "1654:117:1",
															"statements": [
																{
																	"nativeSrc": "1669:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1669:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1683:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1683:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1673:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1673:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1698:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1698:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1733:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1733:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1744:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1729:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1729:3:1"
																				},
																				"nativeSrc": "1729:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1753:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1708:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1708:20:1"
																		},
																		"nativeSrc": "1708:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1708:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1698:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1698:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1781:132:1",
															"nodeType": "YulBlock",
															"src": "1781:132:1",
															"statements": [
																{
																	"nativeSrc": "1796:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1796:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1810:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1810:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1800:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1800:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1826:77:1",
																	"nodeType": "YulAssignment",
																	"src": "1826:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1875:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1875:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1886:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1886:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1871:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1871:3:1"
																				},
																				"nativeSrc": "1871:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1871:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1895:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1895:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$242",
																			"nativeSrc": "1836:34:1",
																			"nodeType": "YulIdentifier",
																			"src": "1836:34:1"
																		},
																		"nativeSrc": "1836:67:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1836:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1826:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1826:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1923:118:1",
															"nodeType": "YulBlock",
															"src": "1923:118:1",
															"statements": [
																{
																	"nativeSrc": "1938:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1938:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1952:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1952:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1942:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1942:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1968:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1968:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2003:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2003:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2014:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2014:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1999:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1999:3:1"
																				},
																				"nativeSrc": "1999:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1999:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2023:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2023:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1978:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1978:20:1"
																		},
																		"nativeSrc": "1978:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1978:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1968:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1968:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2051:132:1",
															"nodeType": "YulBlock",
															"src": "2051:132:1",
															"statements": [
																{
																	"nativeSrc": "2066:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2066:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2080:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2080:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2070:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2070:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2096:77:1",
																	"nodeType": "YulAssignment",
																	"src": "2096:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2145:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2145:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2156:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2156:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2141:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2141:3:1"
																				},
																				"nativeSrc": "2141:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2141:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2165:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2165:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$242",
																			"nativeSrc": "2106:34:1",
																			"nodeType": "YulIdentifier",
																			"src": "2106:34:1"
																		},
																		"nativeSrc": "2106:67:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2106:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2096:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2096:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$242t_uint256t_contract$_IERC20_$242",
												"nativeSrc": "1369:821:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1460:9:1",
														"nodeType": "YulTypedName",
														"src": "1460:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1471:7:1",
														"nodeType": "YulTypedName",
														"src": "1471:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1483:6:1",
														"nodeType": "YulTypedName",
														"src": "1483:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1491:6:1",
														"nodeType": "YulTypedName",
														"src": "1491:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1499:6:1",
														"nodeType": "YulTypedName",
														"src": "1499:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1507:6:1",
														"nodeType": "YulTypedName",
														"src": "1507:6:1",
														"type": ""
													}
												],
												"src": "1369:821:1"
											},
											{
												"body": {
													"nativeSrc": "2262:263:1",
													"nodeType": "YulBlock",
													"src": "2262:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2308:83:1",
																"nodeType": "YulBlock",
																"src": "2308:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2310:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2310:77:1"
																			},
																			"nativeSrc": "2310:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2310:79:1"
																		},
																		"nativeSrc": "2310:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2310:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2283:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2279:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:1"
																		},
																		"nativeSrc": "2279:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2279:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2304:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2275:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:1"
																},
																"nativeSrc": "2275:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2275:32:1"
															},
															"nativeSrc": "2272:119:1",
															"nodeType": "YulIf",
															"src": "2272:119:1"
														},
														{
															"nativeSrc": "2401:117:1",
															"nodeType": "YulBlock",
															"src": "2401:117:1",
															"statements": [
																{
																	"nativeSrc": "2416:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2416:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2430:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2430:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2420:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2420:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2445:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2445:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2480:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2480:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2491:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2491:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2476:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2476:3:1"
																				},
																				"nativeSrc": "2476:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2476:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2500:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2500:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2455:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2455:20:1"
																		},
																		"nativeSrc": "2455:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2455:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2445:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2445:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2196:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:1",
														"nodeType": "YulTypedName",
														"src": "2232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2243:7:1",
														"nodeType": "YulTypedName",
														"src": "2243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2255:6:1",
														"nodeType": "YulTypedName",
														"src": "2255:6:1",
														"type": ""
													}
												],
												"src": "2196:329:1"
											},
											{
												"body": {
													"nativeSrc": "2596:53:1",
													"nodeType": "YulBlock",
													"src": "2596:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2613:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2613:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2636:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2636:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2618:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2618:17:1"
																		},
																		"nativeSrc": "2618:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:1"
																},
																"nativeSrc": "2606:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2606:37:1"
															},
															"nativeSrc": "2606:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2606:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2531:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2584:5:1",
														"nodeType": "YulTypedName",
														"src": "2584:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2591:3:1",
														"nodeType": "YulTypedName",
														"src": "2591:3:1",
														"type": ""
													}
												],
												"src": "2531:118:1"
											},
											{
												"body": {
													"nativeSrc": "2753:124:1",
													"nodeType": "YulBlock",
													"src": "2753:124:1",
													"statements": [
														{
															"nativeSrc": "2763:26:1",
															"nodeType": "YulAssignment",
															"src": "2763:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2775:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2775:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2786:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2771:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2771:3:1"
																},
																"nativeSrc": "2771:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2771:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2763:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2763:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2843:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2843:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2856:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2867:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2867:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:1"
																		},
																		"nativeSrc": "2852:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2799:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2799:43:1"
																},
																"nativeSrc": "2799:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2799:71:1"
															},
															"nativeSrc": "2799:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2799:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2655:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:1",
														"nodeType": "YulTypedName",
														"src": "2725:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2737:6:1",
														"nodeType": "YulTypedName",
														"src": "2737:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2748:4:1",
														"nodeType": "YulTypedName",
														"src": "2748:4:1",
														"type": ""
													}
												],
												"src": "2655:222:1"
											},
											{
												"body": {
													"nativeSrc": "2915:28:1",
													"nodeType": "YulBlock",
													"src": "2915:28:1",
													"statements": [
														{
															"nativeSrc": "2925:12:1",
															"nodeType": "YulAssignment",
															"src": "2925:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2932:5:1",
																"nodeType": "YulIdentifier",
																"src": "2932:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2925:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2925:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2883:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2901:5:1",
														"nodeType": "YulTypedName",
														"src": "2901:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2911:3:1",
														"nodeType": "YulTypedName",
														"src": "2911:3:1",
														"type": ""
													}
												],
												"src": "2883:60:1"
											},
											{
												"body": {
													"nativeSrc": "3009:82:1",
													"nodeType": "YulBlock",
													"src": "3009:82:1",
													"statements": [
														{
															"nativeSrc": "3019:66:1",
															"nodeType": "YulAssignment",
															"src": "3019:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3077:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3077:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3059:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3059:17:1"
																				},
																				"nativeSrc": "3059:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3059:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3050:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3050:8:1"
																		},
																		"nativeSrc": "3050:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3032:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3032:17:1"
																},
																"nativeSrc": "3032:53:1",
																"nodeType": "YulFunctionCall",
																"src": "3032:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3019:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3019:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2949:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2989:5:1",
														"nodeType": "YulTypedName",
														"src": "2989:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2999:9:1",
														"nodeType": "YulTypedName",
														"src": "2999:9:1",
														"type": ""
													}
												],
												"src": "2949:142:1"
											},
											{
												"body": {
													"nativeSrc": "3157:66:1",
													"nodeType": "YulBlock",
													"src": "3157:66:1",
													"statements": [
														{
															"nativeSrc": "3167:50:1",
															"nodeType": "YulAssignment",
															"src": "3167:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3211:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3211:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3180:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3180:30:1"
																},
																"nativeSrc": "3180:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3180:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3167:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3167:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3097:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3137:5:1",
														"nodeType": "YulTypedName",
														"src": "3137:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3147:9:1",
														"nodeType": "YulTypedName",
														"src": "3147:9:1",
														"type": ""
													}
												],
												"src": "3097:126:1"
											},
											{
												"body": {
													"nativeSrc": "3303:66:1",
													"nodeType": "YulBlock",
													"src": "3303:66:1",
													"statements": [
														{
															"nativeSrc": "3313:50:1",
															"nodeType": "YulAssignment",
															"src": "3313:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3357:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3357:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3326:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3326:30:1"
																},
																"nativeSrc": "3326:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3326:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3313:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3313:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$242_to_t_address",
												"nativeSrc": "3229:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3283:5:1",
														"nodeType": "YulTypedName",
														"src": "3283:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3293:9:1",
														"nodeType": "YulTypedName",
														"src": "3293:9:1",
														"type": ""
													}
												],
												"src": "3229:140:1"
											},
											{
												"body": {
													"nativeSrc": "3454:80:1",
													"nodeType": "YulBlock",
													"src": "3454:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3471:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3471:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3521:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3521:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$242_to_t_address",
																			"nativeSrc": "3476:44:1",
																			"nodeType": "YulIdentifier",
																			"src": "3476:44:1"
																		},
																		"nativeSrc": "3476:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3476:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3464:6:1"
																},
																"nativeSrc": "3464:64:1",
																"nodeType": "YulFunctionCall",
																"src": "3464:64:1"
															},
															"nativeSrc": "3464:64:1",
															"nodeType": "YulExpressionStatement",
															"src": "3464:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack",
												"nativeSrc": "3375:159:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3442:5:1",
														"nodeType": "YulTypedName",
														"src": "3442:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3449:3:1",
														"nodeType": "YulTypedName",
														"src": "3449:3:1",
														"type": ""
													}
												],
												"src": "3375:159:1"
											},
											{
												"body": {
													"nativeSrc": "3605:53:1",
													"nodeType": "YulBlock",
													"src": "3605:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3622:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3622:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3645:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3645:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3627:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3627:17:1"
																		},
																		"nativeSrc": "3627:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3627:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3615:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3615:6:1"
																},
																"nativeSrc": "3615:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3615:37:1"
															},
															"nativeSrc": "3615:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3615:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3540:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3593:5:1",
														"nodeType": "YulTypedName",
														"src": "3593:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3600:3:1",
														"nodeType": "YulTypedName",
														"src": "3600:3:1",
														"type": ""
													}
												],
												"src": "3540:118:1"
											},
											{
												"body": {
													"nativeSrc": "3723:40:1",
													"nodeType": "YulBlock",
													"src": "3723:40:1",
													"statements": [
														{
															"nativeSrc": "3734:22:1",
															"nodeType": "YulAssignment",
															"src": "3734:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3750:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3744:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3744:5:1"
																},
																"nativeSrc": "3744:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3744:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3734:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3664:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3706:5:1",
														"nodeType": "YulTypedName",
														"src": "3706:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3716:6:1",
														"nodeType": "YulTypedName",
														"src": "3716:6:1",
														"type": ""
													}
												],
												"src": "3664:99:1"
											},
											{
												"body": {
													"nativeSrc": "3865:73:1",
													"nodeType": "YulBlock",
													"src": "3865:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3882:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3882:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3887:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3887:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3875:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3875:6:1"
																},
																"nativeSrc": "3875:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3875:19:1"
															},
															"nativeSrc": "3875:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3875:19:1"
														},
														{
															"nativeSrc": "3903:29:1",
															"nodeType": "YulAssignment",
															"src": "3903:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3922:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3922:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3927:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3927:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:1"
																},
																"nativeSrc": "3918:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3918:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3903:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "3903:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3769:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3837:3:1",
														"nodeType": "YulTypedName",
														"src": "3837:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3842:6:1",
														"nodeType": "YulTypedName",
														"src": "3842:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3853:11:1",
														"nodeType": "YulTypedName",
														"src": "3853:11:1",
														"type": ""
													}
												],
												"src": "3769:169:1"
											},
											{
												"body": {
													"nativeSrc": "4006:184:1",
													"nodeType": "YulBlock",
													"src": "4006:184:1",
													"statements": [
														{
															"nativeSrc": "4016:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4016:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4025:1:1",
																"nodeType": "YulLiteral",
																"src": "4025:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4020:1:1",
																	"nodeType": "YulTypedName",
																	"src": "4020:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4085:63:1",
																"nodeType": "YulBlock",
																"src": "4085:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "4110:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4110:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4115:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4115:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4106:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4106:3:1"
																					},
																					"nativeSrc": "4106:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4106:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4129:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4129:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4134:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4134:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4125:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4125:3:1"
																							},
																							"nativeSrc": "4125:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4125:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4119:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4119:5:1"
																					},
																					"nativeSrc": "4119:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4119:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4099:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4099:6:1"
																			},
																			"nativeSrc": "4099:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4099:39:1"
																		},
																		"nativeSrc": "4099:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4099:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4046:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4046:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4049:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4049:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4043:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4043:2:1"
																},
																"nativeSrc": "4043:13:1",
																"nodeType": "YulFunctionCall",
																"src": "4043:13:1"
															},
															"nativeSrc": "4035:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4057:19:1",
																"nodeType": "YulBlock",
																"src": "4057:19:1",
																"statements": [
																	{
																		"nativeSrc": "4059:15:1",
																		"nodeType": "YulAssignment",
																		"src": "4059:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4068:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "4068:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4071:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4071:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4064:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4064:3:1"
																			},
																			"nativeSrc": "4064:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4064:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4059:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4059:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4039:3:1",
																"nodeType": "YulBlock",
																"src": "4039:3:1",
																"statements": []
															},
															"src": "4035:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4168:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4168:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4173:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4173:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4164:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:1"
																		},
																		"nativeSrc": "4164:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4164:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4182:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4182:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4157:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:1"
																},
																"nativeSrc": "4157:27:1",
																"nodeType": "YulFunctionCall",
																"src": "4157:27:1"
															},
															"nativeSrc": "4157:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "4157:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3944:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3988:3:1",
														"nodeType": "YulTypedName",
														"src": "3988:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "3993:3:1",
														"nodeType": "YulTypedName",
														"src": "3993:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3998:6:1",
														"nodeType": "YulTypedName",
														"src": "3998:6:1",
														"type": ""
													}
												],
												"src": "3944:246:1"
											},
											{
												"body": {
													"nativeSrc": "4244:54:1",
													"nodeType": "YulBlock",
													"src": "4244:54:1",
													"statements": [
														{
															"nativeSrc": "4254:38:1",
															"nodeType": "YulAssignment",
															"src": "4254:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4272:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4272:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4279:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4279:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4268:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:1"
																		},
																		"nativeSrc": "4268:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4268:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4288:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4288:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4284:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:1"
																		},
																		"nativeSrc": "4284:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4284:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4264:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4264:3:1"
																},
																"nativeSrc": "4264:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4264:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4254:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4196:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4227:5:1",
														"nodeType": "YulTypedName",
														"src": "4227:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4237:6:1",
														"nodeType": "YulTypedName",
														"src": "4237:6:1",
														"type": ""
													}
												],
												"src": "4196:102:1"
											},
											{
												"body": {
													"nativeSrc": "4396:285:1",
													"nodeType": "YulBlock",
													"src": "4396:285:1",
													"statements": [
														{
															"nativeSrc": "4406:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4406:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4453:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4453:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4420:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "4420:32:1"
																},
																"nativeSrc": "4420:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4420:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4410:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4410:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4468:78:1",
															"nodeType": "YulAssignment",
															"src": "4468:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4534:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4534:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4539:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4539:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4475:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "4475:58:1"
																},
																"nativeSrc": "4475:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4475:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4594:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4594:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4601:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4601:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4590:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4590:3:1"
																		},
																		"nativeSrc": "4590:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4590:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4608:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4613:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4555:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "4555:34:1"
																},
																"nativeSrc": "4555:65:1",
																"nodeType": "YulFunctionCall",
																"src": "4555:65:1"
															},
															"nativeSrc": "4555:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "4555:65:1"
														},
														{
															"nativeSrc": "4629:46:1",
															"nodeType": "YulAssignment",
															"src": "4629:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4640:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4640:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4667:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4645:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "4645:21:1"
																		},
																		"nativeSrc": "4645:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4645:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4636:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:1"
																},
																"nativeSrc": "4636:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4636:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4629:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4629:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4304:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4377:5:1",
														"nodeType": "YulTypedName",
														"src": "4377:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4384:3:1",
														"nodeType": "YulTypedName",
														"src": "4384:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4392:3:1",
														"nodeType": "YulTypedName",
														"src": "4392:3:1",
														"type": ""
													}
												],
												"src": "4304:377:1"
											},
											{
												"body": {
													"nativeSrc": "4973:636:1",
													"nodeType": "YulBlock",
													"src": "4973:636:1",
													"statements": [
														{
															"nativeSrc": "4983:27:1",
															"nodeType": "YulAssignment",
															"src": "4983:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4995:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4995:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5006:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5006:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4991:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4991:3:1"
																},
																"nativeSrc": "4991:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4991:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4983:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4983:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5064:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5064:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5077:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5088:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5088:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:1"
																		},
																		"nativeSrc": "5073:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5020:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5020:43:1"
																},
																"nativeSrc": "5020:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5020:71:1"
															},
															"nativeSrc": "5020:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5020:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5159:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5159:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:1"
																		},
																		"nativeSrc": "5168:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack",
																	"nativeSrc": "5101:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "5101:57:1"
																},
																"nativeSrc": "5101:86:1",
																"nodeType": "YulFunctionCall",
																"src": "5101:86:1"
															},
															"nativeSrc": "5101:86:1",
															"nodeType": "YulExpressionStatement",
															"src": "5101:86:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5241:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5241:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5254:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5254:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5265:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5265:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5250:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:1"
																		},
																		"nativeSrc": "5250:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5250:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5197:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5197:43:1"
																},
																"nativeSrc": "5197:72:1",
																"nodeType": "YulFunctionCall",
																"src": "5197:72:1"
															},
															"nativeSrc": "5197:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "5197:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5323:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5336:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5336:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5347:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5347:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5332:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5332:3:1"
																		},
																		"nativeSrc": "5332:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5279:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5279:43:1"
																},
																"nativeSrc": "5279:72:1",
																"nodeType": "YulFunctionCall",
																"src": "5279:72:1"
															},
															"nativeSrc": "5279:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "5279:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5419:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5419:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5432:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5432:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5443:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5443:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5428:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:1"
																		},
																		"nativeSrc": "5428:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5428:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack",
																	"nativeSrc": "5361:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "5361:57:1"
																},
																"nativeSrc": "5361:87:1",
																"nodeType": "YulFunctionCall",
																"src": "5361:87:1"
															},
															"nativeSrc": "5361:87:1",
															"nodeType": "YulExpressionStatement",
															"src": "5361:87:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5469:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5469:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5480:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5480:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5465:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5465:3:1"
																		},
																		"nativeSrc": "5465:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5465:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5490:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5490:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5486:3:1"
																		},
																		"nativeSrc": "5486:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5486:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:1"
																},
																"nativeSrc": "5458:49:1",
																"nodeType": "YulFunctionCall",
																"src": "5458:49:1"
															},
															"nativeSrc": "5458:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "5458:49:1"
														},
														{
															"nativeSrc": "5516:86:1",
															"nodeType": "YulAssignment",
															"src": "5516:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "5588:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5588:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5597:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5597:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5524:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "5524:63:1"
																},
																"nativeSrc": "5524:78:1",
																"nodeType": "YulFunctionCall",
																"src": "5524:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5516:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5516:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$242_t_address_t_uint256_t_contract$_IERC20_$242_t_string_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4687:922:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4905:9:1",
														"nodeType": "YulTypedName",
														"src": "4905:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4917:6:1",
														"nodeType": "YulTypedName",
														"src": "4917:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4925:6:1",
														"nodeType": "YulTypedName",
														"src": "4925:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4933:6:1",
														"nodeType": "YulTypedName",
														"src": "4933:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4941:6:1",
														"nodeType": "YulTypedName",
														"src": "4941:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4949:6:1",
														"nodeType": "YulTypedName",
														"src": "4949:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4957:6:1",
														"nodeType": "YulTypedName",
														"src": "4957:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4968:4:1",
														"nodeType": "YulTypedName",
														"src": "4968:4:1",
														"type": ""
													}
												],
												"src": "4687:922:1"
											},
											{
												"body": {
													"nativeSrc": "5721:108:1",
													"nodeType": "YulBlock",
													"src": "5721:108:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5751:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5751:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5739:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:1"
																		},
																		"nativeSrc": "5739:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5739:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5755:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5755:66:1",
																		"type": "",
																		"value": "0x4ec3a36f20706f646520736572207a65726f0000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5732:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5732:6:1"
																},
																"nativeSrc": "5732:90:1",
																"nodeType": "YulFunctionCall",
																"src": "5732:90:1"
															},
															"nativeSrc": "5732:90:1",
															"nodeType": "YulExpressionStatement",
															"src": "5732:90:1"
														}
													]
												},
												"name": "store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
												"nativeSrc": "5615:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5713:6:1",
														"nodeType": "YulTypedName",
														"src": "5713:6:1",
														"type": ""
													}
												],
												"src": "5615:214:1"
											},
											{
												"body": {
													"nativeSrc": "5981:220:1",
													"nodeType": "YulBlock",
													"src": "5981:220:1",
													"statements": [
														{
															"nativeSrc": "5991:74:1",
															"nodeType": "YulAssignment",
															"src": "5991:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6057:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6057:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6062:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6062:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5998:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "5998:58:1"
																},
																"nativeSrc": "5998:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5998:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5991:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6163:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
																	"nativeSrc": "6074:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "6074:88:1"
																},
																"nativeSrc": "6074:93:1",
																"nodeType": "YulFunctionCall",
																"src": "6074:93:1"
															},
															"nativeSrc": "6074:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "6074:93:1"
														},
														{
															"nativeSrc": "6176:19:1",
															"nodeType": "YulAssignment",
															"src": "6176:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6187:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6187:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6192:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6183:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:1"
																},
																"nativeSrc": "6183:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6183:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5835:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5969:3:1",
														"nodeType": "YulTypedName",
														"src": "5969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5977:3:1",
														"nodeType": "YulTypedName",
														"src": "5977:3:1",
														"type": ""
													}
												],
												"src": "5835:366:1"
											},
											{
												"body": {
													"nativeSrc": "6378:248:1",
													"nodeType": "YulBlock",
													"src": "6378:248:1",
													"statements": [
														{
															"nativeSrc": "6388:26:1",
															"nodeType": "YulAssignment",
															"src": "6388:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6400:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6400:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6411:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6396:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:1"
																},
																"nativeSrc": "6396:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6396:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6388:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6388:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6435:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6435:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6446:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6446:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6431:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:1"
																		},
																		"nativeSrc": "6431:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6431:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6454:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6454:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6460:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6460:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:1"
																		},
																		"nativeSrc": "6450:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:1"
																},
																"nativeSrc": "6424:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6424:47:1"
															},
															"nativeSrc": "6424:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6424:47:1"
														},
														{
															"nativeSrc": "6480:139:1",
															"nodeType": "YulAssignment",
															"src": "6480:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6614:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6614:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6488:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "6488:124:1"
																},
																"nativeSrc": "6488:131:1",
																"nodeType": "YulFunctionCall",
																"src": "6488:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6480:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6480:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6207:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6358:9:1",
														"nodeType": "YulTypedName",
														"src": "6358:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6373:4:1",
														"nodeType": "YulTypedName",
														"src": "6373:4:1",
														"type": ""
													}
												],
												"src": "6207:419:1"
											},
											{
												"body": {
													"nativeSrc": "6660:152:1",
													"nodeType": "YulBlock",
													"src": "6660:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6677:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6677:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6680:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6680:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:1"
																},
																"nativeSrc": "6670:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6670:88:1"
															},
															"nativeSrc": "6670:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6670:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6774:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6774:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6777:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6777:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6767:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6767:6:1"
																},
																"nativeSrc": "6767:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6767:15:1"
															},
															"nativeSrc": "6767:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6767:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6798:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6798:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6801:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6801:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6791:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6791:6:1"
																},
																"nativeSrc": "6791:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6791:15:1"
															},
															"nativeSrc": "6791:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6791:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6632:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6632:180:1"
											},
											{
												"body": {
													"nativeSrc": "6846:152:1",
													"nodeType": "YulBlock",
													"src": "6846:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6863:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6863:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6866:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6866:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6856:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:1"
																},
																"nativeSrc": "6856:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6856:88:1"
															},
															"nativeSrc": "6856:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6856:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6960:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6960:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6963:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6963:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6953:6:1"
																},
																"nativeSrc": "6953:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6953:15:1"
															},
															"nativeSrc": "6953:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6953:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6984:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6984:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6987:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6987:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6977:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6977:6:1"
																},
																"nativeSrc": "6977:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6977:15:1"
															},
															"nativeSrc": "6977:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6977:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6818:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6818:180:1"
											},
											{
												"body": {
													"nativeSrc": "7055:269:1",
													"nodeType": "YulBlock",
													"src": "7055:269:1",
													"statements": [
														{
															"nativeSrc": "7065:22:1",
															"nodeType": "YulAssignment",
															"src": "7065:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7079:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7079:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7085:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7085:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7075:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7075:3:1"
																},
																"nativeSrc": "7075:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7075:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:1"
																}
															]
														},
														{
															"nativeSrc": "7096:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7096:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7126:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7126:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7132:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7132:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7122:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:1"
																},
																"nativeSrc": "7122:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7122:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7100:18:1",
																	"nodeType": "YulTypedName",
																	"src": "7100:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7173:51:1",
																"nodeType": "YulBlock",
																"src": "7173:51:1",
																"statements": [
																	{
																		"nativeSrc": "7187:27:1",
																		"nodeType": "YulAssignment",
																		"src": "7187:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7201:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7201:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7209:4:1",
																					"nodeType": "YulLiteral",
																					"src": "7209:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7197:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7197:3:1"
																			},
																			"nativeSrc": "7197:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7197:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7187:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7187:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7153:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "7153:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7146:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7146:6:1"
																},
																"nativeSrc": "7146:26:1",
																"nodeType": "YulFunctionCall",
																"src": "7146:26:1"
															},
															"nativeSrc": "7143:81:1",
															"nodeType": "YulIf",
															"src": "7143:81:1"
														},
														{
															"body": {
																"nativeSrc": "7276:42:1",
																"nodeType": "YulBlock",
																"src": "7276:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7290:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7290:16:1"
																			},
																			"nativeSrc": "7290:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7290:18:1"
																		},
																		"nativeSrc": "7290:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7290:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7240:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "7240:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7263:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7263:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7271:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7271:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7260:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7260:2:1"
																		},
																		"nativeSrc": "7260:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7260:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7237:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7237:2:1"
																},
																"nativeSrc": "7237:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7237:38:1"
															},
															"nativeSrc": "7234:84:1",
															"nodeType": "YulIf",
															"src": "7234:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7004:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7039:4:1",
														"nodeType": "YulTypedName",
														"src": "7039:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7048:6:1",
														"nodeType": "YulTypedName",
														"src": "7048:6:1",
														"type": ""
													}
												],
												"src": "7004:320:1"
											},
											{
												"body": {
													"nativeSrc": "7384:87:1",
													"nodeType": "YulBlock",
													"src": "7384:87:1",
													"statements": [
														{
															"nativeSrc": "7394:11:1",
															"nodeType": "YulAssignment",
															"src": "7394:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "7402:3:1",
																"nodeType": "YulIdentifier",
																"src": "7402:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7394:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7394:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "7425:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7425:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7415:6:1"
																},
																"nativeSrc": "7415:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7415:14:1"
															},
															"nativeSrc": "7415:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "7415:14:1"
														},
														{
															"nativeSrc": "7438:26:1",
															"nodeType": "YulAssignment",
															"src": "7438:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7456:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7456:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7459:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7459:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "7446:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "7446:9:1"
																},
																"nativeSrc": "7446:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7446:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7438:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "7330:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7371:3:1",
														"nodeType": "YulTypedName",
														"src": "7371:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7379:4:1",
														"nodeType": "YulTypedName",
														"src": "7379:4:1",
														"type": ""
													}
												],
												"src": "7330:141:1"
											},
											{
												"body": {
													"nativeSrc": "7521:49:1",
													"nodeType": "YulBlock",
													"src": "7521:49:1",
													"statements": [
														{
															"nativeSrc": "7531:33:1",
															"nodeType": "YulAssignment",
															"src": "7531:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7549:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7549:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7556:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:1"
																		},
																		"nativeSrc": "7545:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7561:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7541:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7541:3:1"
																},
																"nativeSrc": "7541:23:1",
																"nodeType": "YulFunctionCall",
																"src": "7541:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "7477:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7504:5:1",
														"nodeType": "YulTypedName",
														"src": "7504:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7514:6:1",
														"nodeType": "YulTypedName",
														"src": "7514:6:1",
														"type": ""
													}
												],
												"src": "7477:93:1"
											},
											{
												"body": {
													"nativeSrc": "7629:54:1",
													"nodeType": "YulBlock",
													"src": "7629:54:1",
													"statements": [
														{
															"nativeSrc": "7639:37:1",
															"nodeType": "YulAssignment",
															"src": "7639:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7664:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7664:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7670:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7670:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "7660:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7660:3:1"
																},
																"nativeSrc": "7660:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7660:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7639:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7639:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "7576:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7604:4:1",
														"nodeType": "YulTypedName",
														"src": "7604:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7610:5:1",
														"nodeType": "YulTypedName",
														"src": "7610:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7620:8:1",
														"nodeType": "YulTypedName",
														"src": "7620:8:1",
														"type": ""
													}
												],
												"src": "7576:107:1"
											},
											{
												"body": {
													"nativeSrc": "7765:317:1",
													"nodeType": "YulBlock",
													"src": "7765:317:1",
													"statements": [
														{
															"nativeSrc": "7775:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7775:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "7796:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "7796:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7808:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7808:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7792:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7792:3:1"
																},
																"nativeSrc": "7792:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7792:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "7779:9:1",
																	"nodeType": "YulTypedName",
																	"src": "7779:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7819:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7819:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "7850:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7861:66:1",
																		"nodeType": "YulLiteral",
																		"src": "7861:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "7831:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7831:18:1"
																},
																"nativeSrc": "7831:97:1",
																"nodeType": "YulFunctionCall",
																"src": "7831:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7823:4:1",
																	"nodeType": "YulTypedName",
																	"src": "7823:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7937:51:1",
															"nodeType": "YulAssignment",
															"src": "7937:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "7968:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7968:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "7979:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7979:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "7949:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7949:18:1"
																},
																"nativeSrc": "7949:39:1",
																"nodeType": "YulFunctionCall",
																"src": "7949:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "7937:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7937:8:1"
																}
															]
														},
														{
															"nativeSrc": "7997:30:1",
															"nodeType": "YulAssignment",
															"src": "7997:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8010:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8010:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "8021:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8021:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8017:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8017:3:1"
																		},
																		"nativeSrc": "8017:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8006:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8006:3:1"
																},
																"nativeSrc": "8006:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8006:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7997:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7997:5:1"
																}
															]
														},
														{
															"nativeSrc": "8036:40:1",
															"nodeType": "YulAssignment",
															"src": "8036:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8049:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8049:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "8060:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "8060:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "8070:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8070:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8056:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8056:3:1"
																		},
																		"nativeSrc": "8056:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8056:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8046:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8046:2:1"
																},
																"nativeSrc": "8046:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8046:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8036:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8036:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "7689:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7726:5:1",
														"nodeType": "YulTypedName",
														"src": "7726:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "7733:10:1",
														"nodeType": "YulTypedName",
														"src": "7733:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "7745:8:1",
														"nodeType": "YulTypedName",
														"src": "7745:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7758:6:1",
														"nodeType": "YulTypedName",
														"src": "7758:6:1",
														"type": ""
													}
												],
												"src": "7689:393:1"
											},
											{
												"body": {
													"nativeSrc": "8148:82:1",
													"nodeType": "YulBlock",
													"src": "8148:82:1",
													"statements": [
														{
															"nativeSrc": "8158:66:1",
															"nodeType": "YulAssignment",
															"src": "8158:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8216:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8216:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "8198:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "8198:17:1"
																				},
																				"nativeSrc": "8198:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8198:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8189:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "8189:8:1"
																		},
																		"nativeSrc": "8189:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8189:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8171:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "8171:17:1"
																},
																"nativeSrc": "8171:53:1",
																"nodeType": "YulFunctionCall",
																"src": "8171:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8158:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "8158:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "8088:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8128:5:1",
														"nodeType": "YulTypedName",
														"src": "8128:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8138:9:1",
														"nodeType": "YulTypedName",
														"src": "8138:9:1",
														"type": ""
													}
												],
												"src": "8088:142:1"
											},
											{
												"body": {
													"nativeSrc": "8283:28:1",
													"nodeType": "YulBlock",
													"src": "8283:28:1",
													"statements": [
														{
															"nativeSrc": "8293:12:1",
															"nodeType": "YulAssignment",
															"src": "8293:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "8300:5:1",
																"nodeType": "YulIdentifier",
																"src": "8300:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8293:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "8236:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8269:5:1",
														"nodeType": "YulTypedName",
														"src": "8269:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8279:3:1",
														"nodeType": "YulTypedName",
														"src": "8279:3:1",
														"type": ""
													}
												],
												"src": "8236:75:1"
											},
											{
												"body": {
													"nativeSrc": "8393:193:1",
													"nodeType": "YulBlock",
													"src": "8393:193:1",
													"statements": [
														{
															"nativeSrc": "8403:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8403:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "8458:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "8458:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "8427:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "8427:30:1"
																},
																"nativeSrc": "8427:39:1",
																"nodeType": "YulFunctionCall",
																"src": "8427:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "8407:16:1",
																	"nodeType": "YulTypedName",
																	"src": "8407:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8482:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8482:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "8522:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8522:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "8516:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8516:5:1"
																				},
																				"nativeSrc": "8516:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8516:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "8529:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8529:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "8561:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "8561:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "8537:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "8537:23:1"
																				},
																				"nativeSrc": "8537:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8537:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "8488:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "8488:27:1"
																		},
																		"nativeSrc": "8488:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8488:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "8475:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8475:6:1"
																},
																"nativeSrc": "8475:105:1",
																"nodeType": "YulFunctionCall",
																"src": "8475:105:1"
															},
															"nativeSrc": "8475:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "8475:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "8317:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8370:4:1",
														"nodeType": "YulTypedName",
														"src": "8370:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "8376:6:1",
														"nodeType": "YulTypedName",
														"src": "8376:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "8384:7:1",
														"nodeType": "YulTypedName",
														"src": "8384:7:1",
														"type": ""
													}
												],
												"src": "8317:269:1"
											},
											{
												"body": {
													"nativeSrc": "8641:24:1",
													"nodeType": "YulBlock",
													"src": "8641:24:1",
													"statements": [
														{
															"nativeSrc": "8651:8:1",
															"nodeType": "YulAssignment",
															"src": "8651:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8658:1:1",
																"nodeType": "YulLiteral",
																"src": "8658:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8651:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8651:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "8592:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8637:3:1",
														"nodeType": "YulTypedName",
														"src": "8637:3:1",
														"type": ""
													}
												],
												"src": "8592:73:1"
											},
											{
												"body": {
													"nativeSrc": "8724:136:1",
													"nodeType": "YulBlock",
													"src": "8724:136:1",
													"statements": [
														{
															"nativeSrc": "8734:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8734:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "8748:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "8748:30:1"
																},
																"nativeSrc": "8748:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8748:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "8738:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8738:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8833:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8833:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "8839:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8839:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "8847:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8847:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "8789:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8789:43:1"
																},
																"nativeSrc": "8789:65:1",
																"nodeType": "YulFunctionCall",
																"src": "8789:65:1"
															},
															"nativeSrc": "8789:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "8789:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "8671:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8710:4:1",
														"nodeType": "YulTypedName",
														"src": "8710:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "8716:6:1",
														"nodeType": "YulTypedName",
														"src": "8716:6:1",
														"type": ""
													}
												],
												"src": "8671:189:1"
											},
											{
												"body": {
													"nativeSrc": "8916:136:1",
													"nodeType": "YulBlock",
													"src": "8916:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8983:63:1",
																"nodeType": "YulBlock",
																"src": "8983:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "9027:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "9027:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9034:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9034:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "8997:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "8997:29:1"
																			},
																			"nativeSrc": "8997:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:39:1"
																		},
																		"nativeSrc": "8997:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8997:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "8936:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8936:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8943:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8943:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8933:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8933:2:1"
																},
																"nativeSrc": "8933:14:1",
																"nodeType": "YulFunctionCall",
																"src": "8933:14:1"
															},
															"nativeSrc": "8926:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8948:26:1",
																"nodeType": "YulBlock",
																"src": "8948:26:1",
																"statements": [
																	{
																		"nativeSrc": "8950:22:1",
																		"nodeType": "YulAssignment",
																		"src": "8950:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "8963:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8963:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8970:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8970:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8959:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8959:3:1"
																			},
																			"nativeSrc": "8959:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8959:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "8950:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8950:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8930:2:1",
																"nodeType": "YulBlock",
																"src": "8930:2:1",
																"statements": []
															},
															"src": "8926:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "8866:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "8904:5:1",
														"nodeType": "YulTypedName",
														"src": "8904:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8911:3:1",
														"nodeType": "YulTypedName",
														"src": "8911:3:1",
														"type": ""
													}
												],
												"src": "8866:186:1"
											},
											{
												"body": {
													"nativeSrc": "9137:464:1",
													"nodeType": "YulBlock",
													"src": "9137:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9163:431:1",
																"nodeType": "YulBlock",
																"src": "9163:431:1",
																"statements": [
																	{
																		"nativeSrc": "9177:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9177:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "9225:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "9225:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "9193:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "9193:31:1"
																			},
																			"nativeSrc": "9193:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9193:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "9181:8:1",
																				"nodeType": "YulTypedName",
																				"src": "9181:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9244:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9244:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "9267:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "9267:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "9295:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "9295:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "9277:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "9277:17:1"
																					},
																					"nativeSrc": "9277:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9277:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9263:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9263:3:1"
																			},
																			"nativeSrc": "9263:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9263:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "9248:11:1",
																				"nodeType": "YulTypedName",
																				"src": "9248:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9464:27:1",
																			"nodeType": "YulBlock",
																			"src": "9464:27:1",
																			"statements": [
																				{
																					"nativeSrc": "9466:23:1",
																					"nodeType": "YulAssignment",
																					"src": "9466:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "9481:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "9481:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "9466:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "9466:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "9448:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "9448:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9460:2:1",
																					"nodeType": "YulLiteral",
																					"src": "9460:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "9445:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "9445:2:1"
																			},
																			"nativeSrc": "9445:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9445:18:1"
																		},
																		"nativeSrc": "9442:49:1",
																		"nodeType": "YulIf",
																		"src": "9442:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "9533:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "9533:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "9550:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "9550:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "9578:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "9578:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "9560:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "9560:17:1"
																							},
																							"nativeSrc": "9560:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "9560:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9546:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9546:3:1"
																					},
																					"nativeSrc": "9546:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9546:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "9504:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "9504:28:1"
																			},
																			"nativeSrc": "9504:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9504:80:1"
																		},
																		"nativeSrc": "9504:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9504:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "9154:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9154:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9159:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9159:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9151:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9151:2:1"
																},
																"nativeSrc": "9151:11:1",
																"nodeType": "YulFunctionCall",
																"src": "9151:11:1"
															},
															"nativeSrc": "9148:446:1",
															"nodeType": "YulIf",
															"src": "9148:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "9058:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "9113:5:1",
														"nodeType": "YulTypedName",
														"src": "9113:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9120:3:1",
														"nodeType": "YulTypedName",
														"src": "9120:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "9125:10:1",
														"nodeType": "YulTypedName",
														"src": "9125:10:1",
														"type": ""
													}
												],
												"src": "9058:543:1"
											},
											{
												"body": {
													"nativeSrc": "9670:54:1",
													"nodeType": "YulBlock",
													"src": "9670:54:1",
													"statements": [
														{
															"nativeSrc": "9680:37:1",
															"nodeType": "YulAssignment",
															"src": "9680:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "9705:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9705:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9711:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9711:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9701:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9701:3:1"
																},
																"nativeSrc": "9701:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9701:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9680:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9680:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "9607:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "9645:4:1",
														"nodeType": "YulTypedName",
														"src": "9645:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "9651:5:1",
														"nodeType": "YulTypedName",
														"src": "9651:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9661:8:1",
														"nodeType": "YulTypedName",
														"src": "9661:8:1",
														"type": ""
													}
												],
												"src": "9607:117:1"
											},
											{
												"body": {
													"nativeSrc": "9781:118:1",
													"nodeType": "YulBlock",
													"src": "9781:118:1",
													"statements": [
														{
															"nativeSrc": "9791:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9791:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9840:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9840:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "9843:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9843:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9836:3:1"
																				},
																				"nativeSrc": "9836:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9836:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "9855:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9855:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "9851:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9851:3:1"
																				},
																				"nativeSrc": "9851:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9851:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "9807:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "9807:28:1"
																		},
																		"nativeSrc": "9807:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9807:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "9803:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9803:3:1"
																},
																"nativeSrc": "9803:56:1",
																"nodeType": "YulFunctionCall",
																"src": "9803:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "9795:4:1",
																	"nodeType": "YulTypedName",
																	"src": "9795:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9868:25:1",
															"nodeType": "YulAssignment",
															"src": "9868:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9882:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9882:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "9888:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9888:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9878:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9878:3:1"
																},
																"nativeSrc": "9878:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9878:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9868:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9868:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "9730:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9758:4:1",
														"nodeType": "YulTypedName",
														"src": "9758:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "9764:5:1",
														"nodeType": "YulTypedName",
														"src": "9764:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9774:6:1",
														"nodeType": "YulTypedName",
														"src": "9774:6:1",
														"type": ""
													}
												],
												"src": "9730:169:1"
											},
											{
												"body": {
													"nativeSrc": "9985:214:1",
													"nodeType": "YulBlock",
													"src": "9985:214:1",
													"statements": [
														{
															"nativeSrc": "10118:37:1",
															"nodeType": "YulAssignment",
															"src": "10118:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10145:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10145:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "10151:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10151:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "10126:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "10126:18:1"
																},
																"nativeSrc": "10126:29:1",
																"nodeType": "YulFunctionCall",
																"src": "10126:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10118:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10118:4:1"
																}
															]
														},
														{
															"nativeSrc": "10164:29:1",
															"nodeType": "YulAssignment",
															"src": "10164:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10175:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10175:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10185:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10185:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "10188:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10188:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10181:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10181:3:1"
																		},
																		"nativeSrc": "10181:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10181:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10172:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10172:2:1"
																},
																"nativeSrc": "10172:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10172:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "10164:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10164:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "9904:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9966:4:1",
														"nodeType": "YulTypedName",
														"src": "9966:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "9972:3:1",
														"nodeType": "YulTypedName",
														"src": "9972:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "9980:4:1",
														"nodeType": "YulTypedName",
														"src": "9980:4:1",
														"type": ""
													}
												],
												"src": "9904:295:1"
											},
											{
												"body": {
													"nativeSrc": "10296:1303:1",
													"nodeType": "YulBlock",
													"src": "10296:1303:1",
													"statements": [
														{
															"nativeSrc": "10307:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10307:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10354:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10354:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10321:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "10321:32:1"
																},
																"nativeSrc": "10321:37:1",
																"nodeType": "YulFunctionCall",
																"src": "10321:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "10311:6:1",
																	"nodeType": "YulTypedName",
																	"src": "10311:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10443:22:1",
																"nodeType": "YulBlock",
																"src": "10443:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10445:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10445:16:1"
																			},
																			"nativeSrc": "10445:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10445:18:1"
																		},
																		"nativeSrc": "10445:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10445:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10415:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10415:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10423:18:1",
																		"nodeType": "YulLiteral",
																		"src": "10423:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10412:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10412:2:1"
																},
																"nativeSrc": "10412:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10412:30:1"
															},
															"nativeSrc": "10409:56:1",
															"nodeType": "YulIf",
															"src": "10409:56:1"
														},
														{
															"nativeSrc": "10475:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10475:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "10521:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10521:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "10515:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "10515:5:1"
																		},
																		"nativeSrc": "10515:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10515:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "10489:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "10489:25:1"
																},
																"nativeSrc": "10489:38:1",
																"nodeType": "YulFunctionCall",
																"src": "10489:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "10479:6:1",
																	"nodeType": "YulTypedName",
																	"src": "10479:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10620:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10620:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "10626:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10626:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "10634:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10634:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "10574:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "10574:45:1"
																},
																"nativeSrc": "10574:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10574:67:1"
															},
															"nativeSrc": "10574:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "10574:67:1"
														},
														{
															"nativeSrc": "10651:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10651:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "10668:1:1",
																"nodeType": "YulLiteral",
																"src": "10668:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "10655:9:1",
																	"nodeType": "YulTypedName",
																	"src": "10655:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10679:17:1",
															"nodeType": "YulAssignment",
															"src": "10679:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "10692:4:1",
																"nodeType": "YulLiteral",
																"src": "10692:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "10679:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "10679:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10743:611:1",
																		"nodeType": "YulBlock",
																		"src": "10743:611:1",
																		"statements": [
																			{
																				"nativeSrc": "10757:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10757:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "10776:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "10776:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "10788:4:1",
																									"nodeType": "YulLiteral",
																									"src": "10788:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "10784:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "10784:3:1"
																							},
																							"nativeSrc": "10784:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "10784:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10772:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "10772:3:1"
																					},
																					"nativeSrc": "10772:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10772:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "10761:7:1",
																						"nodeType": "YulTypedName",
																						"src": "10761:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10808:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10808:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "10854:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "10854:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "10822:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "10822:31:1"
																					},
																					"nativeSrc": "10822:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10822:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "10812:6:1",
																						"nodeType": "YulTypedName",
																						"src": "10812:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10872:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10872:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10881:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10881:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10876:1:1",
																						"nodeType": "YulTypedName",
																						"src": "10876:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10940:163:1",
																					"nodeType": "YulBlock",
																					"src": "10940:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "10965:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "10965:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "10983:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "10983:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "10988:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "10988:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "10979:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "10979:3:1"
																												},
																												"nativeSrc": "10979:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "10979:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "10973:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "10973:5:1"
																										},
																										"nativeSrc": "10973:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "10973:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "10958:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "10958:6:1"
																								},
																								"nativeSrc": "10958:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "10958:42:1"
																							},
																							"nativeSrc": "10958:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "10958:42:1"
																						},
																						{
																							"nativeSrc": "11017:24:1",
																							"nodeType": "YulAssignment",
																							"src": "11017:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11031:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "11031:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11039:1:1",
																										"nodeType": "YulLiteral",
																										"src": "11039:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11027:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "11027:3:1"
																								},
																								"nativeSrc": "11027:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "11027:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "11017:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "11017:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "11058:31:1",
																							"nodeType": "YulAssignment",
																							"src": "11058:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "11075:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "11075:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11086:2:1",
																										"nodeType": "YulLiteral",
																										"src": "11086:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11071:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "11071:3:1"
																								},
																								"nativeSrc": "11071:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "11071:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "11058:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "11058:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10906:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "10906:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "10909:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "10909:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10903:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "10903:2:1"
																					},
																					"nativeSrc": "10903:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10903:14:1"
																				},
																				"nativeSrc": "10895:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10918:21:1",
																					"nodeType": "YulBlock",
																					"src": "10918:21:1",
																					"statements": [
																						{
																							"nativeSrc": "10920:17:1",
																							"nodeType": "YulAssignment",
																							"src": "10920:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10929:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "10929:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "10932:4:1",
																										"nodeType": "YulLiteral",
																										"src": "10932:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10925:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "10925:3:1"
																								},
																								"nativeSrc": "10925:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "10925:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10920:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "10920:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10899:3:1",
																					"nodeType": "YulBlock",
																					"src": "10899:3:1",
																					"statements": []
																				},
																				"src": "10895:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "11139:156:1",
																					"nodeType": "YulBlock",
																					"src": "11139:156:1",
																					"statements": [
																						{
																							"nativeSrc": "11157:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "11157:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11184:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "11184:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11189:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "11189:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11180:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "11180:3:1"
																										},
																										"nativeSrc": "11180:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "11180:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11174:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "11174:5:1"
																								},
																								"nativeSrc": "11174:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "11174:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "11161:9:1",
																									"nodeType": "YulTypedName",
																									"src": "11161:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11224:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "11224:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "11251:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "11251:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "11266:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "11266:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "11274:4:1",
																														"nodeType": "YulLiteral",
																														"src": "11274:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "11262:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "11262:3:1"
																												},
																												"nativeSrc": "11262:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "11262:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "11232:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "11232:18:1"
																										},
																										"nativeSrc": "11232:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "11232:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11217:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "11217:6:1"
																								},
																								"nativeSrc": "11217:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "11217:64:1"
																							},
																							"nativeSrc": "11217:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "11217:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11122:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "11122:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "11131:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "11131:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11119:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "11119:2:1"
																					},
																					"nativeSrc": "11119:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11119:19:1"
																				},
																				"nativeSrc": "11116:179:1",
																				"nodeType": "YulIf",
																				"src": "11116:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11315:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "11315:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "11329:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "11329:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "11337:1:1",
																											"nodeType": "YulLiteral",
																											"src": "11337:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "11325:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "11325:3:1"
																									},
																									"nativeSrc": "11325:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "11325:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11341:1:1",
																									"nodeType": "YulLiteral",
																									"src": "11341:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11321:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "11321:3:1"
																							},
																							"nativeSrc": "11321:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "11321:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11308:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11308:6:1"
																					},
																					"nativeSrc": "11308:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11308:36:1"
																				},
																				"nativeSrc": "11308:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "11308:36:1"
																			}
																		]
																	},
																	"nativeSrc": "10736:618:1",
																	"nodeType": "YulCase",
																	"src": "10736:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10741:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10741:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11371:222:1",
																		"nodeType": "YulBlock",
																		"src": "11371:222:1",
																		"statements": [
																			{
																				"nativeSrc": "11385:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11385:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11398:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11398:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "11389:5:1",
																						"nodeType": "YulTypedName",
																						"src": "11389:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11422:67:1",
																					"nodeType": "YulBlock",
																					"src": "11422:67:1",
																					"statements": [
																						{
																							"nativeSrc": "11440:35:1",
																							"nodeType": "YulAssignment",
																							"src": "11440:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11459:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "11459:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11464:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "11464:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11455:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "11455:3:1"
																										},
																										"nativeSrc": "11455:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "11455:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11449:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "11449:5:1"
																								},
																								"nativeSrc": "11449:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "11449:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "11440:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "11440:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "11415:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11415:6:1"
																				},
																				"nativeSrc": "11412:77:1",
																				"nodeType": "YulIf",
																				"src": "11412:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11509:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "11509:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "11568:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "11568:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "11575:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "11575:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "11515:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "11515:52:1"
																							},
																							"nativeSrc": "11515:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "11515:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11502:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11502:6:1"
																					},
																					"nativeSrc": "11502:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11502:81:1"
																				},
																				"nativeSrc": "11502:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "11502:81:1"
																			}
																		]
																	},
																	"nativeSrc": "11363:230:1",
																	"nodeType": "YulCase",
																	"src": "11363:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10716:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10716:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10724:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10724:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10713:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10713:2:1"
																},
																"nativeSrc": "10713:14:1",
																"nodeType": "YulFunctionCall",
																"src": "10713:14:1"
															},
															"nativeSrc": "10706:887:1",
															"nodeType": "YulSwitch",
															"src": "10706:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "10204:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10285:4:1",
														"nodeType": "YulTypedName",
														"src": "10285:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "10291:3:1",
														"nodeType": "YulTypedName",
														"src": "10291:3:1",
														"type": ""
													}
												],
												"src": "10204:1395:1"
											},
											{
												"body": {
													"nativeSrc": "11759:288:1",
													"nodeType": "YulBlock",
													"src": "11759:288:1",
													"statements": [
														{
															"nativeSrc": "11769:26:1",
															"nodeType": "YulAssignment",
															"src": "11769:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11781:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11781:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11792:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11792:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11777:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11777:3:1"
																},
																"nativeSrc": "11777:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11777:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11769:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11769:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11849:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11862:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11873:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11873:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11858:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11858:3:1"
																		},
																		"nativeSrc": "11858:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11858:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11805:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11805:43:1"
																},
																"nativeSrc": "11805:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11805:71:1"
															},
															"nativeSrc": "11805:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11805:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11930:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11930:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11943:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11943:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11954:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11954:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11939:3:1"
																		},
																		"nativeSrc": "11939:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11939:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11886:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11886:43:1"
																},
																"nativeSrc": "11886:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11886:72:1"
															},
															"nativeSrc": "11886:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11886:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12012:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12012:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12025:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12025:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12036:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12021:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12021:3:1"
																		},
																		"nativeSrc": "12021:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12021:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11968:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11968:43:1"
																},
																"nativeSrc": "11968:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11968:72:1"
															},
															"nativeSrc": "11968:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11968:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11605:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11715:9:1",
														"nodeType": "YulTypedName",
														"src": "11715:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11727:6:1",
														"nodeType": "YulTypedName",
														"src": "11727:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11735:6:1",
														"nodeType": "YulTypedName",
														"src": "11735:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11743:6:1",
														"nodeType": "YulTypedName",
														"src": "11743:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11754:4:1",
														"nodeType": "YulTypedName",
														"src": "11754:4:1",
														"type": ""
													}
												],
												"src": "11605:442:1"
											},
											{
												"body": {
													"nativeSrc": "12095:48:1",
													"nodeType": "YulBlock",
													"src": "12095:48:1",
													"statements": [
														{
															"nativeSrc": "12105:32:1",
															"nodeType": "YulAssignment",
															"src": "12105:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12130:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12130:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "12123:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12123:6:1"
																		},
																		"nativeSrc": "12123:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12123:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12116:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12116:6:1"
																},
																"nativeSrc": "12116:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12116:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12105:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "12105:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "12053:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12077:5:1",
														"nodeType": "YulTypedName",
														"src": "12077:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12087:7:1",
														"nodeType": "YulTypedName",
														"src": "12087:7:1",
														"type": ""
													}
												],
												"src": "12053:90:1"
											},
											{
												"body": {
													"nativeSrc": "12189:76:1",
													"nodeType": "YulBlock",
													"src": "12189:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12243:16:1",
																"nodeType": "YulBlock",
																"src": "12243:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12252:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12252:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12255:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12255:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12245:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12245:6:1"
																			},
																			"nativeSrc": "12245:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12245:12:1"
																		},
																		"nativeSrc": "12245:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12245:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12212:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12212:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12234:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "12234:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12219:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "12219:14:1"
																				},
																				"nativeSrc": "12219:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12219:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12209:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12209:2:1"
																		},
																		"nativeSrc": "12209:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12209:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12202:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12202:6:1"
																},
																"nativeSrc": "12202:40:1",
																"nodeType": "YulFunctionCall",
																"src": "12202:40:1"
															},
															"nativeSrc": "12199:60:1",
															"nodeType": "YulIf",
															"src": "12199:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12149:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12182:5:1",
														"nodeType": "YulTypedName",
														"src": "12182:5:1",
														"type": ""
													}
												],
												"src": "12149:116:1"
											},
											{
												"body": {
													"nativeSrc": "12331:77:1",
													"nodeType": "YulBlock",
													"src": "12331:77:1",
													"statements": [
														{
															"nativeSrc": "12341:22:1",
															"nodeType": "YulAssignment",
															"src": "12341:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12356:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12356:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12350:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12350:5:1"
																},
																"nativeSrc": "12350:13:1",
																"nodeType": "YulFunctionCall",
																"src": "12350:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12341:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12341:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12396:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12396:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12372:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "12372:23:1"
																},
																"nativeSrc": "12372:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12372:30:1"
															},
															"nativeSrc": "12372:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12372:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12271:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12309:6:1",
														"nodeType": "YulTypedName",
														"src": "12309:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12317:3:1",
														"nodeType": "YulTypedName",
														"src": "12317:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12325:5:1",
														"nodeType": "YulTypedName",
														"src": "12325:5:1",
														"type": ""
													}
												],
												"src": "12271:137:1"
											},
											{
												"body": {
													"nativeSrc": "12488:271:1",
													"nodeType": "YulBlock",
													"src": "12488:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12534:83:1",
																"nodeType": "YulBlock",
																"src": "12534:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12536:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12536:77:1"
																			},
																			"nativeSrc": "12536:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12536:79:1"
																		},
																		"nativeSrc": "12536:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12536:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12509:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12509:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12518:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12518:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12505:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12505:3:1"
																		},
																		"nativeSrc": "12505:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12505:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12530:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12530:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12501:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12501:3:1"
																},
																"nativeSrc": "12501:32:1",
																"nodeType": "YulFunctionCall",
																"src": "12501:32:1"
															},
															"nativeSrc": "12498:119:1",
															"nodeType": "YulIf",
															"src": "12498:119:1"
														},
														{
															"nativeSrc": "12627:125:1",
															"nodeType": "YulBlock",
															"src": "12627:125:1",
															"statements": [
																{
																	"nativeSrc": "12642:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12642:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12656:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12656:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12646:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12646:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12671:71:1",
																	"nodeType": "YulAssignment",
																	"src": "12671:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12714:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12714:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12725:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12725:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12710:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12710:3:1"
																				},
																				"nativeSrc": "12710:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12710:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12734:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12734:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12681:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "12681:28:1"
																		},
																		"nativeSrc": "12681:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12681:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12671:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12671:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12414:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12458:9:1",
														"nodeType": "YulTypedName",
														"src": "12458:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12469:7:1",
														"nodeType": "YulTypedName",
														"src": "12469:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12481:6:1",
														"nodeType": "YulTypedName",
														"src": "12481:6:1",
														"type": ""
													}
												],
												"src": "12414:345:1"
											},
											{
												"body": {
													"nativeSrc": "12793:152:1",
													"nodeType": "YulBlock",
													"src": "12793:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12810:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12810:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12813:77:1",
																		"nodeType": "YulLiteral",
																		"src": "12813:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12803:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12803:6:1"
																},
																"nativeSrc": "12803:88:1",
																"nodeType": "YulFunctionCall",
																"src": "12803:88:1"
															},
															"nativeSrc": "12803:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "12803:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12907:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12907:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12910:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12910:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12900:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:1"
																},
																"nativeSrc": "12900:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12900:15:1"
															},
															"nativeSrc": "12900:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12900:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12931:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12931:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12934:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12934:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12924:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12924:6:1"
																},
																"nativeSrc": "12924:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12924:15:1"
															},
															"nativeSrc": "12924:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12924:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12765:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "12765:180:1"
											},
											{
												"body": {
													"nativeSrc": "13049:124:1",
													"nodeType": "YulBlock",
													"src": "13049:124:1",
													"statements": [
														{
															"nativeSrc": "13059:26:1",
															"nodeType": "YulAssignment",
															"src": "13059:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13071:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13071:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13082:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13082:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13067:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13067:3:1"
																},
																"nativeSrc": "13067:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13067:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13059:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13059:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13139:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13139:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13152:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13152:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13163:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13163:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13148:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13148:3:1"
																		},
																		"nativeSrc": "13148:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13148:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13095:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13095:43:1"
																},
																"nativeSrc": "13095:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13095:71:1"
															},
															"nativeSrc": "13095:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13095:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12951:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13021:9:1",
														"nodeType": "YulTypedName",
														"src": "13021:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13033:6:1",
														"nodeType": "YulTypedName",
														"src": "13033:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13044:4:1",
														"nodeType": "YulTypedName",
														"src": "13044:4:1",
														"type": ""
													}
												],
												"src": "12951:222:1"
											},
											{
												"body": {
													"nativeSrc": "13242:80:1",
													"nodeType": "YulBlock",
													"src": "13242:80:1",
													"statements": [
														{
															"nativeSrc": "13252:22:1",
															"nodeType": "YulAssignment",
															"src": "13252:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13267:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13267:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13261:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13261:5:1"
																},
																"nativeSrc": "13261:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13261:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13252:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13252:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13310:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13310:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13283:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "13283:26:1"
																},
																"nativeSrc": "13283:33:1",
																"nodeType": "YulFunctionCall",
																"src": "13283:33:1"
															},
															"nativeSrc": "13283:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "13283:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13179:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13220:6:1",
														"nodeType": "YulTypedName",
														"src": "13220:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13228:3:1",
														"nodeType": "YulTypedName",
														"src": "13228:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13236:5:1",
														"nodeType": "YulTypedName",
														"src": "13236:5:1",
														"type": ""
													}
												],
												"src": "13179:143:1"
											},
											{
												"body": {
													"nativeSrc": "13405:274:1",
													"nodeType": "YulBlock",
													"src": "13405:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13451:83:1",
																"nodeType": "YulBlock",
																"src": "13451:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13453:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "13453:77:1"
																			},
																			"nativeSrc": "13453:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13453:79:1"
																		},
																		"nativeSrc": "13453:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13453:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13426:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13426:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13435:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13435:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13422:3:1"
																		},
																		"nativeSrc": "13422:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13422:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13447:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13447:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13418:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13418:3:1"
																},
																"nativeSrc": "13418:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13418:32:1"
															},
															"nativeSrc": "13415:119:1",
															"nodeType": "YulIf",
															"src": "13415:119:1"
														},
														{
															"nativeSrc": "13544:128:1",
															"nodeType": "YulBlock",
															"src": "13544:128:1",
															"statements": [
																{
																	"nativeSrc": "13559:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13559:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13573:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13563:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13563:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13588:74:1",
																	"nodeType": "YulAssignment",
																	"src": "13588:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13634:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13634:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13645:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13645:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13630:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13630:3:1"
																				},
																				"nativeSrc": "13630:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13630:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13654:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13654:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13598:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "13598:31:1"
																		},
																		"nativeSrc": "13598:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13598:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13588:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13588:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13328:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13375:9:1",
														"nodeType": "YulTypedName",
														"src": "13375:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13386:7:1",
														"nodeType": "YulTypedName",
														"src": "13386:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13398:6:1",
														"nodeType": "YulTypedName",
														"src": "13398:6:1",
														"type": ""
													}
												],
												"src": "13328:351:1"
											},
											{
												"body": {
													"nativeSrc": "13791:71:1",
													"nodeType": "YulBlock",
													"src": "13791:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13813:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13813:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13821:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13821:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13809:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13809:3:1"
																		},
																		"nativeSrc": "13809:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13809:14:1"
																	},
																	{
																		"hexValue": "4f666572746120646576652065737461722070656e64656e74652e",
																		"kind": "string",
																		"nativeSrc": "13825:29:1",
																		"nodeType": "YulLiteral",
																		"src": "13825:29:1",
																		"type": "",
																		"value": "Oferta deve estar pendente."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13802:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13802:6:1"
																},
																"nativeSrc": "13802:53:1",
																"nodeType": "YulFunctionCall",
																"src": "13802:53:1"
															},
															"nativeSrc": "13802:53:1",
															"nodeType": "YulExpressionStatement",
															"src": "13802:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f",
												"nativeSrc": "13685:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13783:6:1",
														"nodeType": "YulTypedName",
														"src": "13783:6:1",
														"type": ""
													}
												],
												"src": "13685:177:1"
											},
											{
												"body": {
													"nativeSrc": "14014:220:1",
													"nodeType": "YulBlock",
													"src": "14014:220:1",
													"statements": [
														{
															"nativeSrc": "14024:74:1",
															"nodeType": "YulAssignment",
															"src": "14024:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14090:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14090:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14095:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14095:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14031:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "14031:58:1"
																},
																"nativeSrc": "14031:67:1",
																"nodeType": "YulFunctionCall",
																"src": "14031:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14024:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14024:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14196:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14196:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f",
																	"nativeSrc": "14107:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "14107:88:1"
																},
																"nativeSrc": "14107:93:1",
																"nodeType": "YulFunctionCall",
																"src": "14107:93:1"
															},
															"nativeSrc": "14107:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "14107:93:1"
														},
														{
															"nativeSrc": "14209:19:1",
															"nodeType": "YulAssignment",
															"src": "14209:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14220:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14220:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14225:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14216:3:1"
																},
																"nativeSrc": "14216:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14216:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14209:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13868:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14002:3:1",
														"nodeType": "YulTypedName",
														"src": "14002:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14010:3:1",
														"nodeType": "YulTypedName",
														"src": "14010:3:1",
														"type": ""
													}
												],
												"src": "13868:366:1"
											},
											{
												"body": {
													"nativeSrc": "14411:248:1",
													"nodeType": "YulBlock",
													"src": "14411:248:1",
													"statements": [
														{
															"nativeSrc": "14421:26:1",
															"nodeType": "YulAssignment",
															"src": "14421:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14433:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14433:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14444:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14429:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:1"
																},
																"nativeSrc": "14429:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14429:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14421:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14421:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14468:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14468:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14479:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14479:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14464:3:1"
																		},
																		"nativeSrc": "14464:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14464:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14487:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "14487:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14493:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14493:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14483:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14483:3:1"
																		},
																		"nativeSrc": "14483:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14483:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14457:6:1"
																},
																"nativeSrc": "14457:47:1",
																"nodeType": "YulFunctionCall",
																"src": "14457:47:1"
															},
															"nativeSrc": "14457:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "14457:47:1"
														},
														{
															"nativeSrc": "14513:139:1",
															"nodeType": "YulAssignment",
															"src": "14513:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14647:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14647:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14521:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "14521:124:1"
																},
																"nativeSrc": "14521:131:1",
																"nodeType": "YulFunctionCall",
																"src": "14521:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14513:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14513:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14240:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14391:9:1",
														"nodeType": "YulTypedName",
														"src": "14391:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14406:4:1",
														"nodeType": "YulTypedName",
														"src": "14406:4:1",
														"type": ""
													}
												],
												"src": "14240:419:1"
											},
											{
												"body": {
													"nativeSrc": "14791:206:1",
													"nodeType": "YulBlock",
													"src": "14791:206:1",
													"statements": [
														{
															"nativeSrc": "14801:26:1",
															"nodeType": "YulAssignment",
															"src": "14801:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14813:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14813:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14824:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14824:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14809:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14809:3:1"
																},
																"nativeSrc": "14809:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14809:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14801:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14801:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14881:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14881:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14894:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14894:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14905:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14905:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14890:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14890:3:1"
																		},
																		"nativeSrc": "14890:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14890:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14837:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14837:43:1"
																},
																"nativeSrc": "14837:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14837:71:1"
															},
															"nativeSrc": "14837:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14837:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14962:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14962:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14975:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14975:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14986:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14986:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14971:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14971:3:1"
																		},
																		"nativeSrc": "14971:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14971:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14918:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14918:43:1"
																},
																"nativeSrc": "14918:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14918:72:1"
															},
															"nativeSrc": "14918:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14918:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14665:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14755:9:1",
														"nodeType": "YulTypedName",
														"src": "14755:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14767:6:1",
														"nodeType": "YulTypedName",
														"src": "14767:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14775:6:1",
														"nodeType": "YulTypedName",
														"src": "14775:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14786:4:1",
														"nodeType": "YulTypedName",
														"src": "14786:4:1",
														"type": ""
													}
												],
												"src": "14665:332:1"
											},
											{
												"body": {
													"nativeSrc": "15117:34:1",
													"nodeType": "YulBlock",
													"src": "15117:34:1",
													"statements": [
														{
															"nativeSrc": "15127:18:1",
															"nodeType": "YulAssignment",
															"src": "15127:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "15142:3:1",
																"nodeType": "YulIdentifier",
																"src": "15142:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15127:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "15127:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15003:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15089:3:1",
														"nodeType": "YulTypedName",
														"src": "15089:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15094:6:1",
														"nodeType": "YulTypedName",
														"src": "15094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15105:11:1",
														"nodeType": "YulTypedName",
														"src": "15105:11:1",
														"type": ""
													}
												],
												"src": "15003:148:1"
											},
											{
												"body": {
													"nativeSrc": "15267:280:1",
													"nodeType": "YulBlock",
													"src": "15267:280:1",
													"statements": [
														{
															"nativeSrc": "15277:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15277:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15324:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15324:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "15291:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "15291:32:1"
																},
																"nativeSrc": "15291:39:1",
																"nodeType": "YulFunctionCall",
																"src": "15291:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15281:6:1",
																	"nodeType": "YulTypedName",
																	"src": "15281:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15339:96:1",
															"nodeType": "YulAssignment",
															"src": "15339:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15423:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15423:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15428:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15428:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15346:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "15346:76:1"
																},
																"nativeSrc": "15346:89:1",
																"nodeType": "YulFunctionCall",
																"src": "15346:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15339:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15483:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15490:4:1",
																				"nodeType": "YulLiteral",
																				"src": "15490:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15479:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15479:3:1"
																		},
																		"nativeSrc": "15479:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15479:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15497:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15497:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15502:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15502:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15444:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "15444:34:1"
																},
																"nativeSrc": "15444:65:1",
																"nodeType": "YulFunctionCall",
																"src": "15444:65:1"
															},
															"nativeSrc": "15444:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "15444:65:1"
														},
														{
															"nativeSrc": "15518:23:1",
															"nodeType": "YulAssignment",
															"src": "15518:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15529:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15529:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15534:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15534:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15525:3:1"
																},
																"nativeSrc": "15525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "15525:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15518:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15518:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15157:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15248:5:1",
														"nodeType": "YulTypedName",
														"src": "15248:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15255:3:1",
														"nodeType": "YulTypedName",
														"src": "15255:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15263:3:1",
														"nodeType": "YulTypedName",
														"src": "15263:3:1",
														"type": ""
													}
												],
												"src": "15157:390:1"
											},
											{
												"body": {
													"nativeSrc": "15689:139:1",
													"nodeType": "YulBlock",
													"src": "15689:139:1",
													"statements": [
														{
															"nativeSrc": "15700:102:1",
															"nodeType": "YulAssignment",
															"src": "15700:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15789:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15789:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15798:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15798:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15707:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "15707:81:1"
																},
																"nativeSrc": "15707:95:1",
																"nodeType": "YulFunctionCall",
																"src": "15707:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15700:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15700:3:1"
																}
															]
														},
														{
															"nativeSrc": "15812:10:1",
															"nodeType": "YulAssignment",
															"src": "15812:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "15819:3:1",
																"nodeType": "YulIdentifier",
																"src": "15819:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15812:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15812:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15553:275:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15668:3:1",
														"nodeType": "YulTypedName",
														"src": "15668:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15674:6:1",
														"nodeType": "YulTypedName",
														"src": "15674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15685:3:1",
														"nodeType": "YulTypedName",
														"src": "15685:3:1",
														"type": ""
													}
												],
												"src": "15553:275:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$242(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$242(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$242(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$242(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$242(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$242t_uint256t_contract$_IERC20_$242(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$242(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IERC20_$242(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$242_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$242_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$242_t_address_t_uint256_t_contract$_IERC20_$242_t_string_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_contract$_IERC20_$242_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n    function store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e(memPtr) {\n\n        mstore(add(memPtr, 0), 0x4ec3a36f20706f646520736572207a65726f0000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Oferta deve estar pendente.\")\n\n    }\n\n    function abi_encode_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061006f575f3560e01c80638a72ea6a1161004d5780638a72ea6a14610101578063c815729d14610142578063e324869b1461015e578063ef706adf1461019a5761006f565b806319b8f993146100735780631f6bb8e01461009b57806373c2dc12146100d7575b5f80fd5b34801561007e575f80fd5b506100996004803603810190610094919061140f565b6101c2565b005b3480156100a6575f80fd5b506100c160048036038101906100bc9190611473565b61044f565b6040516100ce91906114ad565b60405180910390f35b3480156100e2575f80fd5b506100eb6106a3565b6040516100f891906114ad565b60405180910390f35b34801561010c575f80fd5b5061012760048036038101906101229190611473565b6106ae565b604051610139969594939291906115ba565b60405180910390f35b61015c60048036038101906101579190611473565b6107d7565b005b348015610169575f80fd5b50610184600480360381019061017f9190611473565b610d1e565b60405161019191906114ad565b60405180910390f35b3480156101a5575f80fd5b506101c060048036038101906101bb9190611473565b610f72565b005b5f8403610204576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fb9061166a565b60405180910390fd5b5f6040518060c001604052808681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016040518060400160405280600781526020017f50454e44494e4700000000000000000000000000000000000000000000000000815250815250908060018154018082558091505060019003905f5260205f2090600602015f909190919091505f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050190816103c891906118a6565b5050508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161040893929190611975565b6020604051808303815f875af1158015610424573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044891906119df565b5050505050565b5f805f838154811061046457610463611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805461059d906116e2565b80601f01602080910402602001604051908101604052809291908181526020018280546105c9906116e2565b80156106145780601f106105eb57610100808354040283529160200191610614565b820191905f5260205f20905b8154815290600101906020018083116105f757829003601f168201915b5050505050815250509050806080015173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161065c9190611a37565b602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b9190611a64565b915050919050565b5f8080549050905090565b5f81815481106106bc575f80fd5b905f5260205f2090600602015f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005018054610756906116e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906116e2565b80156107cd5780601f106107a4576101008083540402835291602001916107cd565b820191905f5260205f20905b8154815290600101906020018083116107b057829003601f168201915b5050505050905086565b5f8082815481106107eb576107ea611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054610924906116e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610950906116e2565b801561099b5780601f106109725761010080835404028352916020019161099b565b820191905f5260205f20905b81548152906001019060200180831161097e57829003601f168201915b50505050508152505090506109e98160a001516040518060400160405280600781526020017f50454e44494e4700000000000000000000000000000000000000000000000000815250611322565b610a28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1f90611ad9565b60405180910390fd5b6040518060400160405280600881526020017f41434345505445440000000000000000000000000000000000000000000000008152508160a001819052505f816020015190505f826080015190508073ffffffffffffffffffffffffffffffffffffffff166323b872dd333086606001516040518463ffffffff1660e01b8152600401610ab793929190611975565b6020604051808303815f875af1158015610ad3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af791906119df565b508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33855f01516040518363ffffffff1660e01b8152600401610b36929190611af7565b6020604051808303815f875af1158015610b52573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7691906119df565b508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb846040015185606001516040518363ffffffff1660e01b8152600401610bba929190611af7565b6020604051808303815f875af1158015610bd6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bfa91906119df565b50825f8581548110610c0f57610c0e611a0a565b5b905f5260205f2090600602015f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005019081610d1491906118a6565b5090505050505050565b5f805f8381548110610d3357610d32611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054610e6c906116e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e98906116e2565b8015610ee35780601f10610eba57610100808354040283529160200191610ee3565b820191905f5260205f20905b815481529060010190602001808311610ec657829003601f168201915b5050505050815250509050806020015173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f2b9190611a37565b602060405180830381865afa158015610f46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f6a9190611a64565b915050919050565b5f808281548110610f8657610f85611a0a565b5b905f5260205f2090600602016040518060c00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180546110bf906116e2565b80601f01602080910402602001604051908101604052809291908181526020018280546110eb906116e2565b80156111365780601f1061110d57610100808354040283529160200191611136565b820191905f5260205f20905b81548152906001019060200180831161111957829003601f168201915b50505050508152505090506111848160a001516040518060400160405280600781526020017f50454e44494e4700000000000000000000000000000000000000000000000000815250611322565b6111c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ba90611ad9565b60405180910390fd5b6040518060400160405280600881526020017f43414e43454c45440000000000000000000000000000000000000000000000008152508160a00181905250805f838154811061121557611214611a0a565b5b905f5260205f2090600602015f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501908161131a91906118a6565b509050505050565b5f61132c8261133e565b6113358461133e565b14905092915050565b5f816040516020016113509190611b58565b604051602081830303815290604052805190602001209050919050565b5f80fd5b5f819050919050565b61138381611371565b811461138d575f80fd5b50565b5f8135905061139e8161137a565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113cd826113a4565b9050919050565b5f6113de826113c3565b9050919050565b6113ee816113d4565b81146113f8575f80fd5b50565b5f81359050611409816113e5565b92915050565b5f805f80608085870312156114275761142661136d565b5b5f61143487828801611390565b9450506020611445878288016113fb565b935050604061145687828801611390565b9250506060611467878288016113fb565b91505092959194509250565b5f602082840312156114885761148761136d565b5b5f61149584828501611390565b91505092915050565b6114a781611371565b82525050565b5f6020820190506114c05f83018461149e565b92915050565b5f819050919050565b5f6114e96114e46114df846113a4565b6114c6565b6113a4565b9050919050565b5f6114fa826114cf565b9050919050565b5f61150b826114f0565b9050919050565b61151b81611501565b82525050565b61152a816113c3565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561156757808201518184015260208101905061154c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61158c82611530565b611596818561153a565b93506115a681856020860161154a565b6115af81611572565b840191505092915050565b5f60c0820190506115cd5f83018961149e565b6115da6020830188611512565b6115e76040830187611521565b6115f4606083018661149e565b6116016080830185611512565b81810360a08301526116138184611582565b9050979650505050505050565b7f4ec3a36f20706f646520736572207a65726f00000000000000000000000000005f82015250565b5f61165460128361153a565b915061165f82611620565b602082019050919050565b5f6020820190508181035f83015261168181611648565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116f957607f821691505b60208210810361170c5761170b6116b5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261176e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611733565b6117788683611733565b95508019841693508086168417925050509392505050565b5f6117aa6117a56117a084611371565b6114c6565b611371565b9050919050565b5f819050919050565b6117c383611790565b6117d76117cf826117b1565b84845461173f565b825550505050565b5f90565b6117eb6117df565b6117f68184846117ba565b505050565b5b818110156118195761180e5f826117e3565b6001810190506117fc565b5050565b601f82111561185e5761182f81611712565b61183884611724565b81016020851015611847578190505b61185b61185385611724565b8301826117fb565b50505b505050565b5f82821c905092915050565b5f61187e5f1984600802611863565b1980831691505092915050565b5f611896838361186f565b9150826002028217905092915050565b6118af82611530565b67ffffffffffffffff8111156118c8576118c7611688565b5b6118d282546116e2565b6118dd82828561181d565b5f60209050601f83116001811461190e575f84156118fc578287015190505b611906858261188b565b86555061196d565b601f19841661191c86611712565b5f5b828110156119435784890151825560018201915060208501945060208101905061191e565b86831015611960578489015161195c601f89168261186f565b8355505b6001600288020188555050505b505050505050565b5f6060820190506119885f830186611521565b6119956020830185611521565b6119a2604083018461149e565b949350505050565b5f8115159050919050565b6119be816119aa565b81146119c8575f80fd5b50565b5f815190506119d9816119b5565b92915050565b5f602082840312156119f4576119f361136d565b5b5f611a01848285016119cb565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611a4a5f830184611521565b92915050565b5f81519050611a5e8161137a565b92915050565b5f60208284031215611a7957611a7861136d565b5b5f611a8684828501611a50565b91505092915050565b7f4f666572746120646576652065737461722070656e64656e74652e00000000005f82015250565b5f611ac3601b8361153a565b9150611ace82611a8f565b602082019050919050565b5f6020820190508181035f830152611af081611ab7565b9050919050565b5f604082019050611b0a5f830185611521565b611b17602083018461149e565b9392505050565b5f81905092915050565b5f611b3282611530565b611b3c8185611b1e565b9350611b4c81856020860161154a565b80840191505092915050565b5f611b638284611b28565b91508190509291505056fea2646970667358221220712be36f37f181ac35c4bc896cd206ce11d8e141132afef65163a8690a6a6e8864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A72EA6A GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8A72EA6A EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xC815729D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xE324869B EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xEF706ADF EQ PUSH2 0x19A JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x19B8F993 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x1F6BB8E0 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x73C2DC12 EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0xF72 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP5 SUB PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP1 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E44494E4700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x408 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x59D SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C9 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x614 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5EB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x614 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6BC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP7 JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7EB JUMPI PUSH2 0x7EA PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x924 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x950 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x99B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x972 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x99B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x97E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x9E9 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E44494E4700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1322 JUMP JUMPDEST PUSH2 0xA28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1F SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4143434550544544000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x80 ADD MLOAD SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH0 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB36 SWAP3 SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB76 SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0x19DF JUMP JUMPDEST POP DUP3 PUSH0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xC0F JUMPI PUSH2 0xC0E PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0xD14 SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0xE6C SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE98 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEE3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEBA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEC6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2B SWAP2 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF86 JUMPI PUSH2 0xF85 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH2 0x10BF SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10EB SWAP1 PUSH2 0x16E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1136 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x110D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1136 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1119 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1184 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50454E44494E4700000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1322 JUMP JUMPDEST PUSH2 0x11C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BA SWAP1 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43414E43454C4544000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0xA0 ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1215 JUMPI PUSH2 0x1214 PUSH2 0x1A0A JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x18A6 JUMP JUMPDEST POP SWAP1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x132C DUP3 PUSH2 0x133E JUMP JUMPDEST PUSH2 0x1335 DUP5 PUSH2 0x133E JUMP JUMPDEST EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1350 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13CD DUP3 PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x13DE DUP3 PUSH2 0x13C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1409 DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1434 DUP8 DUP3 DUP9 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1445 DUP8 DUP3 DUP9 ADD PUSH2 0x13FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1456 DUP8 DUP3 DUP9 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1467 DUP8 DUP3 DUP9 ADD PUSH2 0x13FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1495 DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14A7 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C0 PUSH0 DUP4 ADD DUP5 PUSH2 0x149E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14E9 PUSH2 0x14E4 PUSH2 0x14DF DUP5 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x13A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14FA DUP3 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150B DUP3 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151B DUP2 PUSH2 0x1501 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x152A DUP2 PUSH2 0x13C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1567 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x154C JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x158C DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1596 DUP2 DUP6 PUSH2 0x153A JUMP JUMPDEST SWAP4 POP PUSH2 0x15A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x154A JUMP JUMPDEST PUSH2 0x15AF DUP2 PUSH2 0x1572 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x15CD PUSH0 DUP4 ADD DUP10 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x15DA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x15F4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x149E JUMP JUMPDEST PUSH2 0x1601 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1512 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1613 DUP2 DUP5 PUSH2 0x1582 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4EC3A36F20706F646520736572207A65726F0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1654 PUSH1 0x12 DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x165F DUP3 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1681 DUP2 PUSH2 0x1648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x16B5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x176E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x1778 DUP7 DUP4 PUSH2 0x1733 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA PUSH2 0x17A5 PUSH2 0x17A0 DUP5 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C3 DUP4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0x17D7 PUSH2 0x17CF DUP3 PUSH2 0x17B1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x173F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x17EB PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x17F6 DUP2 DUP5 DUP5 PUSH2 0x17BA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1819 JUMPI PUSH2 0x180E PUSH0 DUP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x17FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x185E JUMPI PUSH2 0x182F DUP2 PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1838 DUP5 PUSH2 0x1724 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1847 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x185B PUSH2 0x1853 DUP6 PUSH2 0x1724 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x17FB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x187E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1863 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1896 DUP4 DUP4 PUSH2 0x186F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18AF DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x1688 JUMP JUMPDEST JUMPDEST PUSH2 0x18D2 DUP3 SLOAD PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x18DD DUP3 DUP3 DUP6 PUSH2 0x181D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x190E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x18FC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1906 DUP6 DUP3 PUSH2 0x188B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x196D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x191C DUP7 PUSH2 0x1712 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1943 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x191E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1960 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x195C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x186F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1988 PUSH0 DUP4 ADD DUP7 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x1995 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x19A2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x149E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BE DUP2 PUSH2 0x19AA JUMP JUMPDEST DUP2 EQ PUSH2 0x19C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19D9 DUP2 PUSH2 0x19B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH2 0x19F3 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A01 DUP5 DUP3 DUP6 ADD PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4A PUSH0 DUP4 ADD DUP5 PUSH2 0x1521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A5E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x136D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A86 DUP5 DUP3 DUP6 ADD PUSH2 0x1A50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F666572746120646576652065737461722070656E64656E74652E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC3 PUSH1 0x1B DUP4 PUSH2 0x153A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ACE DUP3 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF0 DUP2 PUSH2 0x1AB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B0A PUSH0 DUP4 ADD DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x1B17 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x149E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B32 DUP3 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x1B3C DUP2 DUP6 PUSH2 0x1B1E JUMP JUMPDEST SWAP4 POP PUSH2 0x1B4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x154A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B63 DUP3 DUP5 PUSH2 0x1B28 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x2BE36F37F181AC35C4BC896CD206CE11D8E1 COINBASE SGT 0x2A INVALID 0xF6 MLOAD PUSH4 0xA8690A6A PUSH15 0x8864736F6C63430008160033000000 ",
							"sourceMap": "22619:2427:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22841:566;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24569:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22733:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22678:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;23413:713;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24386:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24132:248;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22841:566;22986:1;22971:12;:16;22963:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;23028:6;23040:235;;;;;;;;23074:12;23040:235;;;;23114:11;23040:235;;;;;;23148:10;23040:235;;;;;;23185:11;23040:235;;;;23223:10;23040:235;;;;;;;;;;;;;;;;;;;;;;;;;;23028:248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;23335:11;:24;;;23360:10;23380:4;23387:12;23335:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;22841:566;;;;:::o;24569:175::-;24632:4;24648:18;24669:6;24676:5;24669:13;;;;;;;;:::i;:::-;;;;;;;;;;;;24648:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24699:5;:16;;;:26;;;24726:10;24699:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24692:45;;;24569:175;;;:::o;22733:102::-;22792:4;22815:6;:13;;;;22808:20;;22733:102;:::o;22678:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23413:713::-;23482:18;23503:6;23510:5;23503:13;;;;;;;;:::i;:::-;;;;;;;;;;;;23482:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23534:32;23542:5;:12;;;23534:32;;;;;;;;;;;;;;;;;:7;:32::i;:::-;23526:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;23617:25;;;;;;;;;;;;;;;;;:5;:12;;:25;;;;23661:16;23680:5;:17;;;23661:36;;23707:15;23725:5;:16;;;23707:34;;23801:8;:21;;;23823:10;23843:4;23850:5;:17;;;23801:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23928:9;:18;;;23947:10;23959:5;:18;;;23928:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24037:8;:17;;;24055:5;:12;;;24069:5;:17;;;24037:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24114:5;24098:6;24105:5;24098:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;23472:654;;;23413:713;:::o;24386:177::-;24450:4;24466:18;24487:6;24494:5;24487:13;;;;;;;;:::i;:::-;;;;;;;;;;;;24466:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24517:5;:17;;;:27;;;24545:10;24517:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24510:46;;;24386:177;;;:::o;24132:248::-;24191:18;24212:6;24219:5;24212:13;;;;;;;;:::i;:::-;;;;;;;;;;;;24191:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24243:32;24251:5;:12;;;24243:32;;;;;;;;;;;;;;;;;:7;:32::i;:::-;24235:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;24317:25;;;;;;;;;;;;;;;;;:5;:12;;:25;;;;24368:5;24352:6;24359:5;24352:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;24181:199;24132:248;:::o;24886:153::-;24967:4;25013:19;25026:5;25013:12;:19::i;:::-;24990;25003:5;24990:12;:19::i;:::-;:42;24983:49;;24886:153;;;;:::o;24750:130::-;24815:7;24867:4;24850:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;24840:33;;;;;;24833:40;;24750:130;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:110::-;975:7;1004:24;1022:5;1004:24;:::i;:::-;993:35;;924:110;;;:::o;1040:150::-;1127:38;1159:5;1127:38;:::i;:::-;1120:5;1117:49;1107:77;;1180:1;1177;1170:12;1107:77;1040:150;:::o;1196:167::-;1256:5;1294:6;1281:20;1272:29;;1310:47;1351:5;1310:47;:::i;:::-;1196:167;;;;:::o;1369:821::-;1483:6;1491;1499;1507;1556:3;1544:9;1535:7;1531:23;1527:33;1524:120;;;1563:79;;:::i;:::-;1524:120;1683:1;1708:53;1753:7;1744:6;1733:9;1729:22;1708:53;:::i;:::-;1698:63;;1654:117;1810:2;1836:67;1895:7;1886:6;1875:9;1871:22;1836:67;:::i;:::-;1826:77;;1781:132;1952:2;1978:53;2023:7;2014:6;2003:9;1999:22;1978:53;:::i;:::-;1968:63;;1923:118;2080:2;2106:67;2165:7;2156:6;2145:9;2141:22;2106:67;:::i;:::-;2096:77;;2051:132;1369:821;;;;;;;:::o;2196:329::-;2255:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:119;;;2310:79;;:::i;:::-;2272:119;2430:1;2455:53;2500:7;2491:6;2480:9;2476:22;2455:53;:::i;:::-;2445:63;;2401:117;2196:329;;;;:::o;2531:118::-;2618:24;2636:5;2618:24;:::i;:::-;2613:3;2606:37;2531:118;;:::o;2655:222::-;2748:4;2786:2;2775:9;2771:18;2763:26;;2799:71;2867:1;2856:9;2852:17;2843:6;2799:71;:::i;:::-;2655:222;;;;:::o;2883:60::-;2911:3;2932:5;2925:12;;2883:60;;;:::o;2949:142::-;2999:9;3032:53;3050:34;3059:24;3077:5;3059:24;:::i;:::-;3050:34;:::i;:::-;3032:53;:::i;:::-;3019:66;;2949:142;;;:::o;3097:126::-;3147:9;3180:37;3211:5;3180:37;:::i;:::-;3167:50;;3097:126;;;:::o;3229:140::-;3293:9;3326:37;3357:5;3326:37;:::i;:::-;3313:50;;3229:140;;;:::o;3375:159::-;3476:51;3521:5;3476:51;:::i;:::-;3471:3;3464:64;3375:159;;:::o;3540:118::-;3627:24;3645:5;3627:24;:::i;:::-;3622:3;3615:37;3540:118;;:::o;3664:99::-;3716:6;3750:5;3744:12;3734:22;;3664:99;;;:::o;3769:169::-;3853:11;3887:6;3882:3;3875:19;3927:4;3922:3;3918:14;3903:29;;3769:169;;;;:::o;3944:246::-;4025:1;4035:113;4049:6;4046:1;4043:13;4035:113;;;4134:1;4129:3;4125:11;4119:18;4115:1;4110:3;4106:11;4099:39;4071:2;4068:1;4064:10;4059:15;;4035:113;;;4182:1;4173:6;4168:3;4164:16;4157:27;4006:184;3944:246;;;:::o;4196:102::-;4237:6;4288:2;4284:7;4279:2;4272:5;4268:14;4264:28;4254:38;;4196:102;;;:::o;4304:377::-;4392:3;4420:39;4453:5;4420:39;:::i;:::-;4475:71;4539:6;4534:3;4475:71;:::i;:::-;4468:78;;4555:65;4613:6;4608:3;4601:4;4594:5;4590:16;4555:65;:::i;:::-;4645:29;4667:6;4645:29;:::i;:::-;4640:3;4636:39;4629:46;;4396:285;4304:377;;;;:::o;4687:922::-;4968:4;5006:3;4995:9;4991:19;4983:27;;5020:71;5088:1;5077:9;5073:17;5064:6;5020:71;:::i;:::-;5101:86;5183:2;5172:9;5168:18;5159:6;5101:86;:::i;:::-;5197:72;5265:2;5254:9;5250:18;5241:6;5197:72;:::i;:::-;5279;5347:2;5336:9;5332:18;5323:6;5279:72;:::i;:::-;5361:87;5443:3;5432:9;5428:19;5419:6;5361:87;:::i;:::-;5496:9;5490:4;5486:20;5480:3;5469:9;5465:19;5458:49;5524:78;5597:4;5588:6;5524:78;:::i;:::-;5516:86;;4687:922;;;;;;;;;:::o;5615:214::-;5755:66;5751:1;5743:6;5739:14;5732:90;5615:214;:::o;5835:366::-;5977:3;5998:67;6062:2;6057:3;5998:67;:::i;:::-;5991:74;;6074:93;6163:3;6074:93;:::i;:::-;6192:2;6187:3;6183:12;6176:19;;5835:366;;;:::o;6207:419::-;6373:4;6411:2;6400:9;6396:18;6388:26;;6460:9;6454:4;6450:20;6446:1;6435:9;6431:17;6424:47;6488:131;6614:4;6488:131;:::i;:::-;6480:139;;6207:419;;;:::o;6632:180::-;6680:77;6677:1;6670:88;6777:4;6774:1;6767:15;6801:4;6798:1;6791:15;6818:180;6866:77;6863:1;6856:88;6963:4;6960:1;6953:15;6987:4;6984:1;6977:15;7004:320;7048:6;7085:1;7079:4;7075:12;7065:22;;7132:1;7126:4;7122:12;7153:18;7143:81;;7209:4;7201:6;7197:17;7187:27;;7143:81;7271:2;7263:6;7260:14;7240:18;7237:38;7234:84;;7290:18;;:::i;:::-;7234:84;7055:269;7004:320;;;:::o;7330:141::-;7379:4;7402:3;7394:11;;7425:3;7422:1;7415:14;7459:4;7456:1;7446:18;7438:26;;7330:141;;;:::o;7477:93::-;7514:6;7561:2;7556;7549:5;7545:14;7541:23;7531:33;;7477:93;;;:::o;7576:107::-;7620:8;7670:5;7664:4;7660:16;7639:37;;7576:107;;;;:::o;7689:393::-;7758:6;7808:1;7796:10;7792:18;7831:97;7861:66;7850:9;7831:97;:::i;:::-;7949:39;7979:8;7968:9;7949:39;:::i;:::-;7937:51;;8021:4;8017:9;8010:5;8006:21;7997:30;;8070:4;8060:8;8056:19;8049:5;8046:30;8036:40;;7765:317;;7689:393;;;;;:::o;8088:142::-;8138:9;8171:53;8189:34;8198:24;8216:5;8198:24;:::i;:::-;8189:34;:::i;:::-;8171:53;:::i;:::-;8158:66;;8088:142;;;:::o;8236:75::-;8279:3;8300:5;8293:12;;8236:75;;;:::o;8317:269::-;8427:39;8458:7;8427:39;:::i;:::-;8488:91;8537:41;8561:16;8537:41;:::i;:::-;8529:6;8522:4;8516:11;8488:91;:::i;:::-;8482:4;8475:105;8393:193;8317:269;;;:::o;8592:73::-;8637:3;8592:73;:::o;8671:189::-;8748:32;;:::i;:::-;8789:65;8847:6;8839;8833:4;8789:65;:::i;:::-;8724:136;8671:189;;:::o;8866:186::-;8926:120;8943:3;8936:5;8933:14;8926:120;;;8997:39;9034:1;9027:5;8997:39;:::i;:::-;8970:1;8963:5;8959:13;8950:22;;8926:120;;;8866:186;;:::o;9058:543::-;9159:2;9154:3;9151:11;9148:446;;;9193:38;9225:5;9193:38;:::i;:::-;9277:29;9295:10;9277:29;:::i;:::-;9267:8;9263:44;9460:2;9448:10;9445:18;9442:49;;;9481:8;9466:23;;9442:49;9504:80;9560:22;9578:3;9560:22;:::i;:::-;9550:8;9546:37;9533:11;9504:80;:::i;:::-;9163:431;;9148:446;9058:543;;;:::o;9607:117::-;9661:8;9711:5;9705:4;9701:16;9680:37;;9607:117;;;;:::o;9730:169::-;9774:6;9807:51;9855:1;9851:6;9843:5;9840:1;9836:13;9807:51;:::i;:::-;9803:56;9888:4;9882;9878:15;9868:25;;9781:118;9730:169;;;;:::o;9904:295::-;9980:4;10126:29;10151:3;10145:4;10126:29;:::i;:::-;10118:37;;10188:3;10185:1;10181:11;10175:4;10172:21;10164:29;;9904:295;;;;:::o;10204:1395::-;10321:37;10354:3;10321:37;:::i;:::-;10423:18;10415:6;10412:30;10409:56;;;10445:18;;:::i;:::-;10409:56;10489:38;10521:4;10515:11;10489:38;:::i;:::-;10574:67;10634:6;10626;10620:4;10574:67;:::i;:::-;10668:1;10692:4;10679:17;;10724:2;10716:6;10713:14;10741:1;10736:618;;;;11398:1;11415:6;11412:77;;;11464:9;11459:3;11455:19;11449:26;11440:35;;11412:77;11515:67;11575:6;11568:5;11515:67;:::i;:::-;11509:4;11502:81;11371:222;10706:887;;10736:618;10788:4;10784:9;10776:6;10772:22;10822:37;10854:4;10822:37;:::i;:::-;10881:1;10895:208;10909:7;10906:1;10903:14;10895:208;;;10988:9;10983:3;10979:19;10973:26;10965:6;10958:42;11039:1;11031:6;11027:14;11017:24;;11086:2;11075:9;11071:18;11058:31;;10932:4;10929:1;10925:12;10920:17;;10895:208;;;11131:6;11122:7;11119:19;11116:179;;;11189:9;11184:3;11180:19;11174:26;11232:48;11274:4;11266:6;11262:17;11251:9;11232:48;:::i;:::-;11224:6;11217:64;11139:156;11116:179;11341:1;11337;11329:6;11325:14;11321:22;11315:4;11308:36;10743:611;;;10706:887;;10296:1303;;;10204:1395;;:::o;11605:442::-;11754:4;11792:2;11781:9;11777:18;11769:26;;11805:71;11873:1;11862:9;11858:17;11849:6;11805:71;:::i;:::-;11886:72;11954:2;11943:9;11939:18;11930:6;11886:72;:::i;:::-;11968;12036:2;12025:9;12021:18;12012:6;11968:72;:::i;:::-;11605:442;;;;;;:::o;12053:90::-;12087:7;12130:5;12123:13;12116:21;12105:32;;12053:90;;;:::o;12149:116::-;12219:21;12234:5;12219:21;:::i;:::-;12212:5;12209:32;12199:60;;12255:1;12252;12245:12;12199:60;12149:116;:::o;12271:137::-;12325:5;12356:6;12350:13;12341:22;;12372:30;12396:5;12372:30;:::i;:::-;12271:137;;;;:::o;12414:345::-;12481:6;12530:2;12518:9;12509:7;12505:23;12501:32;12498:119;;;12536:79;;:::i;:::-;12498:119;12656:1;12681:61;12734:7;12725:6;12714:9;12710:22;12681:61;:::i;:::-;12671:71;;12627:125;12414:345;;;;:::o;12765:180::-;12813:77;12810:1;12803:88;12910:4;12907:1;12900:15;12934:4;12931:1;12924:15;12951:222;13044:4;13082:2;13071:9;13067:18;13059:26;;13095:71;13163:1;13152:9;13148:17;13139:6;13095:71;:::i;:::-;12951:222;;;;:::o;13179:143::-;13236:5;13267:6;13261:13;13252:22;;13283:33;13310:5;13283:33;:::i;:::-;13179:143;;;;:::o;13328:351::-;13398:6;13447:2;13435:9;13426:7;13422:23;13418:32;13415:119;;;13453:79;;:::i;:::-;13415:119;13573:1;13598:64;13654:7;13645:6;13634:9;13630:22;13598:64;:::i;:::-;13588:74;;13544:128;13328:351;;;;:::o;13685:177::-;13825:29;13821:1;13813:6;13809:14;13802:53;13685:177;:::o;13868:366::-;14010:3;14031:67;14095:2;14090:3;14031:67;:::i;:::-;14024:74;;14107:93;14196:3;14107:93;:::i;:::-;14225:2;14220:3;14216:12;14209:19;;13868:366;;;:::o;14240:419::-;14406:4;14444:2;14433:9;14429:18;14421:26;;14493:9;14487:4;14483:20;14479:1;14468:9;14464:17;14457:47;14521:131;14647:4;14521:131;:::i;:::-;14513:139;;14240:419;;;:::o;14665:332::-;14786:4;14824:2;14813:9;14809:18;14801:26;;14837:71;14905:1;14894:9;14890:17;14881:6;14837:71;:::i;:::-;14918:72;14986:2;14975:9;14971:18;14962:6;14918:72;:::i;:::-;14665:332;;;;;:::o;15003:148::-;15105:11;15142:3;15127:18;;15003:148;;;;:::o;15157:390::-;15263:3;15291:39;15324:5;15291:39;:::i;:::-;15346:89;15428:6;15423:3;15346:89;:::i;:::-;15339:96;;15444:65;15502:6;15497:3;15490:4;15483:5;15479:16;15444:65;:::i;:::-;15534:6;15529:3;15525:16;15518:23;;15267:280;15157:390;;;;:::o;15553:275::-;15685:3;15707:95;15798:3;15789:6;15707:95;:::i;:::-;15700:102;;15819:3;15812:10;;15553:275;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1415200",
								"executionCost": "1477",
								"totalCost": "1416677"
							},
							"external": {
								"acceptOffer(uint256)": "infinite",
								"balanceOffTokenToBuy(uint256)": "infinite",
								"balanceOffTokenToSell(uint256)": "infinite",
								"cancelOffer(uint256)": "infinite",
								"getOffersLength()": "2485",
								"offers(uint256)": "infinite",
								"putOffer(uint256,address,uint256,address)": "infinite"
							},
							"internal": {
								"compare(string memory,string memory)": "infinite",
								"stringToByte(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22619,
									"end": 25046,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22706,
									"end": 22727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22619,
									"end": 25046,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220712be36f37f181ac35c4bc896cd206ce11d8e141132afef65163a8690a6a6e8864736f6c63430008160033",
									".code": [
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "8A72EA6A"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "8A72EA6A"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "C815729D"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "E324869B"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "EF706ADF"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "19B8F993"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "1F6BB8E0"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "73C2DC12"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22619,
											"end": 25046,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22841,
											"end": 23407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22841,
											"end": 23407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24569,
											"end": 24744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24569,
											"end": 24744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24569,
											"end": 24744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22733,
											"end": 22835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22733,
											"end": 22835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22678,
											"end": 22699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22678,
											"end": 22699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22678,
											"end": 22699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23413,
											"end": 24126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23413,
											"end": 24126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24386,
											"end": 24563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 24386,
											"end": 24563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24386,
											"end": 24563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24132,
											"end": 24380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24132,
											"end": 24380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22986,
											"end": 22987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22971,
											"end": 22983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22971,
											"end": 22987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 22963,
											"end": 23017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22963,
											"end": 23017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23074,
											"end": 23086,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23125,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23148,
											"end": 23158,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23185,
											"end": 23196,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "PUSH",
											"source": 0,
											"value": "50454E44494E4700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23040,
											"end": 23275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23028,
											"end": 23276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23028,
											"end": 23276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23335,
											"end": 23359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23359,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 23360,
											"end": 23370,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23380,
											"end": 23384,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23387,
											"end": 23399,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23335,
											"end": 23400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23335,
											"end": 23400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23335,
											"end": 23400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22841,
											"end": 23407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24632,
											"end": 24636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24676,
											"end": 24681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24669,
											"end": 24682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24669,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24648,
											"end": 24682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24648,
											"end": 24682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24648,
											"end": 24682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24715,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24699,
											"end": 24715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24699,
											"end": 24725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24725,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24726,
											"end": 24736,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24699,
											"end": 24737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24699,
											"end": 24737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24699,
											"end": 24737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24692,
											"end": 24737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24692,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24692,
											"end": 24737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24569,
											"end": 24744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22792,
											"end": 22796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22815,
											"end": 22821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22815,
											"end": 22828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22808,
											"end": 22828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22808,
											"end": 22828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22733,
											"end": 22835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22678,
											"end": 22699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22678,
											"end": 22699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22678,
											"end": 22699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23503,
											"end": 23509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23510,
											"end": 23515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23503,
											"end": 23516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23482,
											"end": 23516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23482,
											"end": 23516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23482,
											"end": 23516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23542,
											"end": 23547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23554,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23542,
											"end": 23554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "50454E44494E4700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23534,
											"end": 23566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23534,
											"end": 23566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23526,
											"end": 23598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23526,
											"end": 23598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "PUSH",
											"source": 0,
											"value": "4143434550544544000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23629,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23617,
											"end": 23629,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23680,
											"end": 23685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23680,
											"end": 23697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23680,
											"end": 23697,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23725,
											"end": 23730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23725,
											"end": 23741,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23725,
											"end": 23741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23725,
											"end": 23741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23801,
											"end": 23822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23822,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 23823,
											"end": 23833,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23843,
											"end": 23847,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23850,
											"end": 23855,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23850,
											"end": 23867,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23850,
											"end": 23867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23850,
											"end": 23867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23801,
											"end": 23868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23801,
											"end": 23868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23801,
											"end": 23868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23946,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23928,
											"end": 23946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23946,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 23947,
											"end": 23957,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23959,
											"end": 23964,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23959,
											"end": 23977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23959,
											"end": 23977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23959,
											"end": 23977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23928,
											"end": 23978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23928,
											"end": 23978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24037,
											"end": 24054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24054,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24055,
											"end": 24060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24055,
											"end": 24067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24055,
											"end": 24067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24055,
											"end": 24067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24069,
											"end": 24074,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24069,
											"end": 24086,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24069,
											"end": 24086,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24069,
											"end": 24086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 24037,
											"end": 24087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 24037,
											"end": 24087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24114,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24105,
											"end": 24110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24098,
											"end": 24111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24098,
											"end": 24119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24098,
											"end": 24119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23472,
											"end": 24126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23472,
											"end": 24126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23472,
											"end": 24126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23413,
											"end": 24126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24450,
											"end": 24454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24494,
											"end": 24499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24487,
											"end": 24500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24487,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24466,
											"end": 24500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24466,
											"end": 24500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24466,
											"end": 24500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24517,
											"end": 24534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24517,
											"end": 24544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24544,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24545,
											"end": 24555,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24517,
											"end": 24556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24517,
											"end": 24556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24517,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24510,
											"end": 24556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24510,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24510,
											"end": 24556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24212,
											"end": 24218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24219,
											"end": 24224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24212,
											"end": 24225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24212,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24191,
											"end": 24225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 24191,
											"end": 24225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24191,
											"end": 24225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24251,
											"end": 24256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24251,
											"end": 24263,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 24251,
											"end": 24263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24251,
											"end": 24263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "PUSH",
											"source": 0,
											"value": "50454E44494E4700000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24243,
											"end": 24275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24243,
											"end": 24275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 24235,
											"end": 24307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24235,
											"end": 24307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "PUSH",
											"source": 0,
											"value": "43414E43454C4544000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24329,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 24317,
											"end": 24329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24317,
											"end": 24342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24368,
											"end": 24373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24359,
											"end": 24364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24352,
											"end": 24365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24352,
											"end": 24373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24352,
											"end": 24373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24181,
											"end": 24380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24132,
											"end": 24380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24886,
											"end": 25039,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 24886,
											"end": 25039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24967,
											"end": 24971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25013,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25026,
											"end": 25031,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25013,
											"end": 25025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 25013,
											"end": 25032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25013,
											"end": 25032,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25013,
											"end": 25032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24990,
											"end": 25009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 25003,
											"end": 25008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24990,
											"end": 25002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 24990,
											"end": 25009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24990,
											"end": 25009,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 24990,
											"end": 25009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24990,
											"end": 25032,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24983,
											"end": 25032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24886,
											"end": 25039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24886,
											"end": 25039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24886,
											"end": 25039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24886,
											"end": 25039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24886,
											"end": 25039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24750,
											"end": 24880,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 24750,
											"end": 24880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24815,
											"end": 24822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24867,
											"end": 24871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 24850,
											"end": 24872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24850,
											"end": 24872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24840,
											"end": 24873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24840,
											"end": 24873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24750,
											"end": 24880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24750,
											"end": 24880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24750,
											"end": 24880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24750,
											"end": 24880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 822,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 888,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 888,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 888,
											"end": 912,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 888,
											"end": 912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 877,
											"end": 912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 877,
											"end": 912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 924,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 975,
											"end": 982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1004,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1028,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1004,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1190,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1040,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1159,
											"end": 1164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1127,
											"end": 1165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1165,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1127,
											"end": 1165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1166,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1107,
											"end": 1184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1184,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1107,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1363,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1196,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1301,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1310,
											"end": 1357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1357,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1310,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1363,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1560,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1524,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1563,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1563,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1642,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1563,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1524,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1753,
											"end": 1760,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1742,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1708,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1708,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1761,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1836,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1836,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1903,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1836,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1903,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2023,
											"end": 2030,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2012,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1978,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2031,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1978,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2031,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2154,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2106,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2106,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1369,
											"end": 2190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2196,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2272,
											"end": 2391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2310,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2310,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2389,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2310,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2272,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2500,
											"end": 2507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2455,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2455,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2525,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2649,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2531,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2636,
											"end": 2641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2618,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2642,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2618,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2877,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2655,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2865,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2799,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2799,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2877,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2883,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3091,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2949,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3059,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3050,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3050,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3032,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3085,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3032,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3223,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3097,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3180,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3180,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3223,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3369,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3229,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 3357,
											"end": 3362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3326,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3363,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 3326,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3375,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3521,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 3476,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3476,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3375,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3645,
											"end": 3650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3627,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3627,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3763,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3664,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3750,
											"end": 3755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3756,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3938,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3769,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4190,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3944,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4056,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4035,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4171,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4298,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4196,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4284,
											"end": 4291,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4281,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4272,
											"end": 4277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4681,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4304,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4453,
											"end": 4458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4420,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4420,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4539,
											"end": 4545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4475,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4546,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4475,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4546,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4601,
											"end": 4605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4594,
											"end": 4599,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4555,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4555,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4645,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4674,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4645,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4629,
											"end": 4675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4629,
											"end": 4675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5086,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5070,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5020,
											"end": 5091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5172,
											"end": 5181,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5159,
											"end": 5165,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5101,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5101,
											"end": 5187,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5101,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5254,
											"end": 5263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5241,
											"end": 5247,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5197,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5269,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5197,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5347,
											"end": 5349,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5279,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5279,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5443,
											"end": 5446,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5361,
											"end": 5448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 5361,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5483,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5524,
											"end": 5602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5602,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 5524,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5829,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5615,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "4EC3A36F20706F646520736572207A65726F0000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 5980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6062,
											"end": 6064,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6057,
											"end": 6060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5998,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6163,
											"end": 6166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6074,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6187,
											"end": 6190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 6201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6614,
											"end": 6618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6488,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6480,
											"end": 6619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6480,
											"end": 6619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6632,
											"end": 6812,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6632,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6758,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6767,
											"end": 6782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6806,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6818,
											"end": 6998,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6818,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6943,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6863,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6856,
											"end": 6944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6967,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6960,
											"end": 6961,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6953,
											"end": 6968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 6992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7324,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7004,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7048,
											"end": 7054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7086,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7079,
											"end": 7083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7075,
											"end": 7087,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7132,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7126,
											"end": 7130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7153,
											"end": 7171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7143,
											"end": 7224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7143,
											"end": 7224,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7143,
											"end": 7224,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7143,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7274,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7234,
											"end": 7318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7290,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7318,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7234,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7471,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7330,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7379,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7429,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7456,
											"end": 7457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7570,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7477,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7556,
											"end": 7558,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7541,
											"end": 7564,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7683,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7576,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7620,
											"end": 7628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7683,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7796,
											"end": 7806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7861,
											"end": 7927,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7850,
											"end": 7859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7831,
											"end": 7928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7831,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7979,
											"end": 7987,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7949,
											"end": 7988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7988,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 7949,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7988,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8025,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8027,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8027,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7997,
											"end": 8027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8068,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8056,
											"end": 8075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8054,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8046,
											"end": 8076,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8036,
											"end": 8076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8036,
											"end": 8076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 8082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 8082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 8082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8230,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 8088,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8189,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8198,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8189,
											"end": 8223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8189,
											"end": 8223,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8189,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8171,
											"end": 8224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8171,
											"end": 8224,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 8171,
											"end": 8224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8311,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8236,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8300,
											"end": 8305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 8317,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8458,
											"end": 8465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 8427,
											"end": 8466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8466,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8427,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8537,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8561,
											"end": 8577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 8537,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8537,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8527,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8488,
											"end": 8579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8488,
											"end": 8579,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 8488,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8475,
											"end": 8580,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8393,
											"end": 8586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8592,
											"end": 8665,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8592,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8592,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8860,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8671,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8748,
											"end": 8780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8748,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8847,
											"end": 8853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8833,
											"end": 8837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 8789,
											"end": 8854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8789,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 9052,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8866,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8933,
											"end": 8947,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9034,
											"end": 9035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9027,
											"end": 9032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8997,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 8997,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 8971,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8963,
											"end": 8968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8926,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 9052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 9052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8866,
											"end": 9052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9601,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9058,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9159,
											"end": 9161,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9154,
											"end": 9157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9162,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9148,
											"end": 9594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9225,
											"end": 9230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 9193,
											"end": 9231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9231,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9193,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9295,
											"end": 9305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 9277,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9306,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 9277,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9267,
											"end": 9275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9460,
											"end": 9462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9458,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9442,
											"end": 9491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9442,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9442,
											"end": 9491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9481,
											"end": 9489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9442,
											"end": 9491,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9442,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 9560,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 9578,
											"end": 9581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 9560,
											"end": 9582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9582,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 9560,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9550,
											"end": 9558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9504,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9584,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 9504,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9594,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9148,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9058,
											"end": 9601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9724,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9607,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9711,
											"end": 9716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 9717,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9724,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9899,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9730,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 9855,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 9857,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9848,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 9836,
											"end": 9849,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 9858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9807,
											"end": 9858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9807,
											"end": 9858,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 9807,
											"end": 9858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9859,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9868,
											"end": 9893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9868,
											"end": 9893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10199,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9904,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9980,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10126,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 10151,
											"end": 10154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 10126,
											"end": 10155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10155,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 10126,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10188,
											"end": 10191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10185,
											"end": 10186,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10181,
											"end": 10192,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10175,
											"end": 10179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10172,
											"end": 10193,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10199,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 10199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 11599,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10204,
											"end": 11599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10321,
											"end": 10358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10354,
											"end": 10357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10321,
											"end": 10358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10321,
											"end": 10358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10321,
											"end": 10358,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10321,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10423,
											"end": 10441,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10415,
											"end": 10421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10442,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10445,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10409,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10521,
											"end": 10525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10515,
											"end": 10526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 10489,
											"end": 10527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10527,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10489,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10634,
											"end": 10640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10574,
											"end": 10641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10641,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10574,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10692,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10726,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10716,
											"end": 10722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10727,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10736,
											"end": 11354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11354,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10736,
											"end": 11354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11398,
											"end": 11399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11489,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11412,
											"end": 11489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11464,
											"end": 11473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11462,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11455,
											"end": 11474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11440,
											"end": 11475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11440,
											"end": 11475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11412,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11575,
											"end": 11581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 11573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11515,
											"end": 11582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11515,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11513,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11502,
											"end": 11583,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11371,
											"end": 11593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10706,
											"end": 11593,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 11354,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 10736,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10776,
											"end": 10782,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10772,
											"end": 10794,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 10854,
											"end": 10858,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 10822,
											"end": 10859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10859,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 10822,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10909,
											"end": 10916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10903,
											"end": 10917,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 10997,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10983,
											"end": 10986,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10979,
											"end": 10998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10973,
											"end": 10999,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10965,
											"end": 10971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10958,
											"end": 11000,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11086,
											"end": 11088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11075,
											"end": 11084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11089,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 10937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10920,
											"end": 10937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 10895,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11131,
											"end": 11137,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11119,
											"end": 11138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11295,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 11116,
											"end": 11295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11184,
											"end": 11187,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11180,
											"end": 11199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11200,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 11274,
											"end": 11278,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11266,
											"end": 11272,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11262,
											"end": 11279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11251,
											"end": 11260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11232,
											"end": 11280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11280,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 11232,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11224,
											"end": 11230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11217,
											"end": 11281,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11139,
											"end": 11295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11116,
											"end": 11295,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 11116,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11342,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11337,
											"end": 11338,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11329,
											"end": 11335,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11339,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11321,
											"end": 11343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11315,
											"end": 11319,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11308,
											"end": 11344,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 11354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 11354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 11354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 11593,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 10706,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 11593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 11599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 11599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 11599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 11599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 11599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10204,
											"end": 11599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11754,
											"end": 11758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11792,
											"end": 11794,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11781,
											"end": 11790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11805,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11873,
											"end": 11874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11858,
											"end": 11875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11855,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11805,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11805,
											"end": 11876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11805,
											"end": 11876,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11805,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11954,
											"end": 11956,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11943,
											"end": 11952,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11939,
											"end": 11957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11930,
											"end": 11936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 11886,
											"end": 11958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11886,
											"end": 11958,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 11886,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 12040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 12036,
											"end": 12038,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12025,
											"end": 12034,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12021,
											"end": 12039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12018,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 12040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 11968,
											"end": 12040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 12040,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11968,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 12047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12143,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12053,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12087,
											"end": 12094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12130,
											"end": 12135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12123,
											"end": 12136,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12116,
											"end": 12137,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12265,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12149,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12234,
											"end": 12239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12219,
											"end": 12240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 12219,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12199,
											"end": 12259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12252,
											"end": 12253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12245,
											"end": 12257,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12259,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 12199,
											"end": 12259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12408,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12271,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12325,
											"end": 12330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12350,
											"end": 12363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12372,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 12396,
											"end": 12401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12372,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12372,
											"end": 12402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12372,
											"end": 12402,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 12372,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12759,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 12414,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12530,
											"end": 12532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12518,
											"end": 12527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12516,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12501,
											"end": 12533,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12498,
											"end": 12617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12536,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 12536,
											"end": 12615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12615,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12536,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12617,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12498,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 12734,
											"end": 12741,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12725,
											"end": 12731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12723,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12710,
											"end": 12732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12681,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12742,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 12681,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12759,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12414,
											"end": 12759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12765,
											"end": 12945,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12765,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12813,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12810,
											"end": 12811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12803,
											"end": 12891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12910,
											"end": 12914,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12907,
											"end": 12908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12900,
											"end": 12915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 12938,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12931,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 13173,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 12951,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13044,
											"end": 13048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13082,
											"end": 13084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13071,
											"end": 13080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13067,
											"end": 13085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13059,
											"end": 13085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13059,
											"end": 13085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 13163,
											"end": 13164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13161,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13148,
											"end": 13165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13139,
											"end": 13145,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 13095,
											"end": 13166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13166,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 13095,
											"end": 13166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 13173,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 13173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 13173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 13173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12951,
											"end": 13173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13322,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13179,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13252,
											"end": 13274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13252,
											"end": 13274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13283,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13283,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 13283,
											"end": 13316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13283,
											"end": 13316,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 13283,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13322,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13679,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 13328,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13447,
											"end": 13449,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13435,
											"end": 13444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13426,
											"end": 13433,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13450,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 13415,
											"end": 13534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 13453,
											"end": 13532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 13453,
											"end": 13532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13532,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 13453,
											"end": 13532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13534,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 13415,
											"end": 13534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13573,
											"end": 13574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13598,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 13654,
											"end": 13661,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 13651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13634,
											"end": 13643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13630,
											"end": 13652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 13598,
											"end": 13662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13598,
											"end": 13662,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 13598,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13588,
											"end": 13662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13588,
											"end": 13662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13544,
											"end": 13672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13685,
											"end": 13862,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 13685,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13825,
											"end": 13854,
											"name": "PUSH",
											"source": 1,
											"value": "4F666572746120646576652065737461722070656E64656E74652E0000000000"
										},
										{
											"begin": 13821,
											"end": 13822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13813,
											"end": 13819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13809,
											"end": 13823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13802,
											"end": 13855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13685,
											"end": 13862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13685,
											"end": 13862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 14234,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 13868,
											"end": 14234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14010,
											"end": 14013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14031,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 14095,
											"end": 14097,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 14090,
											"end": 14093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14031,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 14031,
											"end": 14098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14031,
											"end": 14098,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 14031,
											"end": 14098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 14196,
											"end": 14199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14107,
											"end": 14200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14107,
											"end": 14200,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 14107,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14225,
											"end": 14227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14220,
											"end": 14223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14216,
											"end": 14228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14209,
											"end": 14228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14209,
											"end": 14228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 14234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 14234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 14234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 14234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14444,
											"end": 14446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14433,
											"end": 14442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14493,
											"end": 14502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14483,
											"end": 14503,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14468,
											"end": 14477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 14647,
											"end": 14651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 14521,
											"end": 14652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 14521,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14513,
											"end": 14652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14513,
											"end": 14652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14786,
											"end": 14790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14813,
											"end": 14822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14801,
											"end": 14827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14801,
											"end": 14827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 14905,
											"end": 14906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14894,
											"end": 14903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14890,
											"end": 14907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 14837,
											"end": 14908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14837,
											"end": 14908,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 14837,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14918,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 14986,
											"end": 14988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14975,
											"end": 14984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14971,
											"end": 14989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14962,
											"end": 14968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14918,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 14918,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14918,
											"end": 14990,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 14918,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14665,
											"end": 14997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15151,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15003,
											"end": 15151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15105,
											"end": 15116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15142,
											"end": 15145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15151,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15003,
											"end": 15151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15547,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 15157,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15263,
											"end": 15266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15291,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 15324,
											"end": 15329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15291,
											"end": 15330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 15291,
											"end": 15330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15291,
											"end": 15330,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 15291,
											"end": 15330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 15428,
											"end": 15434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15423,
											"end": 15426,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 15346,
											"end": 15435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15435,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 15346,
											"end": 15435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15435,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 15502,
											"end": 15508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15497,
											"end": 15500,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15490,
											"end": 15494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15483,
											"end": 15488,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 15444,
											"end": 15509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15509,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 15444,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15534,
											"end": 15540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15529,
											"end": 15532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15525,
											"end": 15541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15518,
											"end": 15541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15828,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 15553,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15685,
											"end": 15688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15707,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 15798,
											"end": 15801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15707,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 15707,
											"end": 15802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15707,
											"end": 15802,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 15707,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15700,
											"end": 15802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15700,
											"end": 15802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15819,
											"end": 15822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 15822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 15822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SimpleExchangeImpl_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOffer(uint256)": "c815729d",
							"balanceOffTokenToBuy(uint256)": "1f6bb8e0",
							"balanceOffTokenToSell(uint256)": "e324869b",
							"cancelOffer(uint256)": "ef706adf",
							"getOffersLength()": "73c2dc12",
							"offers(uint256)": "8a72ea6a",
							"putOffer(uint256,address,uint256,address)": "19b8f993"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"balanceOffTokenToBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"balanceOffTokenToSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOffersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToSell\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToSell\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToBuy\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToBuy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToSell\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToSell\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToBuy\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToBuy\",\"type\":\"address\"}],\"name\":\"putOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SimpleExchangeImpl_flattened.sol\":\"ImplementSimpleExchange\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SimpleExchangeImpl_flattened.sol\":{\"keccak256\":\"0x0d408a9cf300ff3a6aada51103976e502691ff55aae843bce488ca7973321950\",\"urls\":[\"bzz-raw://7ca1aa422f66dac411c3c45b7986e1b3f6771ffa7c939ef756ff288c834994de\",\"dweb:/ipfs/QmSTR23vaQJTLtqeHmV2yvhkzjyG83FCjVyi3C67FXX5GP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 823,
								"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
								"label": "offers",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Offer)787_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Offer)787_storage)dyn_storage": {
								"base": "t_struct(Offer)787_storage",
								"encoding": "dynamic_array",
								"label": "struct ISimpleExchange.Offer[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)242": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Offer)787_storage": {
								"encoding": "inplace",
								"label": "struct ISimpleExchange.Offer",
								"members": [
									{
										"astId": 774,
										"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
										"label": "amountToSell",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 777,
										"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
										"label": "tokenToSell",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)242"
									},
									{
										"astId": 779,
										"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 781,
										"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
										"label": "amountToBuy",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 784,
										"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
										"label": "tokenToBuy",
										"offset": 0,
										"slot": "4",
										"type": "t_contract(IERC20)242"
									},
									{
										"astId": 786,
										"contract": "SimpleExchangeImpl_flattened.sol:ImplementSimpleExchange",
										"label": "status",
										"offset": 0,
										"slot": "5",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> SimpleExchangeImpl_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "SimpleExchangeImpl_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SimpleExchangeImpl_flattened.sol": {
				"ast": {
					"absolutePath": "SimpleExchangeImpl_flattened.sol",
					"exportedSymbols": {
						"Context": [
							165
						],
						"ERC20": [
							771
						],
						"IERC1155Errors": [
							136
						],
						"IERC20": [
							242
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							265
						],
						"IERC721Errors": [
							89
						],
						"ISimpleExchange": [
							816
						],
						"ImplementSimpleExchange": [
							1076
						]
					},
					"id": 1077,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "146:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "322:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "341:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "661:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:49:0"
									},
									"src": "655:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "741:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "904:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:16:0"
									},
									"src": "898:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "945:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1115:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:18:0"
									},
									"src": "1109:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1160:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1516:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:52:0"
									},
									"src": "1510:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1601:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1786:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:18:0"
									},
									"src": "1780:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1831:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2037:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:17:0"
									},
									"src": "2031:43:0"
								}
							],
							"scope": 1077,
							"src": "312:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2078:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2230:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2250:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2480:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:15:0"
									},
									"src": "2474:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2520:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2663:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2686:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:17:0"
									},
									"src": "2657:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2709:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3009:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:48:0"
									},
									"src": "3003:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3084:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3247:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:16:0"
									},
									"src": "3241:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3289:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3459:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3481:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:18:0"
									},
									"src": "3453:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3505:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3763:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:35:0"
									},
									"src": "3757:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3831:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4016:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4046:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:18:0"
									},
									"src": "4010:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4062:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4270:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4300:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4292:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:18:0"
									},
									"src": "4264:46:0"
								}
							],
							"scope": 1077,
							"src": "2220:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4314:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4468:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4489:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4861:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4912:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:66:0"
									},
									"src": "4855:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4960:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5123:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5152:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:16:0"
									},
									"src": "5117:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5166:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5336:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5358:18:0"
									},
									"src": "5330:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5383:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5650:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:33:0"
									},
									"src": "5644:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5718:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5903:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:18:0"
									},
									"src": "5897:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5950:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6158:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6180:18:0"
									},
									"src": "6152:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6205:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6496:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:41:0"
									},
									"src": "6490:73:0"
								}
							],
							"scope": 1077,
							"src": "4458:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6689:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6715:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "Context",
							"nameLocation": "7230:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7306:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 143,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7323:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7327:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7323:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 142,
												"id": 145,
												"nodeType": "Return",
												"src": "7316:17:0"
											}
										]
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7253:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7263:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7297:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7296:9:0"
									},
									"scope": 165,
									"src": "7244:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "7413:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7430:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7434:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7430:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "7423:15:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7355:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7363:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "7397:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:16:0"
									},
									"scope": 165,
									"src": "7346:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "7523:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7540:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "7533:8:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "7460:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7480:2:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "7514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7513:9:0"
									},
									"scope": 165,
									"src": "7451:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1077,
							"src": "7212:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7684:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "7710:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "IERC20",
							"nameLocation": "7791:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "7804:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 176,
									"name": "Transfer",
									"nameLocation": "7973:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7998:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7982:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7982:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8020:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8004:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "8024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7981:57:0"
									},
									"src": "7967:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "8045:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 185,
									"name": "Approval",
									"nameLocation": "8204:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8229:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8213:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8252:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8236:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8212:63:0"
									},
									"src": "8198:78:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "8282:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8361:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8372:2:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "8398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8397:9:0"
									},
									"scope": 242,
									"src": "8352:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "8413:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8498:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8507:17:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "8548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:9:0"
									},
									"scope": 242,
									"src": "8489:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "8563:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8790:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8807:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8799:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8811:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8798:27:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8844:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:6:0"
									},
									"scope": 242,
									"src": "8781:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "8856:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "9134:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9152:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9144:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9167:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9143:32:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "9199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9198:9:0"
									},
									"scope": 242,
									"src": "9125:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9214:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9895:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9902:32:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "9953:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9953:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:6:0"
									},
									"scope": 242,
									"src": "9886:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "9965:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10311:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10303:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10323:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10315:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10288:41:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "10348:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10348:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10347:6:0"
									},
									"scope": 242,
									"src": "10267:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "7781:2575:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10528:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 245,
										"name": "IERC20",
										"nameLocations": [
											"10670:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "10670:6:0"
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "10670:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "10555:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265,
								242
							],
							"name": "IERC20Metadata",
							"nameLocation": "10652:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "10683:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10751:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10755:2:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10781:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10781:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10780:15:0"
									},
									"scope": 265,
									"src": "10742:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10802:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10872:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10878:2:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "10904:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10904:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10903:15:0"
									},
									"scope": 265,
									"src": "10863:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "10925:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "11004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11012:2:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11038:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 261,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11037:7:0"
									},
									"scope": 265,
									"src": "10995:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "10642:405:0",
							"usedErrors": [],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11179:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12289:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 165,
										"src": "12289:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12289:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12298:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "12298:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12298:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12306:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "12306:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12306:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12322:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "12322:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12322:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11209:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								41,
								265,
								242,
								165
							],
							"name": "ERC20",
							"nameLocation": "12280:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12385:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12341:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12357:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12349:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12341:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12473:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12401:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12417:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12409:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12401:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12444:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12436:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12428:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12455:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12507:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12491:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12491:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12541:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12526:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12526:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12567:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12552:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12552:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12813:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12823:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12823:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12823:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12846:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12846:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12581:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12769:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12769:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12804:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12790:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12768:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12813:0:0"
									},
									"scope": 771,
									"src": "12757:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										252
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12995:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13005:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12876:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12944:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12948:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12980:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12980:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12979:15:0"
									},
									"scope": 771,
									"src": "12935:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										258
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13199:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13209:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13030:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13146:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13152:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13184:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13184:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13183:15:0"
									},
									"scope": 771,
									"src": "13137:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										264
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13919:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13936:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13929:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13236:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13872:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13880:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13912:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13911:7:0"
									},
									"scope": 771,
									"src": "13863:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14066:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14083:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14076:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13951:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14025:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14057:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14056:9:0"
									},
									"scope": 771,
									"src": "14005:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										199
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14234:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14251:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14261:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14251:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14244:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14108:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14169:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14178:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14224:9:0"
									},
									"scope": 771,
									"src": "14160:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										209
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14546:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14564:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14556:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14556:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "14572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14572:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14556:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14615:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14594:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14594:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14594:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14631:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14282:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14480:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14488:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14540:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14539:6:0"
									},
									"scope": 771,
									"src": "14471:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										219
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14796:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14813:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14813:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14806:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14655:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14716:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14741:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14725:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14787:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14786:9:0"
									},
									"scope": 771,
									"src": "14707:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										229
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15233:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15251:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15243:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15243:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "15259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15259:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15243:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15281:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15281:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15322:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14853:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15163:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15171:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15196:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15188:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15170:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15227:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15226:6:0"
									},
									"scope": 771,
									"src": "15154:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										241
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15993:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16011:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16003:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16003:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "16021:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16021:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16003:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16043:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16043:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16100:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16106:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16090:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16090:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16126:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15346:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15909:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15921:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15987:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15986:6:0"
									},
									"scope": 771,
									"src": "15900:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16586:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16600:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16616:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16608:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16608:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16600:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16596:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16620:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16668:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16660:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16660:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16660:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "16641:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16641:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16634:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16695:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16709:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16701:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16701:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16695:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16691:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16713:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16763:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16755:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16755:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16755:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "16734:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16734:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16727:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16794:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16800:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16786:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16786:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16150:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16558:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16550:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16535:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16586:0:0"
									},
									"scope": 771,
									"src": "16517:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17207:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17221:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17229:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17229:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17221:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17395:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17417:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17409:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17409:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17431:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17431:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17409:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17464:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17464:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17460:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17485:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17535:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17541:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17554:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "17510:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17510:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17503:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17588:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17695:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17705:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17695:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17713:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17727:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17713:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17695:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17695:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17217:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17241:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17357:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17373:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17357:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17357:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17771:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17785:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17777:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17777:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17771:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17986:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18000:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18145:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18155:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18145:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18162:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18145:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18145:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17767:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17789:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17803:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17934:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17950:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17934:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17934:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18222:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18226:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "18207:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18207:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18202:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16823:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17141:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17157:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17149:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17171:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17183:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17148:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17207:0:0"
									},
									"scope": 771,
									"src": "17132:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18638:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18671:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18663:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18663:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18652:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18648:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18675:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18717:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18717:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18717:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "18696:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18696:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18689:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18777:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18748:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18748:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18245:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18591:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18605:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18597:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18596:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18638:0:0"
									},
									"scope": 771,
									"src": "18582:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19164:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19197:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19189:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19189:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19178:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19174:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19201:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19249:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19241:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19241:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19241:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "19222:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19222:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19215:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19289:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19272:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19272:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18796:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19117:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19123:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19148:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19140:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19122:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19164:0:0"
									},
									"scope": 771,
									"src": "19108:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19924:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19934:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19934:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19934:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19320:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19859:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19867:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19924:0:0"
									},
									"scope": 771,
									"src": "19850:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20908:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20922:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20931:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20931:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20922:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20918:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20943:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20985:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "20964:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20964:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20957:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21031:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21031:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21020:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21016:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21043:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21092:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21084:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21084:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21084:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "21064:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21064:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21057:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21115:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21127:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21115:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21134:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21115:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21115:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21115:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21160:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21175:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21203:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21210:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21219:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "21194:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21194:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21189:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19984:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20819:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20827:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20908:0:0"
									},
									"scope": 771,
									"src": "20810:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21613:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21631:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21623:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21650:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21650:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21623:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21689:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21714:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21714:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21709:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21709:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21723:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21709:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21689:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21685:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21728:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21746:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21765:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21746:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21742:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21772:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21824:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21833:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21851:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "21797:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21797:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21790:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21885:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21922:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21929:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21938:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21957:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21938:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21964:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21913:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21913:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21913:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21248:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21533:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21548:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21613:0:0"
									},
									"scope": 771,
									"src": "21524:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1077,
							"src": "12262:9741:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								176,
								185
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22036:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISimpleExchange",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "ISimpleExchange",
							"nameLocation": "22073:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISimpleExchange.Offer",
									"id": 787,
									"members": [
										{
											"constant": false,
											"id": 774,
											"mutability": "mutable",
											"name": "amountToSell",
											"nameLocation": "22124:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 787,
											"src": "22119:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 773,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "22119:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 777,
											"mutability": "mutable",
											"name": "tokenToSell",
											"nameLocation": "22153:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 787,
											"src": "22146:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$242",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 776,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 775,
													"name": "IERC20",
													"nameLocations": [
														"22146:6:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 242,
													"src": "22146:6:0"
												},
												"referencedDeclaration": 242,
												"src": "22146:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 779,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "22182:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 787,
											"src": "22174:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 778,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "22174:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "amountToBuy",
											"nameLocation": "22203:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 787,
											"src": "22198:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 780,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "22198:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 784,
											"mutability": "mutable",
											"name": "tokenToBuy",
											"nameLocation": "22231:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 787,
											"src": "22224:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$242",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 783,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 782,
													"name": "IERC20",
													"nameLocations": [
														"22224:6:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 242,
													"src": "22224:6:0"
												},
												"referencedDeclaration": 242,
												"src": "22224:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 786,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "22258:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 787,
											"src": "22251:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 785,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "22251:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Offer",
									"nameLocation": "22103:5:0",
									"nodeType": "StructDefinition",
									"scope": 816,
									"src": "22096:175:0",
									"visibility": "public"
								},
								{
									"functionSelector": "73c2dc12",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOffersLength",
									"nameLocation": "22286:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22301:2:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "22327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22326:6:0"
									},
									"scope": 816,
									"src": "22277:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "19b8f993",
									"id": 805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "putOffer",
									"nameLocation": "22348:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "amountToSell",
												"nameLocation": "22362:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "22357:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenToSell",
												"nameLocation": "22383:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "22376:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 795,
														"name": "IERC20",
														"nameLocations": [
															"22376:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 242,
														"src": "22376:6:0"
													},
													"referencedDeclaration": 242,
													"src": "22376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amountToBuy",
												"nameLocation": "22401:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "22396:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "tokenToBuy",
												"nameLocation": "22421:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "22414:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 800,
														"name": "IERC20",
														"nameLocations": [
															"22414:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 242,
														"src": "22414:6:0"
													},
													"referencedDeclaration": 242,
													"src": "22414:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22356:76:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22441:0:0"
									},
									"scope": 816,
									"src": "22339:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c815729d",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOffer",
									"nameLocation": "22457:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "22474:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "22469:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22468:12:0"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22497:0:0"
									},
									"scope": 816,
									"src": "22448:50:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef706adf",
									"id": 815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOffer",
									"nameLocation": "22513:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "22530:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "22525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22524:12:0"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22545:0:0"
									},
									"scope": 816,
									"src": "22504:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "22063:485:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 817,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22584:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 818,
										"name": "ISimpleExchange",
										"nameLocations": [
											"22655:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "22655:15:0"
									},
									"id": 819,
									"nodeType": "InheritanceSpecifier",
									"src": "22655:15:0"
								}
							],
							"canonicalName": "ImplementSimpleExchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								816
							],
							"name": "ImplementSimpleExchange",
							"nameLocation": "22628:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8a72ea6a",
									"id": 823,
									"mutability": "mutable",
									"name": "offers",
									"nameLocation": "22693:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1076,
									"src": "22678:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
										"typeString": "struct ISimpleExchange.Offer[]"
									},
									"typeName": {
										"baseType": {
											"id": 821,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 820,
												"name": "Offer",
												"nameLocations": [
													"22678:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 787,
												"src": "22678:5:0"
											},
											"referencedDeclaration": 787,
											"src": "22678:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Offer_$787_storage_ptr",
												"typeString": "struct ISimpleExchange.Offer"
											}
										},
										"id": 822,
										"nodeType": "ArrayTypeName",
										"src": "22678:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage_ptr",
											"typeString": "struct ISimpleExchange.Offer[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "22720:7:0",
										"statements": []
									},
									"id": 827,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22717:2:0"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22720:0:0"
									},
									"scope": 1076,
									"src": "22706:21:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "22798:37:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 833,
														"name": "offers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "22815:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "22822:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "22815:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 832,
												"id": 835,
												"nodeType": "Return",
												"src": "22808:20:0"
											}
										]
									},
									"functionSelector": "73c2dc12",
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOffersLength",
									"nameLocation": "22742:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 829,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22774:8:0"
									},
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22757:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "22792:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22792:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22791:6:0"
									},
									"scope": 1076,
									"src": "22733:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										805
									],
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "22953:454:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 852,
																"name": "amountToSell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "22971:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22971:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4ec3a36f20706f646520736572207a65726f",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "unicodeString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22989:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
																"typeString": "literal_string hex\"4ec3a36f20706f646520736572207a65726f\""
															},
															"value": "Não pode ser zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aca344057a236f0213a039ff70675e44e085ee79ee886331516b24f3c57c8f9e",
																"typeString": "literal_string hex\"4ec3a36f20706f646520736572207a65726f\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22963:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "22963:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 862,
																	"name": "amountToSell",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "23074:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 863,
																	"name": "tokenToSell",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "23114:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$242",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"expression": {
																		"id": 864,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "23148:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23152:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "23148:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 866,
																	"name": "amountToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "23185:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 867,
																	"name": "tokenToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "23223:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$242",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "50454e44494e47",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23255:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b104c8032f8ea142398c783b53373444df26fbd5743f40221b7a8f42ae1b0bca",
																		"typeString": "literal_string \"PENDING\""
																	},
																	"value": "PENDING"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20_$242",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20_$242",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b104c8032f8ea142398c783b53373444df26fbd5743f40221b7a8f42ae1b0bca",
																		"typeString": "literal_string \"PENDING\""
																	}
																],
																"id": 861,
																"name": "Offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "23040:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Offer_$787_storage_ptr_$",
																	"typeString": "type(struct ISimpleExchange.Offer storage pointer)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"23060:12:0",
																"23101:11:0",
																"23140:6:0",
																"23172:11:0",
																"23211:10:0",
																"23247:6:0"
															],
															"names": [
																"amountToSell",
																"tokenToSell",
																"seller",
																"amountToBuy",
																"tokenToBuy",
																"status"
															],
															"nodeType": "FunctionCall",
															"src": "23040:235:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																"typeString": "struct ISimpleExchange.Offer memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																"typeString": "struct ISimpleExchange.Offer memory"
															}
														],
														"expression": {
															"id": 858,
															"name": "offers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "23028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
																"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23035:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "23028:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Offer_$787_storage_$dyn_storage_ptr_$_t_struct$_Offer_$787_storage_$returns$__$attached_to$_t_array$_t_struct$_Offer_$787_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct ISimpleExchange.Offer storage ref[] storage pointer,struct ISimpleExchange.Offer storage ref)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23028:248:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "23028:248:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 875,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23360:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23364:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 879,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "23380:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ImplementSimpleExchange_$1076",
																		"typeString": "contract ImplementSimpleExchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ImplementSimpleExchange_$1076",
																		"typeString": "contract ImplementSimpleExchange"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23372:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23372:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23372:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "amountToSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "23387:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 872,
															"name": "tokenToSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "23335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23347:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "23335:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23335:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "23335:65:0"
											}
										]
									},
									"functionSelector": "19b8f993",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "putOffer",
									"nameLocation": "22850:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22944:8:0"
									},
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "amountToSell",
												"nameLocation": "22864:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "22859:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22859:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "tokenToSell",
												"nameLocation": "22885:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "22878:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "IERC20",
														"nameLocations": [
															"22878:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 242,
														"src": "22878:6:0"
													},
													"referencedDeclaration": 242,
													"src": "22878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "amountToBuy",
												"nameLocation": "22903:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "22898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "22898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "tokenToBuy",
												"nameLocation": "22923:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "22916:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$242",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 845,
														"name": "IERC20",
														"nameLocations": [
															"22916:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 242,
														"src": "22916:6:0"
													},
													"referencedDeclaration": 242,
													"src": "22916:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22858:76:0"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22953:0:0"
									},
									"scope": 1076,
									"src": "22841:566:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "23472:654:0",
										"statements": [
											{
												"assignments": [
													893
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "offer",
														"nameLocation": "23495:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "23482:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer"
														},
														"typeName": {
															"id": 892,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 891,
																"name": "Offer",
																"nameLocations": [
																	"23482:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 787,
																"src": "23482:5:0"
															},
															"referencedDeclaration": 787,
															"src": "23482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_storage_ptr",
																"typeString": "struct ISimpleExchange.Offer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 897,
												"initialValue": {
													"baseExpression": {
														"id": 894,
														"name": "offers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "23503:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
														}
													},
													"id": 896,
													"indexExpression": {
														"id": 895,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "23510:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23503:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Offer_$787_storage",
														"typeString": "struct ISimpleExchange.Offer storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23482:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 900,
																		"name": "offer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "23542:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																			"typeString": "struct ISimpleExchange.Offer memory"
																		}
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23548:6:0",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "23542:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "50454e44494e47",
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23556:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b104c8032f8ea142398c783b53373444df26fbd5743f40221b7a8f42ae1b0bca",
																		"typeString": "literal_string \"PENDING\""
																	},
																	"value": "PENDING"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b104c8032f8ea142398c783b53373444df26fbd5743f40221b7a8f42ae1b0bca",
																		"typeString": "literal_string \"PENDING\""
																	}
																],
																"id": 899,
																"name": "compare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "23534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (string memory,string memory) pure returns (bool)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23534:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f666572746120646576652065737461722070656e64656e74652e",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23568:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f",
																"typeString": "literal_string \"Oferta deve estar pendente.\""
															},
															"value": "Oferta deve estar pendente."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f",
																"typeString": "literal_string \"Oferta deve estar pendente.\""
															}
														],
														"id": 898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23526:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "23526:72:0"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 907,
															"name": "offer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "23617:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																"typeString": "struct ISimpleExchange.Offer memory"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "23623:6:0",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "23617:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4143434550544544",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23632:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
															"typeString": "literal_string \"ACCEPTED\""
														},
														"value": "ACCEPTED"
													},
													"src": "23617:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "23617:25:0"
											},
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "TokenSell",
														"nameLocation": "23668:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "23661:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$242",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 914,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 913,
																"name": "IERC20",
																"nameLocations": [
																	"23661:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 242,
																"src": "23661:6:0"
															},
															"referencedDeclaration": 242,
															"src": "23661:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"expression": {
														"id": 916,
														"name": "offer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "23680:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer memory"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "23686:11:0",
													"memberName": "tokenToSell",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 777,
													"src": "23680:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23661:36:0"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "TokenBuy",
														"nameLocation": "23714:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "23707:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$242",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 920,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 919,
																"name": "IERC20",
																"nameLocations": [
																	"23707:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 242,
																"src": "23707:6:0"
															},
															"referencedDeclaration": 242,
															"src": "23707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"expression": {
														"id": 922,
														"name": "offer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "23725:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer memory"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "23731:10:0",
													"memberName": "tokenToBuy",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 784,
													"src": "23725:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$242",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23707:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 928,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23823:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23827:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23823:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 932,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "23843:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ImplementSimpleExchange_$1076",
																		"typeString": "contract ImplementSimpleExchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ImplementSimpleExchange_$1076",
																		"typeString": "contract ImplementSimpleExchange"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23835:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23835:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 934,
																"name": "offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "23850:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																	"typeString": "struct ISimpleExchange.Offer memory"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23856:11:0",
															"memberName": "amountToBuy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 781,
															"src": "23850:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 925,
															"name": "TokenBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "23801:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23810:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "23801:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23801:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "23801:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 941,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "23947:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23951:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "23947:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 943,
																"name": "offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "23959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																	"typeString": "struct ISimpleExchange.Offer memory"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23965:12:0",
															"memberName": "amountToSell",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 774,
															"src": "23959:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 938,
															"name": "TokenSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "23928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23938:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "23928:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23928:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "23928:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 950,
																"name": "offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "24055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																	"typeString": "struct ISimpleExchange.Offer memory"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24061:6:0",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "24055:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 952,
																"name": "offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "24069:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																	"typeString": "struct ISimpleExchange.Offer memory"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24075:11:0",
															"memberName": "amountToBuy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 781,
															"src": "24069:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 947,
															"name": "TokenBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "24037:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24046:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "24037:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24037:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "24037:50:0"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 956,
															"name": "offers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "24098:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
																"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
															}
														},
														"id": 958,
														"indexExpression": {
															"id": 957,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "24105:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24098:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 959,
														"name": "offer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "24114:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer memory"
														}
													},
													"src": "24098:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Offer_$787_storage",
														"typeString": "struct ISimpleExchange.Offer storage ref"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "24098:21:0"
											}
										]
									},
									"functionSelector": "c815729d",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOffer",
									"nameLocation": "23422:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 889,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23463:8:0"
									},
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "23439:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "23434:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23433:12:0"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23472:0:0"
									},
									"scope": 1076,
									"src": "23413:713:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										815
									],
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "24181:199:0",
										"statements": [
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "offer",
														"nameLocation": "24204:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 997,
														"src": "24191:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer"
														},
														"typeName": {
															"id": 970,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 969,
																"name": "Offer",
																"nameLocations": [
																	"24191:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 787,
																"src": "24191:5:0"
															},
															"referencedDeclaration": 787,
															"src": "24191:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_storage_ptr",
																"typeString": "struct ISimpleExchange.Offer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 975,
												"initialValue": {
													"baseExpression": {
														"id": 972,
														"name": "offers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "24212:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
														}
													},
													"id": 974,
													"indexExpression": {
														"id": 973,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "24219:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24212:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Offer_$787_storage",
														"typeString": "struct ISimpleExchange.Offer storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24191:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 978,
																		"name": "offer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "24251:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																			"typeString": "struct ISimpleExchange.Offer memory"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24257:6:0",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "24251:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "50454e44494e47",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24265:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b104c8032f8ea142398c783b53373444df26fbd5743f40221b7a8f42ae1b0bca",
																		"typeString": "literal_string \"PENDING\""
																	},
																	"value": "PENDING"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b104c8032f8ea142398c783b53373444df26fbd5743f40221b7a8f42ae1b0bca",
																		"typeString": "literal_string \"PENDING\""
																	}
																],
																"id": 977,
																"name": "compare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "24243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (string memory,string memory) pure returns (bool)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24243:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f666572746120646576652065737461722070656e64656e74652e",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24277:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f",
																"typeString": "literal_string \"Oferta deve estar pendente.\""
															},
															"value": "Oferta deve estar pendente."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48107ab68237147b8174bd2d972c2617cac7f8208bb8428293ae48f13027697f",
																"typeString": "literal_string \"Oferta deve estar pendente.\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24235:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "24235:72:0"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 985,
															"name": "offer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "24317:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																"typeString": "struct ISimpleExchange.Offer memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "24323:6:0",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "24317:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "43414e43454c4544",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24332:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_01bbbd066f915eb7b922f6bdc8466679e7a855211111e7277715fce49137c980",
															"typeString": "literal_string \"CANCELED\""
														},
														"value": "CANCELED"
													},
													"src": "24317:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "24317:25:0"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 991,
															"name": "offers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "24352:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
																"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
															}
														},
														"id": 993,
														"indexExpression": {
															"id": 992,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "24359:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24352:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 994,
														"name": "offer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "24368:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer memory"
														}
													},
													"src": "24352:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Offer_$787_storage",
														"typeString": "struct ISimpleExchange.Offer storage ref"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "24352:21:0"
											}
										]
									},
									"functionSelector": "ef706adf",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOffer",
									"nameLocation": "24141:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 967,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24172:8:0"
									},
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "24158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "24153:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "24153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24152:12:0"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24181:0:0"
									},
									"scope": 1076,
									"src": "24132:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "24456:107:0",
										"statements": [
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "offer",
														"nameLocation": "24479:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "24466:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer"
														},
														"typeName": {
															"id": 1006,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1005,
																"name": "Offer",
																"nameLocations": [
																	"24466:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 787,
																"src": "24466:5:0"
															},
															"referencedDeclaration": 787,
															"src": "24466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_storage_ptr",
																"typeString": "struct ISimpleExchange.Offer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"baseExpression": {
														"id": 1008,
														"name": "offers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "24487:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
														}
													},
													"id": 1010,
													"indexExpression": {
														"id": 1009,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "24494:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24487:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Offer_$787_storage",
														"typeString": "struct ISimpleExchange.Offer storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24466:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24545:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24549:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24545:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1012,
																"name": "offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "24517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																	"typeString": "struct ISimpleExchange.Offer memory"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24523:11:0",
															"memberName": "tokenToSell",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "24517:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24535:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "24517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24517:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1018,
												"nodeType": "Return",
												"src": "24510:46:0"
											}
										]
									},
									"functionSelector": "e324869b",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOffTokenToSell",
									"nameLocation": "24395:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "24422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24417:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "24417:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24416:12:0"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "24450:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "24450:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24449:6:0"
									},
									"scope": 1076,
									"src": "24386:177:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "24638:106:0",
										"statements": [
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "offer",
														"nameLocation": "24661:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1041,
														"src": "24648:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
															"typeString": "struct ISimpleExchange.Offer"
														},
														"typeName": {
															"id": 1028,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1027,
																"name": "Offer",
																"nameLocations": [
																	"24648:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 787,
																"src": "24648:5:0"
															},
															"referencedDeclaration": 787,
															"src": "24648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Offer_$787_storage_ptr",
																"typeString": "struct ISimpleExchange.Offer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"baseExpression": {
														"id": 1030,
														"name": "offers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "24669:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Offer_$787_storage_$dyn_storage",
															"typeString": "struct ISimpleExchange.Offer storage ref[] storage ref"
														}
													},
													"id": 1032,
													"indexExpression": {
														"id": 1031,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "24676:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24669:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Offer_$787_storage",
														"typeString": "struct ISimpleExchange.Offer storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24648:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1037,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24726:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24730:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24726:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1034,
																"name": "offer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "24699:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Offer_$787_memory_ptr",
																	"typeString": "struct ISimpleExchange.Offer memory"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24705:10:0",
															"memberName": "tokenToBuy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 784,
															"src": "24699:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$242",
																"typeString": "contract IERC20"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24716:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "24699:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24699:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1026,
												"id": 1040,
												"nodeType": "Return",
												"src": "24692:45:0"
											}
										]
									},
									"functionSelector": "1f6bb8e0",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOffTokenToBuy",
									"nameLocation": "24578:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "24604:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "24599:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "24599:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24598:12:0"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "24632:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "24632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24631:6:0"
									},
									"scope": 1076,
									"src": "24569:175:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "24823:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "text",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "24867:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1050,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24850:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "24854:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "24850:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24850:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1049,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "24840:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24840:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1055,
												"nodeType": "Return",
												"src": "24833:40:0"
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stringToByte",
									"nameLocation": "24759:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "text",
												"nameLocation": "24786:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "24772:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1043,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24772:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24771:20:0"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "24815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24814:9:0"
									},
									"scope": 1076,
									"src": "24750:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "24972:67:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1067,
																"name": "text1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "25003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1066,
															"name": "stringToByte",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "24990:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (string memory) pure returns (bytes32)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24990:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1070,
																"name": "text2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "25026:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1069,
															"name": "stringToByte",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "25013:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (string memory) pure returns (bytes32)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25013:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "24990:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1073,
												"nodeType": "Return",
												"src": "24983:49:0"
											}
										]
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compare",
									"nameLocation": "24895:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "text1",
												"nameLocation": "24917:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "24903:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24903:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "text2",
												"nameLocation": "24938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "24924:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24924:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24902:42:0"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "24967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24966:6:0"
									},
									"scope": 1076,
									"src": "24886:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1077,
							"src": "22619:2427:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "146:24900:0"
				},
				"id": 0
			}
		}
	}
}